var COMPODOC_SEARCH_INDEX = {
    "index": {"version":"2.3.9","fields":["title","body"],"fieldVectors":[["title/controllers/AppController.html",[0,1.916,1,2.437]],["body/controllers/AppController.html",[0,2.309,1,2.938,2,1.496,3,0.163,4,0.142,5,0.278,6,2.541,7,0.228,8,1.339,9,4.165,10,2.155,11,4.165,12,3.661,13,3.444,14,2.962,15,0.022,16,2.977,17,1.375,18,2.977,19,1.625,20,3.661,21,0.493,22,4.289,23,2.977,24,2.977,25,2.977,26,2.977,27,1.339,28,1.134,29,1.072,30,2.938,31,2.977,32,5.028,33,2.977,34,2.977,35,0.206,36,3.994,37,0.433,38,2.541,39,2.977,40,2.254,41,4.289,42,2.541,43,2.977,44,0.463,45,2.977,46,1.868,47,3.154,48,2.707,49,2.977,50,2.039,51,2.977,52,2.541,53,2.707,54,2.541,55,2.366,56,2.541,57,0.163,58,0.228,59,1.167,60,3.154,61,4.291,62,2.977,63,1.541,64,2.254,65,2.254,66,2.977,67,2.977,68,2.977,69,2.977,70,2.977,71,2.977,72,2.977,73,2.977,74,1.094,75,2.541,76,0.015,77,2.977,78,2.541,79,2.541,80,2.541,81,1.267,82,2.977,83,2.977,84,1.04,85,2.977,86,1.868,87,2.977,88,0.013,89,0.009]],["title/modules/AppModule.html",[90,1.674,91,2.437]],["body/modules/AppModule.html",[1,4.141,2,2.747,3,0.232,4,0.202,5,0.202,15,0.021,37,0.442,44,0.66,53,3.64,54,3.625,57,0.232,58,0.326,76,0.012,88,0.016,89,0.012,90,2.845,91,4.922,92,2.845,93,2.286,94,2.664,95,2.664,96,2.286,97,3.793,98,2.664,99,3.625,100,3.625,101,3.625,102,3.699,103,3.699,104,3.437,105,3.429,106,2.664,107,2.664,108,4.247,109,3.429,110,4.247,111,4.247]],["title/injectables/AppService.html",[53,1.916,112,0.419]],["body/injectables/AppService.html",[3,0.229,4,0.199,5,0.199,7,0.321,8,1.69,9,4.804,11,4.804,15,0.022,17,1.5,19,1.598,21,0.994,27,1.306,28,1.105,29,1.045,35,0.289,37,0.415,44,0.65,53,2.914,57,0.296,58,0.321,59,1.639,63,1.43,64,3.165,65,3.165,76,0.012,88,0.016,89,0.012,112,0.637,113,1.546,114,3.165,115,4.182,116,5.747,117,4.182,118,4.182,119,4.182,120,4.543,121,2.864,122,3.569,123,3.569,124,0.387,125,2.864,126,2.864,127,2.547,128,2.101,129,1.848,130,3.569,131,1.381,132,1.848,133,3.569]],["title/modules/AuthModule.html",[90,1.674,102,2.062]],["body/modules/AuthModule.html",[2,1.851,3,0.201,4,0.176,5,0.176,15,0.022,37,0.474,44,0.573,48,3.788,57,0.201,58,0.283,76,0.011,88,0.015,89,0.011,90,2.653,92,1.734,93,1.984,94,2.312,95,2.312,96,1.984,97,3.537,98,3.537,102,4.103,104,3.499,105,3.123,106,2.312,107,2.312,109,3.537,134,3.145,135,3.145,136,3.685,137,3.145,138,4.077,139,4.077,140,3.685,141,4.812,142,2.135,143,4.978,144,2.135,145,4.978,146,2.135,147,2.884,148,3.685,149,3.685,150,3.145,151,3.685,152,3.685,153,3.685,154,3.145]],["title/injectables/AuthService.html",[48,1.916,112,0.419]],["body/injectables/AuthService.html",[3,0.186,4,0.162,5,0.162,7,0.261,8,1.471,10,2.094,12,4.021,15,0.022,17,1.351,19,1.391,21,1.051,27,1.688,28,1.429,29,1.351,35,0.326,37,0.404,44,0.528,48,2.536,55,2.984,56,2.902,57,0.186,58,0.261,59,1.846,60,2.956,63,1.543,74,1.161,76,0.01,81,1.81,84,1.646,88,0.014,89,0.01,112,0.555,113,1.257,128,1.708,144,1.97,155,2.902,156,4.711,157,3.4,158,6.503,159,3.4,160,4.711,161,3.4,162,4.711,163,5.407,164,3.4,165,2.329,166,2.574,167,2.574,168,3.4,169,4.711,170,3.4,171,3.4,172,3.227,173,1.83,174,4.711,175,1.257,176,2.574,177,1.959,178,4.021,179,1.6,180,2.574,181,1.414,182,3.4,183,2.367,184,2.902,185,3.4,186,3.4]],["title/interfaces/Author.html",[124,0.329,187,1.479]],["body/interfaces/Author.html",[3,0.24,4,0.21,5,0.21,7,0.337,15,0.021,21,1.183,29,1.397,35,0.387,37,0.304,57,0.336,76,0.013,81,1.91,88,0.016,89,0.013,124,0.568,129,2.857,131,1.452,173,2.367,175,1.626,177,1.828,179,2.069,181,1.828,187,2.324,188,1.373,189,3.012,190,2.555,191,1.562,192,3.747,193,2.534,194,2.21,195,2.759,196,1.943,197,1.943,198,1.723,199,1.943,200,2.548]],["title/interfaces/CollationDocument.html",[124,0.329,201,1.916]],["body/interfaces/CollationDocument.html",[3,0.156,4,0.136,5,0.136,7,0.219,10,0.942,15,0.022,21,1.142,35,0.438,37,0.288,44,0.443,57,0.313,58,0.219,74,1.072,76,0.008,84,0.996,88,0.012,89,0.012,112,0.49,124,0.499,127,3.129,131,2.22,183,2.71,188,0.891,191,1.162,193,1.118,201,2.642,202,1.653,203,3.383,204,3.383,205,3.383,206,3.383,207,3.383,208,3.383,209,3.383,210,3.383,211,2.609,212,1.957,213,2.881,214,0.891,215,2.239,216,1.433,217,3.079,218,1.653,219,2.239,220,2.609,221,2.609,222,3.755,223,3.755,224,2.609,225,2.609,226,2.609,227,2.239,228,2.609,229,2.609,230,2.609,231,2.609,232,1.789,233,1.789,234,2.609,235,1.26,236,1.789,237,1.653,238,1.789,239,2.466,240,1.342,241,1.186,242,1.118,243,2.609,244,3.079,245,1.789,246,1.789,247,1.837]],["title/interfaces/Course.html",[124,0.329,194,1.788]],["body/interfaces/Course.html",[3,0.201,4,0.175,5,0.175,7,0.282,15,0.022,21,1.23,35,0.483,37,0.254,57,0.272,76,0.011,88,0.015,89,0.011,124,0.459,128,3.03,129,2.784,181,2.619,187,2.7,188,1.147,191,1.388,194,2.497,248,3.136,249,5.147,250,5.147,251,3.494,252,5.147,253,5.147,254,5.147,255,5.147,256,5.147,257,1.978,258,1.978,259,3.675]],["title/interfaces/CreateStudentDto.html",[124,0.329,260,2.232]],["body/interfaces/CreateStudentDto.html",[3,0.26,4,0.226,5,0.226,15,0.021,21,1.101,35,0.329,37,0.329,57,0.363,76,0.014,81,1.733,88,0.017,89,0.014,124,0.588,175,1.756,187,2.646,188,1.483,190,2.764,196,2.099,197,2.099,198,1.861,199,2.937,257,2.557,260,3.68,261,2.98,262,2.98,263,2.98,264,2.98,265,2.557]],["title/interfaces/CreateTutorDto.html",[124,0.329,264,2.232]],["body/interfaces/CreateTutorDto.html",[3,0.26,4,0.226,5,0.226,15,0.021,21,1.101,35,0.329,37,0.329,57,0.363,76,0.014,81,1.733,88,0.017,89,0.014,124,0.588,175,1.756,187,2.764,188,1.483,190,2.764,196,2.099,197,2.099,198,1.861,199,2.813,257,2.557,260,2.98,261,2.98,262,2.98,263,2.98,264,3.68,265,2.557]],["title/interfaces/CreateUserDto.html",[124,0.329,263,2.232]],["body/interfaces/CreateUserDto.html",[3,0.234,4,0.204,5,0.204,7,0.329,15,0.021,21,1.192,35,0.458,37,0.297,57,0.35,76,0.013,81,1.793,88,0.016,89,0.013,124,0.561,175,2.369,187,2.525,188,1.338,190,2.663,191,1.537,196,2.831,197,2.831,198,2.51,199,2.683,257,2.308,260,2.689,261,2.689,262,2.689,263,3.45,264,2.689,265,2.308]],["title/classes/Feed.html",[58,0.273,258,1.916]],["body/classes/Feed.html",[3,0.174,4,0.152,5,0.152,7,0.244,14,3.661,15,0.022,17,1.7,21,1.194,35,0.475,37,0.361,57,0.285,58,0.244,74,0.633,76,0.009,88,0.013,89,0.009,128,2.623,129,2.307,181,2.17,191,1.258,194,2.623,195,1.998,212,2.118,214,0.995,249,4.456,250,4.456,251,3.025,252,4.456,253,4.456,254,4.456,255,4.456,256,4.456,258,2.81,266,1.846,267,2.182,268,2.118,269,4.95,270,3.186,271,3.186,272,3.186,273,3.186,274,3.186,275,3.186,276,3.186,277,3.186,278,3.186,279,3.186,280,3.186,281,2.262,282,2.182,283,1.178,284,2.411,285,2.182,286,2.719]],["title/controllers/FeedController.html",[0,1.916,287,2.437]],["body/controllers/FeedController.html",[0,2.146,2,2.003,3,0.218,4,0.19,5,0.19,7,0.306,8,1.638,10,2.296,14,3.157,15,0.022,17,1.466,19,1.732,37,0.406,44,0.62,57,0.218,58,0.306,61,3.402,63,1.55,74,0.793,76,0.012,84,1.392,88,0.015,89,0.012,132,1.761,241,1.657,242,2.056,258,2.146,268,1.876,287,3.593,288,3.402,289,3.402,290,5.864,291,4.716,292,5.318,293,5.318,294,5.864,295,3.986,296,3.986,297,3.986,298,3.397,299,3.402,300,3.593,301,3.986,302,3.986,303,3.986,304,3.986,305,3.986,306,3.986]],["title/modules/FeedModule.html",[90,1.674,103,2.062]],["body/modules/FeedModule.html",[2,2.677,3,0.223,4,0.194,5,0.194,15,0.022,28,1.079,37,0.463,44,0.634,57,0.223,58,0.313,74,0.811,76,0.012,88,0.016,89,0.012,90,2.791,92,1.921,93,2.197,94,2.56,95,2.56,96,2.197,97,3.721,98,3.342,103,4.004,105,3.342,106,2.56,107,2.56,109,2.56,235,2.956,258,2.197,281,2.051,283,1.509,285,3.649,287,4.063,298,3.876,299,3.484,307,3.484,308,3.484,309,3.09,310,4.033,311,3.484,312,3.484,313,4.082,314,3.484,315,2.795,316,3.484,317,3.484]],["title/injectables/FeedService.html",[112,0.419,298,2.062]],["body/injectables/FeedService.html",[3,0.215,4,0.188,5,0.188,7,0.302,8,1.625,10,1.925,15,0.022,17,1.457,19,1.164,27,1.23,28,1.041,29,0.985,35,0.36,37,0.446,44,0.612,57,0.215,58,0.302,59,2.04,60,3.266,63,1.041,76,0.012,84,1.376,88,0.015,89,0.012,112,0.613,113,1.457,191,1.454,213,3.116,214,1.23,235,3.066,237,3.378,258,2.121,283,1.457,284,2.983,298,3.016,312,3.363,314,3.363,318,3.363,319,5.293,320,3.94,321,5.206,322,5.206,323,3.94,324,2.983,325,3.94,326,3.94,327,3.94,328,2.699,329,3.94,330,2.699,331,2.283,332,2.983]],["title/interfaces/IFeedController.html",[124,0.329,300,2.437]],["body/interfaces/IFeedController.html",[3,0.261,4,0.228,5,0.228,7,0.367,15,0.022,35,0.442,57,0.261,76,0.014,88,0.017,89,0.014,124,0.442,188,1.493,191,1.646,242,2.502,291,5.045,292,5.688,293,5.688,300,4.035,333,3.62,334,4.082,335,4.773]],["title/interfaces/IFeedService.html",[124,0.329,336,2.694]],["body/interfaces/IFeedService.html",[3,0.261,4,0.228,5,0.228,7,0.367,15,0.022,35,0.442,57,0.261,76,0.014,88,0.017,89,0.014,124,0.442,188,1.493,191,1.646,242,2.502,291,5.045,319,5.688,333,3.62,335,4.773,336,4.46,337,4.082,338,6.664]],["title/classes/JoiValidationPipe.html",[58,0.273,339,2.437]],["body/classes/JoiValidationPipe.html",[3,0.234,4,0.204,5,0.204,7,0.328,8,1.714,15,0.022,17,1.372,19,1.262,27,1.714,28,1.451,29,1.372,35,0.38,37,0.38,44,0.664,57,0.234,58,0.328,59,1.674,63,1.129,74,0.85,76,0.013,88,0.016,89,0.013,132,1.888,266,2.476,268,2.583,281,2.758,331,3.18,339,3.759,340,3.647,341,6.064,342,5.489,343,4.273,344,6.399,345,4.273,346,5.489,347,5.175,348,6.399,349,4.273,350,4.685,351,3.647,352,3.647,353,4.273,354,2.476,355,2.301,356,3.647]],["title/injectables/JwtAuthGuard.html",[112,0.419,357,2.437]],["body/injectables/JwtAuthGuard.html",[3,0.355,4,0.192,5,0.192,7,0.309,8,1.647,15,0.022,17,1.319,19,1.558,20,3.432,27,1.647,28,1.395,29,1.319,35,0.278,37,0.365,44,0.625,57,0.22,58,0.309,63,1.395,76,0.012,81,1.917,88,0.016,89,0.012,112,0.621,113,1.487,146,2.33,190,1.672,331,2.33,354,2.33,355,2.165,357,3.614,358,5.026,359,3.044,360,4.503,361,5.276,362,4.503,363,4.733,364,4.021,365,3.432,366,5.276,367,4.021,368,5.026,369,4.021,370,3.994,371,3.432,372,4.021,373,4.021,374,4.021,375,4.021,376,4.021,377,4.021,378,4.021,379,4.021]],["title/injectables/JwtConfigService.html",[112,0.419,147,2.062]],["body/injectables/JwtConfigService.html",[3,0.156,4,0.136,5,0.257,7,0.219,8,1.298,13,1.954,15,0.022,17,1.039,19,0.842,21,0.473,27,0.891,28,1.099,29,0.713,30,1.954,35,0.197,37,0.438,44,0.443,46,1.789,47,1.789,57,0.295,58,0.459,59,1.118,63,1.425,74,0.827,76,0.008,88,0.012,89,0.008,112,0.635,113,1.055,132,2.168,142,1.653,144,1.653,147,2.843,214,0.891,216,1.433,240,1.342,247,1.26,251,2.843,268,2.309,283,1.055,380,1.789,381,2.159,382,4.082,383,1.954,384,4.494,385,2.853,386,2.853,387,3.715,388,3.148,389,3.148,390,3.148,391,3.148,392,3.148,393,3.148,394,2.159,395,2.159,396,1.954,397,3.148,398,2.159,399,2.159,400,1.789,401,2.159,402,2.159,403,2.159,404,2.159,405,3.148,406,1.954,407,2.159,408,2.159,409,2.159,410,2.159,411,2.159,412,1.954,413,2.159,414,2.843,415,1.954,416,1.954,417,2.409,418,3.927,419,3.715,420,2.159,421,2.159,422,2.159,423,2.159,424,2.159,425,2.409,426,2.159,427,2.159,428,2.159,429,2.159,430,2.159,431,2.159,432,2.159,433,2.159,434,2.159,435,2.609,436,2.159,437,2.159,438,2.159,439,2.159,440,2.159,441,2.159,442,2.159]],["title/injectables/JwtStrategy.html",[112,0.419,138,2.232]],["body/injectables/JwtStrategy.html",[3,0.227,4,0.198,5,0.198,7,0.319,8,1.683,10,1.975,15,0.022,17,1.347,19,1.227,27,1.683,28,1.425,29,1.347,35,0.373,37,0.438,44,0.646,57,0.227,58,0.319,59,1.629,63,1.098,76,0.012,88,0.016,89,0.012,112,0.635,113,1.537,128,2.088,132,1.836,138,3.382,142,2.408,146,2.408,177,1.728,184,3.547,190,1.728,383,2.847,384,4.604,412,2.847,435,2.607,443,3.547,444,4.601,445,4.156,446,5.391,447,4.156,448,3.547,449,4.156,450,3.547,451,3.146,452,3.547,453,3.547,454,4.156,455,4.156,456,4.156,457,4.156,458,4.156,459,4.156,460,4.156]],["title/interfaces/Learner.html",[124,0.329,199,1.572]],["body/interfaces/Learner.html",[3,0.235,4,0.205,5,0.205,7,0.33,15,0.021,21,1.193,29,1.377,35,0.421,37,0.297,57,0.332,76,0.013,81,1.894,88,0.016,89,0.013,124,0.562,129,1.9,131,1.42,173,2.315,175,1.59,177,1.788,179,3.018,181,2.666,187,1.788,188,1.343,189,2.945,190,2.528,191,1.54,192,2.492,193,2.513,194,2.161,195,2.698,196,1.9,197,1.9,198,1.685,199,2.435,200,3.716]],["title/injectables/LocalAuthGuard.html",[50,2.437,112,0.419]],["body/injectables/LocalAuthGuard.html",[3,0.285,4,0.249,5,0.249,15,0.021,37,0.43,44,0.812,50,4.256,57,0.285,58,0.401,76,0.015,88,0.018,89,0.015,112,0.732,113,1.931,146,3.026,190,2.171,359,3.953,371,4.457,461,4.457,462,5.222]],["title/injectables/LocalStrategy.html",[112,0.419,139,2.232]],["body/injectables/LocalStrategy.html",[3,0.22,4,0.192,5,0.192,7,0.309,8,1.647,10,1.944,15,0.022,17,1.319,19,1.188,21,1.104,27,1.647,28,1.395,29,1.319,35,0.365,37,0.432,44,0.625,48,3.587,57,0.22,58,0.309,59,1.576,63,1.063,74,0.8,76,0.012,81,1.739,84,1.405,88,0.016,89,0.012,112,0.621,113,1.487,132,1.777,139,3.31,146,2.33,150,3.432,165,3.614,190,1.672,198,2.544,354,2.33,355,2.165,370,3.044,444,4.503,448,3.432,450,3.432,451,3.044,452,3.432,453,3.432,463,3.432,464,4.021,465,4.021,466,5.276,467,4.021,468,3.432,469,4.021,470,4.021]],["title/classes/Material.html",[58,0.273,471,2.062]],["body/classes/Material.html",[3,0.212,4,0.185,5,0.185,7,0.297,14,3.316,15,0.022,17,1.54,21,1.021,35,0.465,37,0.4,57,0.337,58,0.297,74,0.77,75,3.306,76,0.011,86,3.626,88,0.015,89,0.011,124,0.358,190,1.61,191,1.438,199,1.711,212,2.422,214,1.209,257,2.085,266,2.244,269,4.608,281,2.586,282,2.653,283,1.432,400,3.229,414,3.349,471,3.569,472,2.653,473,5.781,474,5.781,475,3.873,476,6.16,477,4.393,478,3.873,479,3.873,480,6.16,481,2.932,482,3.873,483,2.653,484,3.873,485,2.653,486,3.306]],["title/injectables/MongooseConfigService.html",[112,0.419,417,2.062]],["body/injectables/MongooseConfigService.html",[3,0.156,4,0.136,5,0.257,7,0.219,8,1.298,13,1.954,15,0.022,17,1.039,19,0.842,21,0.473,27,0.891,28,1.099,29,0.713,30,1.954,35,0.197,37,0.438,44,0.443,46,1.789,47,1.789,57,0.295,58,0.459,59,1.118,63,1.425,74,0.827,76,0.008,88,0.012,89,0.008,112,0.635,113,1.055,132,2.168,142,1.653,144,1.653,147,2.409,214,0.891,216,1.433,240,1.342,247,1.26,251,2.843,268,2.309,283,1.055,380,1.789,381,2.159,382,2.159,383,1.954,384,4.494,387,3.148,388,3.715,389,3.148,390,3.148,391,3.148,392,3.148,393,3.148,394,2.159,395,2.159,396,1.954,397,3.148,398,2.159,399,2.159,400,1.789,401,2.159,402,2.159,403,2.159,404,2.159,405,3.148,406,1.954,407,2.159,408,2.159,409,2.159,410,2.159,411,2.159,412,1.954,413,2.159,414,2.843,415,1.954,416,1.954,417,2.843,418,3.927,419,3.715,420,2.159,421,2.159,422,4.082,423,2.159,424,2.159,425,2.409,426,2.159,427,2.159,428,2.159,429,2.159,430,2.159,431,2.159,432,2.159,433,2.159,434,2.159,435,2.609,436,2.159,437,2.159,438,2.159,439,2.159,440,2.159,441,2.159,442,2.159,487,2.853,488,2.853]],["title/injectables/MulterConfigService.html",[112,0.419,425,2.062]],["body/injectables/MulterConfigService.html",[3,0.156,4,0.136,5,0.257,7,0.219,8,1.298,13,1.954,15,0.022,17,1.039,19,0.842,21,0.473,27,0.891,28,1.099,29,0.713,30,1.954,35,0.197,37,0.438,44,0.443,46,1.789,47,1.789,57,0.295,58,0.459,59,1.118,63,1.425,74,0.827,76,0.008,88,0.012,89,0.008,112,0.635,113,1.055,132,2.168,142,1.653,144,1.653,147,2.409,214,0.891,216,1.433,240,1.342,247,1.26,251,2.843,268,2.309,283,1.055,380,1.789,381,2.159,382,2.159,383,1.954,384,4.494,387,3.148,388,3.148,389,3.148,390,3.715,391,3.148,392,3.148,393,3.148,394,2.159,395,2.159,396,1.954,397,3.148,398,2.159,399,2.159,400,1.789,401,2.159,402,2.159,403,2.159,404,2.159,405,3.148,406,1.954,407,2.159,408,2.159,409,2.159,410,2.159,411,2.159,412,1.954,413,2.159,414,2.843,415,1.954,416,1.954,417,2.409,418,3.927,419,3.715,420,2.159,421,2.159,422,2.159,423,2.159,424,2.159,425,2.843,426,2.159,427,4.082,428,2.159,429,2.159,430,2.159,431,2.159,432,2.159,433,2.159,434,2.159,435,2.609,436,2.159,437,2.159,438,2.159,439,2.159,440,2.159,441,2.159,442,2.159,489,2.853,490,2.853]],["title/injectables/PaginateModel.html",[112,0.419,235,1.572]],["body/injectables/PaginateModel.html",[3,0.164,4,0.143,5,0.143,7,0.231,8,1.35,10,1.67,15,0.022,17,0.752,19,0.889,21,1.041,27,0.94,28,0.795,29,0.752,35,0.35,37,0.299,44,0.468,57,0.32,58,0.231,74,1.099,76,0.009,84,1.051,88,0.013,89,0.013,112,0.509,113,1.113,124,0.511,127,3.079,131,2.013,183,2.778,193,1.179,201,2.327,202,1.744,203,1.888,204,1.888,205,1.888,206,1.888,207,1.888,208,1.888,209,1.888,210,1.888,211,2.712,212,2.034,213,3.229,214,0.94,215,2.327,216,1.512,217,3.174,218,1.744,219,2.977,220,2.712,221,2.712,222,3.825,223,3.825,224,2.712,225,2.712,226,2.712,227,2.327,228,2.712,229,2.712,230,2.712,231,2.712,232,1.888,233,1.888,234,2.712,235,1.91,236,3.174,237,2.931,238,3.174,239,2.542,240,1.416,241,1.251,242,1.694,243,2.712,244,3.174,245,1.888,246,1.888,247,1.91,481,2.278,491,3.01,492,2.961,493,3.01]],["title/interfaces/PaginateOptions.html",[124,0.329,219,1.916]],["body/interfaces/PaginateOptions.html",[3,0.151,4,0.132,5,0.132,7,0.212,10,0.913,15,0.022,21,1.094,29,1.702,35,0.423,37,0.281,44,0.43,57,0.309,58,0.212,74,1.057,76,0.008,84,0.966,88,0.012,89,0.012,112,0.479,124,0.491,127,3.176,131,2.073,183,2.67,188,0.863,191,1.136,193,1.084,201,2.861,202,1.603,203,1.735,204,1.735,205,1.735,206,1.735,207,1.735,208,1.735,209,1.735,210,1.735,211,2.55,212,1.913,213,2.845,214,0.863,215,2.861,216,1.39,217,3.714,218,1.603,219,2.595,220,3.714,221,3.552,222,4.02,223,4.02,224,3.552,225,3.552,226,3.552,227,2.189,228,2.55,229,2.55,230,2.55,231,2.55,232,1.735,233,1.735,234,2.55,235,1.222,236,1.735,237,1.603,238,1.735,239,2.422,240,1.301,241,1.15,242,1.084,243,2.55,244,3.024,245,1.735,246,1.735,247,1.796]],["title/interfaces/PaginationResult.html",[124,0.329,227,1.916]],["body/interfaces/PaginationResult.html",[3,0.151,4,0.132,5,0.132,7,0.212,10,0.913,15,0.022,21,1.014,35,0.443,37,0.281,44,0.43,57,0.309,58,0.212,74,1.057,76,0.008,84,0.966,88,0.012,89,0.012,112,0.479,124,0.491,127,3.328,131,2.151,183,3.155,188,0.863,191,1.136,193,1.889,201,2.189,202,1.603,203,1.735,204,1.735,205,1.735,206,1.735,207,1.735,208,1.735,209,1.735,210,1.735,211,2.55,212,1.913,213,2.845,214,0.863,215,2.189,216,1.39,217,3.024,218,1.603,219,2.189,220,2.55,221,2.55,222,4.02,223,4.02,224,2.55,225,2.55,226,2.55,227,2.595,228,3.552,229,3.552,230,3.552,231,3.552,232,3.334,233,3.334,234,3.552,235,1.222,236,1.735,237,1.603,238,1.735,239,2.422,240,1.301,241,1.15,242,1.084,243,2.55,244,3.024,245,1.735,246,1.735,247,1.796]],["title/interfaces/PopulateOptions.html",[124,0.329,215,1.916]],["body/interfaces/PopulateOptions.html",[3,0.166,4,0.145,5,0.145,7,0.233,10,1.005,15,0.022,21,1.087,35,0.384,37,0.301,44,0.473,57,0.321,58,0.233,74,1.105,76,0.009,84,1.063,88,0.013,89,0.013,112,0.513,124,0.514,127,3.088,131,2.02,183,2.793,188,0.95,191,1.218,193,1.193,201,2.346,202,1.763,203,1.909,204,1.909,205,1.909,206,1.909,207,1.909,208,1.909,209,1.909,210,1.909,211,2.734,212,2.051,213,3.345,214,0.95,215,2.741,216,2.793,217,3.839,218,3.22,219,2.346,220,2.734,221,2.734,222,3.839,223,3.839,224,2.734,225,2.734,226,2.734,227,2.346,228,2.734,229,2.734,230,2.734,231,2.734,232,1.909,233,1.909,234,2.734,235,1.345,236,1.909,237,1.763,238,1.909,239,2.558,240,1.432,241,1.265,242,1.193,243,2.734,244,3.193,245,1.909,246,1.909,247,1.925]],["title/interfaces/QuestionnaireBody.html",[124,0.329,494,2.437]],["body/interfaces/QuestionnaireBody.html",[3,0.097,4,0.084,5,0.084,7,0.22,10,1.626,15,0.022,21,0.816,35,0.318,36,2.485,37,0.374,44,0.275,55,0.831,57,0.198,58,0.136,59,0.692,60,2.276,63,1.372,74,1.362,76,0.005,81,1.926,84,2.131,88,0.008,89,0.005,112,0.338,124,0.163,126,1.21,127,1.707,128,1.823,131,0.583,165,2.485,167,1.337,172,1.967,173,1.546,175,1.7,176,3.163,177,1.508,179,1.707,180,2.174,181,1.194,183,1.443,188,0.552,191,0.802,193,1.422,198,1.422,213,2.1,214,0.552,239,1.443,242,1.422,265,1.953,283,0.653,324,1.337,328,2.485,330,2.485,331,2.421,332,1.337,354,2.664,355,2.913,471,1.024,483,1.21,492,1.967,494,2.485,495,1.21,496,3.48,497,1.21,498,1.337,499,1.337,500,1.337,501,0.951,502,1.21,503,1.337,504,1.024,505,1.21,506,1.337,507,1.508,508,1.508,509,1.508,510,1.508,511,1.508,512,1.508,513,1.508,514,1.508,515,3.097,516,2.451,517,1.508,518,1.508,519,1.508,520,2.451,521,1.508,522,1.508,523,4.204,524,3.097,525,3.566,526,1.508,527,1.508,528,1.508,529,1.508,530,2.451,531,2.451,532,3.566,533,2.451,534,3.097,535,2.451,536,3.566,537,1.508,538,3.566,539,2.451,540,2.451,541,1.508,542,1.508,543,1.508,544,1.508,545,2.451,546,1.508,547,1.508,548,1.508,549,1.508,550,1.508,551,1.508,552,1.508,553,1.508,554,1.508,555,1.508,556,1.508,557,1.508,558,1.508,559,1.508,560,1.508,561,1.508,562,1.508,563,1.508,564,1.508,565,1.508,566,2.451,567,1.508,568,2.451,569,1.508,570,2.451,571,1.508,572,2.451,573,1.508,574,2.451,575,1.508,576,1.508,577,1.508,578,1.508,579,1.508,580,1.508,581,1.508,582,4.204,583,4.204,584,4.204,585,4.204,586,1.508,587,1.508,588,1.508,589,1.508,590,1.508,591,2.451,592,1.508,593,1.508,594,1.508,595,2.451,596,1.508]],["title/guards/RolesGaurd.html",[597,2.694,598,2.437]],["body/guards/RolesGaurd.html",[3,0.245,4,0.214,5,0.214,7,0.344,8,1.767,15,0.022,17,1.121,19,1.324,27,1.4,28,1.185,29,1.121,35,0.31,37,0.391,40,3.394,44,0.697,57,0.245,58,0.344,63,1.185,74,0.892,76,0.013,88,0.017,89,0.013,112,0.667,120,4.694,121,3.071,131,1.868,241,1.864,242,2.218,268,2.11,360,5.732,362,3.827,363,4.93,365,4.83,598,3.876,599,4.484,600,3.827,601,4.484,602,4.484,603,4.484]],["title/classes/Student.html",[58,0.273,501,1.916]],["body/classes/Student.html",[3,0.183,4,0.159,5,0.159,7,0.256,14,3.554,15,0.022,17,1.65,21,1.147,35,0.464,37,0.371,57,0.293,58,0.256,63,0.883,74,0.664,76,0.01,88,0.014,89,0.01,131,1.537,175,1.981,177,2.227,179,2.521,181,2.227,191,1.301,193,1.824,196,2.367,197,2.367,198,2.099,199,2.367,200,3.104,212,2.191,214,1.043,241,2.409,257,1.799,266,1.936,268,2.191,269,4.777,281,2.339,282,2.289,283,1.236,501,2.884,502,2.289,604,2.289,605,3.973,606,3.342,607,3.342,608,3.342,609,3.342,610,3.342,611,3.342,612,3.342,613,3.342,614,3.342,615,3.188,616,3.342,617,3.188,618,2.852,619,3.342,620,3.342,621,3.342,622,3.342]],["title/interfaces/Todo.html",[124,0.329,125,2.437]],["body/interfaces/Todo.html",[3,0.229,4,0.199,5,0.199,7,0.321,9,3.165,11,3.165,15,0.022,21,1.052,35,0.439,37,0.415,44,0.65,53,2.251,57,0.296,58,0.321,63,1.43,64,3.165,65,3.165,76,0.012,88,0.016,89,0.012,112,0.637,114,3.165,116,5.122,120,4.097,121,2.864,122,3.569,123,3.569,124,0.387,125,3.707,126,4.347,127,3.169,128,3.189,129,2.804,130,5.417,131,1.981,132,1.848,133,3.569,188,1.306,191,1.512]],["title/classes/Tutor.html",[58,0.273,504,2.062]],["body/classes/Tutor.html",[3,0.187,4,0.163,5,0.163,7,0.263,14,3.508,15,0.022,17,1.629,21,1.131,35,0.472,37,0.425,57,0.297,58,0.263,74,0.681,76,0.01,88,0.014,89,0.01,129,2.398,131,1.564,175,2.007,177,2.257,187,2.257,191,1.323,192,3.145,193,1.856,194,2.38,195,2.149,196,2.398,197,2.398,198,2.127,212,2.229,214,1.695,241,1.969,257,1.844,266,1.985,268,2.229,269,4.796,281,2.38,282,2.346,283,1.267,477,2.924,481,2.593,504,3.145,505,2.346,605,2.924,615,2.346,623,2.346,624,3.426,625,3.426,626,3.426,627,3.426,628,3.426,629,3.426,630,3.426,631,3.426,632,3.426,633,2.346,634,2.924]],["title/interfaces/User.html",[81,1.051,124,0.329]],["body/interfaces/User.html",[3,0.222,4,0.193,5,0.193,7,0.311,15,0.021,21,1.211,29,1.327,35,0.462,37,0.281,57,0.323,76,0.012,81,1.853,88,0.016,89,0.012,124,0.547,129,1.793,131,1.953,173,3.377,175,2.32,177,2.608,179,1.909,181,1.687,187,1.687,188,1.267,189,2.779,190,2.207,191,1.483,192,2.351,193,2.08,194,2.039,195,2.545,196,2.772,197,2.772,198,2.458,199,1.793,200,2.351]],["title/controllers/UserController.html",[0,1.916,635,2.437]],["body/controllers/UserController.html",[0,1.288,2,1.202,3,0.131,4,0.114,5,0.114,7,0.184,8,1.139,10,2.139,14,2.661,15,0.022,17,1.236,19,1.46,27,1.543,28,1.307,29,1.236,35,0.252,36,3.994,37,0.416,38,2.042,42,2.042,44,0.372,52,2.042,55,2.08,57,0.131,58,0.184,63,1.407,74,1.058,76,0.007,78,3.113,79,2.042,80,2.042,81,1.856,84,1.727,86,3.101,88,0.011,89,0.007,129,1.057,132,1.057,172,1.638,173,1.288,175,0.885,177,0.995,178,2.042,179,1.126,181,0.995,192,1.386,196,1.057,197,1.057,200,1.386,241,2.055,265,3.14,289,2.042,328,3.386,330,3.386,331,2.561,335,1.638,339,3.027,351,2.042,354,3.084,355,2.865,356,3.772,357,1.638,368,2.042,370,1.811,496,1.811,498,1.811,499,1.811,501,1.288,598,1.638,635,2.498,636,1.811,637,2.392,638,3.647,639,3.647,640,3.647,641,3.647,642,2.392,643,2.392,644,3.647,645,2.392,646,2.392,647,2.392,648,2.392,649,2.392,650,2.392,651,2.392,652,2.392,653,2.392,654,2.392,655,2.392,656,2.392,657,2.392,658,1.811,659,1.811,660,2.392,661,2.392,662,2.042,663,2.392,664,2.392,665,2.392,666,2.042,667,3.113,668,2.392,669,2.392,670,2.392,671,2.392,672,2.392,673,2.392,674,2.392,675,2.392,676,2.392,677,2.392,678,2.392,679,2.392,680,4.943,681,2.392,682,2.392,683,2.392,684,3.647,685,2.392,686,2.392,687,3.647,688,2.392,689,3.647,690,2.392,691,2.392,692,2.392,693,2.392,694,2.392,695,2.392,696,2.392,697,2.392,698,2.392,699,2.392,700,2.392,701,2.392,702,2.392]],["title/modules/UserModule.html",[90,1.674,104,1.916]],["body/modules/UserModule.html",[2,2.576,3,0.21,4,0.184,5,0.184,15,0.022,28,1.524,37,0.465,44,0.599,55,3.334,57,0.21,58,0.295,74,0.766,76,0.011,88,0.015,89,0.011,90,2.713,92,1.812,93,2.073,94,2.416,95,2.416,96,2.073,97,3.616,98,3.616,104,3.617,105,3.217,106,2.416,107,2.416,109,2.416,281,2.896,283,1.424,310,3.881,311,3.287,315,2.638,317,3.287,471,2.231,485,3.512,500,2.915,501,2.073,503,2.915,504,2.231,506,2.915,617,3.512,633,3.512,635,3.948,662,3.287,703,3.287,704,3.287,705,3.287,706,2.915,707,3.851,708,3.287,709,3.287,710,3.287]],["title/injectables/UserService.html",[55,1.674,112,0.419]],["body/injectables/UserService.html",[3,0.084,4,0.074,5,0.074,7,0.197,8,0.804,10,2.075,15,0.022,17,1.224,19,1.364,21,0.85,27,1.529,28,1.295,29,1.224,35,0.368,36,3.355,37,0.355,44,0.24,55,1.211,57,0.181,58,0.119,59,1.008,60,2.074,63,1.295,74,1.336,76,0.005,81,1.816,84,2.053,88,0.008,89,0.005,112,0.303,113,0.572,124,0.143,126,1.059,127,1.556,128,1.661,131,0.51,165,2.64,167,1.17,172,1.763,173,1.386,175,1.583,176,2.917,177,1.374,179,1.556,180,1.948,181,1.07,183,1.293,193,0.606,198,1.295,213,2.761,214,0.483,239,1.293,242,1.81,265,2.637,283,0.572,324,1.17,328,2.264,330,2.264,331,2.233,332,1.17,354,2.48,355,2.762,471,0.896,483,1.059,492,1.763,494,2.64,495,1.059,496,1.948,497,1.059,498,1.17,499,1.17,500,1.17,501,0.832,502,1.059,503,1.17,504,0.896,505,1.059,506,1.17,507,1.32,508,2.197,509,1.32,510,2.821,511,1.32,512,2.821,513,2.197,514,1.32,515,2.821,516,2.197,517,1.32,518,1.32,519,1.32,520,2.197,521,1.32,522,1.32,523,3.943,524,2.821,525,3.943,526,2.821,527,1.32,528,1.32,529,2.197,530,2.197,531,2.197,532,3.289,533,2.197,534,2.821,535,2.197,536,3.289,537,1.32,538,3.289,539,2.197,540,2.197,541,2.197,542,1.32,543,1.32,544,2.197,545,2.197,546,1.32,547,2.197,548,1.32,549,1.32,550,1.32,551,1.32,552,1.32,553,1.32,554,1.32,555,1.32,556,1.32,557,1.32,558,1.32,559,1.32,560,1.32,561,1.32,562,1.32,563,1.32,564,1.32,565,1.32,566,2.197,567,1.32,568,2.197,569,1.32,570,2.197,571,1.32,572,2.197,573,1.32,574,2.197,575,1.32,576,1.32,577,1.32,578,1.32,579,1.32,580,1.32,581,1.32,582,3.943,583,3.943,584,3.943,585,3.943,586,1.32,587,1.32,588,1.32,589,1.32,590,1.32,591,2.197,592,1.32,593,1.32,594,1.32,595,2.197,596,1.32,711,2.574,712,2.574,713,2.574,714,2.574,715,1.546,716,1.546,717,1.546,718,1.546,719,1.546,720,1.546,721,1.546,722,1.546,723,1.546]],["title/coverage.html",[724,3.68]],["body/coverage.html",[0,2.357,1,1.613,5,0.112,6,2.01,15,0.022,35,0.163,48,1.268,50,1.613,53,1.268,55,1.108,58,0.405,76,0.007,81,1.064,88,0.011,89,0.007,92,1.108,96,1.268,112,0.76,114,2.728,124,0.621,125,1.613,138,1.477,139,1.477,147,1.365,155,2.01,166,1.783,187,0.979,189,2.998,194,1.183,199,1.041,201,1.268,202,3.062,215,1.268,219,1.268,227,1.268,235,1.041,247,3.253,248,3.076,258,1.94,260,1.477,261,2.746,262,2.746,263,1.477,264,1.477,267,2.468,285,1.613,287,1.613,288,2.01,298,1.365,300,1.613,309,1.783,315,2.468,318,2.01,333,2.728,334,2.01,335,2.468,336,1.783,337,2.01,339,1.613,340,2.01,355,1.268,357,1.613,358,2.01,359,2.728,380,3.076,414,1.365,417,1.365,425,1.365,443,2.01,461,2.01,463,2.01,471,1.365,472,2.468,485,1.613,494,1.613,495,2.468,497,1.613,501,1.268,504,1.365,597,1.783,598,1.613,600,2.01,604,2.468,617,1.613,623,2.468,633,1.613,635,1.613,636,2.728,658,1.783,659,1.783,706,1.783,724,1.783,725,2.355,726,2.355,727,2.355,728,5.8,729,5.8,730,6.132,731,6.892,732,6.667,733,2.01,734,2.01,735,2.01,736,2.01,737,2.01,738,2.01,739,3.604,740,3.604,741,2.01,742,3.604,743,4.377,744,2.355,745,3.076,746,2.355,747,3.076,748,3.076,749,2.01,750,2.355,751,2.355]],["title/dependencies.html",[93,2.305,752,2.969]],["body/dependencies.html",[15,0.022,44,0.666,46,2.689,47,3.45,76,0.013,88,0.016,89,0.013,93,2.308,121,2.936,142,2.484,144,2.484,146,2.484,214,1.896,283,1.585,347,3.659,352,3.659,396,2.936,435,2.689,451,4.597,468,3.659,615,2.936,753,6.073,754,4.287,755,4.287,756,4.287,757,4.287,758,4.287,759,4.287,760,4.287,761,4.287,762,4.287,763,4.287,764,4.287,765,4.287,766,4.287,767,4.287,768,4.287,769,4.287,770,4.287,771,4.287,772,4.287,773,3.659,774,3.659,775,4.287,776,4.287,777,4.287,778,4.287,779,4.287,780,4.287,781,4.287,782,4.287,783,4.287,784,4.287,785,4.287,786,4.287]],["title/miscellaneous/functions.html",[787,1.72,788,3.654]],["body/miscellaneous/functions.html",[7,0.404,15,0.02,19,1.554,27,1.643,28,1.391,29,1.315,35,0.364,76,0.015,86,3.301,88,0.018,89,0.015,96,3.583,636,3.984,666,4.492,667,4.492,741,4.492,749,5.328,787,3.049,788,4.492,789,5.263,790,5.263]],["title/index.html",[7,0.228,791,2.969,792,2.969]],["body/index.html",[4,0.197,15,0.021,76,0.012,88,0.016,89,0.012,187,1.723,251,2.401,406,2.838,724,3.137,793,4.144,794,4.144,795,5.38,796,4.144,797,4.144,798,4.144,799,4.144,800,4.144,801,4.144,802,5.975,803,4.144,804,4.144,805,4.144,806,4.144,807,6.839,808,4.144,809,4.144,810,6.717,811,4.144,812,4.144,813,5.38,814,4.144,815,4.144,816,4.144,817,4.144,818,5.38,819,5.38,820,4.144,821,4.144,822,4.144,823,5.38,824,5.38,825,4.144,826,4.144,827,4.144,828,4.144,829,4.144,830,3.536,831,4.144,832,4.144,833,4.144,834,4.144,835,4.144,836,4.144,837,4.144,838,4.144,839,4.144,840,4.144,841,4.144,842,4.144,843,4.144,844,4.144,845,4.144,846,4.144,847,4.144]],["title/modules.html",[92,2.288]],["body/modules.html",[15,0.018,76,0.016,88,0.018,89,0.016,91,3.618,92,2.486,102,3.061,103,3.061,104,2.844,830,5.882,848,6.892,849,6.892,850,6.892]],["title/overview.html",[851,4.149]],["body/overview.html",[2,1.957,15,0.021,48,3.627,53,3.121,55,3.17,76,0.011,88,0.015,89,0.011,90,1.833,91,4.789,92,1.833,93,2.097,94,2.444,95,2.444,96,2.097,97,2.444,98,2.444,99,3.324,100,3.324,101,3.324,102,4.112,103,3.904,104,3.627,105,3.241,106,2.444,107,2.444,113,1.44,134,3.324,135,3.324,137,3.324,138,3.637,139,3.637,188,1.216,235,2.562,239,1.957,266,2.257,298,3.359,307,3.324,308,3.324,597,2.948,703,3.324,704,3.324,705,3.324,851,3.324,852,3.895,853,3.895,854,3.895,855,3.895,856,3.895]],["title/miscellaneous/typealiases.html",[787,1.72,857,4.281]],["body/miscellaneous/typealiases.html",[7,0.389,15,0.018,35,0.422,76,0.015,81,1.802,88,0.018,89,0.015,261,3.179,262,3.828,265,3.285,267,3.47,284,4.619,472,3.47,483,4.18,492,3.47,495,3.47,502,4.18,505,4.18,604,3.47,623,3.47,787,2.936,858,5.067,859,4.325,860,4.325,861,4.325,862,4.325,863,5.067,864,4.325]],["title/miscellaneous/variables.html",[787,1.72,865,3.654]],["body/miscellaneous/variables.html",[7,0.195,10,1.261,15,0.022,21,0.845,28,1.445,35,0.378,40,1.926,63,1.348,74,1.142,76,0.007,81,1.128,84,1.603,86,1.596,88,0.011,89,0.007,92,1.798,102,1.474,103,1.474,104,1.37,109,2.397,129,1.124,141,3.261,154,3.261,166,2.892,175,1.413,177,1.588,179,1.197,181,1.058,192,1.474,196,1.688,197,1.688,198,1.999,200,1.474,218,2.214,240,1.197,241,1.058,242,1.497,247,1.124,267,1.742,281,2.885,285,3.142,286,2.171,309,1.926,310,2.892,315,3.493,316,2.171,350,5.771,363,1.926,380,1.596,400,4.242,414,2.214,415,1.742,416,1.742,417,1.474,418,1.742,425,1.474,472,1.742,485,3.142,486,2.171,497,2.617,604,1.742,615,1.742,617,3.493,618,2.171,623,1.742,633,3.142,634,2.171,658,2.892,659,2.892,706,1.926,708,2.171,709,3.261,710,2.171,733,2.171,734,3.261,735,2.171,736,2.171,737,3.261,738,2.171,745,2.171,747,2.171,748,3.916,773,2.171,774,2.171,787,1.474,859,2.171,860,2.171,861,2.171,862,2.171,864,3.261,865,2.171,866,2.544,867,2.544,868,3.821,869,2.544,870,2.544,871,2.544,872,2.544,873,2.544,874,2.544,875,2.544,876,2.544,877,3.821,878,3.821,879,5.956,880,3.821,881,2.544,882,2.544,883,2.544,884,2.544,885,2.544,886,3.821,887,2.544,888,3.821,889,2.544,890,3.821,891,2.544,892,2.544,893,2.544,894,2.544,895,2.544,896,2.544,897,2.544,898,2.544,899,2.544,900,2.544,901,2.544,902,2.544,903,2.544,904,2.544]]],"invertedIndex":[["",{"_index":15,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"interfaces/Author.html":{},"interfaces/CollationDocument.html":{},"interfaces/Course.html":{},"interfaces/CreateStudentDto.html":{},"interfaces/CreateTutorDto.html":{},"interfaces/CreateUserDto.html":{},"classes/Feed.html":{},"controllers/FeedController.html":{},"modules/FeedModule.html":{},"injectables/FeedService.html":{},"interfaces/IFeedController.html":{},"interfaces/IFeedService.html":{},"classes/JoiValidationPipe.html":{},"injectables/JwtAuthGuard.html":{},"injectables/JwtConfigService.html":{},"injectables/JwtStrategy.html":{},"interfaces/Learner.html":{},"injectables/LocalAuthGuard.html":{},"injectables/LocalStrategy.html":{},"classes/Material.html":{},"injectables/MongooseConfigService.html":{},"injectables/MulterConfigService.html":{},"injectables/PaginateModel.html":{},"interfaces/PaginateOptions.html":{},"interfaces/PaginationResult.html":{},"interfaces/PopulateOptions.html":{},"interfaces/QuestionnaireBody.html":{},"guards/RolesGaurd.html":{},"classes/Student.html":{},"interfaces/Todo.html":{},"classes/Tutor.html":{},"interfaces/User.html":{},"controllers/UserController.html":{},"modules/UserModule.html":{},"injectables/UserService.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/functions.html":{},"index.html":{},"modules.html":{},"overview.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["0",{"_index":247,"title":{},"body":{"interfaces/CollationDocument.html":{},"injectables/JwtConfigService.html":{},"injectables/MongooseConfigService.html":{},"injectables/MulterConfigService.html":{},"injectables/PaginateModel.html":{},"interfaces/PaginateOptions.html":{},"interfaces/PaginationResult.html":{},"interfaces/PopulateOptions.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["0.1.13",{"_index":780,"title":{},"body":{"dependencies.html":{}}}],["0.14.0",{"_index":772,"title":{},"body":{"dependencies.html":{}}}],["0.4.1",{"_index":776,"title":{},"body":{"dependencies.html":{}}}],["0.6.3",{"_index":754,"title":{},"body":{"dependencies.html":{}}}],["0/1",{"_index":731,"title":{},"body":{"coverage.html":{}}}],["0/10",{"_index":744,"title":{},"body":{"coverage.html":{}}}],["0/12",{"_index":739,"title":{},"body":{"coverage.html":{}}}],["0/2",{"_index":740,"title":{},"body":{"coverage.html":{}}}],["0/3",{"_index":730,"title":{},"body":{"coverage.html":{}}}],["0/4",{"_index":729,"title":{},"body":{"coverage.html":{}}}],["0/5",{"_index":728,"title":{},"body":{"coverage.html":{}}}],["0/7",{"_index":746,"title":{},"body":{"coverage.html":{}}}],["0/8",{"_index":743,"title":{},"body":{"coverage.html":{}}}],["0/9",{"_index":742,"title":{},"body":{"coverage.html":{}}}],["1",{"_index":239,"title":{},"body":{"interfaces/CollationDocument.html":{},"injectables/PaginateModel.html":{},"interfaces/PaginateOptions.html":{},"interfaces/PaginationResult.html":{},"interfaces/PopulateOptions.html":{},"interfaces/QuestionnaireBody.html":{},"injectables/UserService.html":{},"overview.html":{}}}],["1.0.0",{"_index":778,"title":{},"body":{"dependencies.html":{}}}],["10",{"_index":240,"title":{},"body":{"interfaces/CollationDocument.html":{},"injectables/JwtConfigService.html":{},"injectables/MongooseConfigService.html":{},"injectables/MulterConfigService.html":{},"injectables/PaginateModel.html":{},"interfaces/PaginateOptions.html":{},"interfaces/PaginationResult.html":{},"interfaces/PopulateOptions.html":{},"miscellaneous/variables.html":{}}}],["12",{"_index":854,"title":{},"body":{"overview.html":{}}}],["16",{"_index":856,"title":{},"body":{"overview.html":{}}}],["17",{"_index":556,"title":{},"body":{"interfaces/QuestionnaireBody.html":{},"injectables/UserService.html":{}}}],["17.4.0",{"_index":768,"title":{},"body":{"dependencies.html":{}}}],["1hr",{"_index":442,"title":{},"body":{"injectables/JwtConfigService.html":{},"injectables/MongooseConfigService.html":{},"injectables/MulterConfigService.html":{}}}],["2.1.4",{"_index":761,"title":{},"body":{"dependencies.html":{}}}],["26",{"_index":559,"title":{},"body":{"interfaces/QuestionnaireBody.html":{},"injectables/UserService.html":{}}}],["3",{"_index":853,"title":{},"body":{"overview.html":{}}}],["3.0.2",{"_index":782,"title":{},"body":{"dependencies.html":{}}}],["35",{"_index":562,"title":{},"body":{"interfaces/QuestionnaireBody.html":{},"injectables/UserService.html":{}}}],["4",{"_index":852,"title":{},"body":{"overview.html":{}}}],["4.0.0",{"_index":777,"title":{},"body":{"dependencies.html":{}}}],["4.1.2",{"_index":767,"title":{},"body":{"dependencies.html":{}}}],["4.1.6",{"_index":786,"title":{},"body":{"dependencies.html":{}}}],["4.17.21",{"_index":769,"title":{},"body":{"dependencies.html":{}}}],["4.8.0",{"_index":763,"title":{},"body":{"dependencies.html":{}}}],["5",{"_index":855,"title":{},"body":{"overview.html":{}}}],["5.0.1",{"_index":765,"title":{},"body":{"dependencies.html":{}}}],["5.12.7",{"_index":770,"title":{},"body":{"dependencies.html":{}}}],["5000",{"_index":403,"title":{},"body":{"injectables/JwtConfigService.html":{},"injectables/MongooseConfigService.html":{},"injectables/MulterConfigService.html":{}}}],["6.6.6",{"_index":783,"title":{},"body":{"dependencies.html":{}}}],["7.1.1",{"_index":775,"title":{},"body":{"dependencies.html":{}}}],["7.1.5",{"_index":758,"title":{},"body":{"dependencies.html":{}}}],["7.2.0",{"_index":756,"title":{},"body":{"dependencies.html":{}}}],["7.2.4",{"_index":757,"title":{},"body":{"dependencies.html":{}}}],["7.6.15",{"_index":753,"title":{},"body":{"dependencies.html":{}}}],["8",{"_index":553,"title":{},"body":{"interfaces/QuestionnaireBody.html":{},"injectables/UserService.html":{}}}],["9",{"_index":518,"title":{},"body":{"interfaces/QuestionnaireBody.html":{},"injectables/UserService.html":{}}}],["9._",{"_index":517,"title":{},"body":{"interfaces/QuestionnaireBody.html":{},"injectables/UserService.html":{}}}],["_",{"_index":395,"title":{},"body":{"injectables/JwtConfigService.html":{},"injectables/MongooseConfigService.html":{},"injectables/MulterConfigService.html":{}}}],["_.split(str",{"_index":416,"title":{},"body":{"injectables/JwtConfigService.html":{},"injectables/MongooseConfigService.html":{},"injectables/MulterConfigService.html":{},"miscellaneous/variables.html":{}}}],["_id",{"_index":173,"title":{},"body":{"injectables/AuthService.html":{},"interfaces/Author.html":{},"interfaces/Learner.html":{},"interfaces/QuestionnaireBody.html":{},"interfaces/User.html":{},"controllers/UserController.html":{},"injectables/UserService.html":{}}}],["_r",{"_index":576,"title":{},"body":{"interfaces/QuestionnaireBody.html":{},"injectables/UserService.html":{}}}],["_r.foreach((i",{"_index":590,"title":{},"body":{"interfaces/QuestionnaireBody.html":{},"injectables/UserService.html":{}}}],["_r[0",{"_index":582,"title":{},"body":{"interfaces/QuestionnaireBody.html":{},"injectables/UserService.html":{}}}],["_r[1",{"_index":583,"title":{},"body":{"interfaces/QuestionnaireBody.html":{},"injectables/UserService.html":{}}}],["_r[2",{"_index":584,"title":{},"body":{"interfaces/QuestionnaireBody.html":{},"injectables/UserService.html":{}}}],["_r[3",{"_index":585,"title":{},"body":{"interfaces/QuestionnaireBody.html":{},"injectables/UserService.html":{}}}],["_r[index",{"_index":591,"title":{},"body":{"interfaces/QuestionnaireBody.html":{},"injectables/UserService.html":{}}}],["access_token",{"_index":185,"title":{},"body":{"injectables/AuthService.html":{}}}],["activist",{"_index":578,"title":{},"body":{"interfaces/QuestionnaireBody.html":{},"injectables/UserService.html":{}}}],["activistanswers",{"_index":551,"title":{},"body":{"interfaces/QuestionnaireBody.html":{},"injectables/UserService.html":{}}}],["activistsum",{"_index":568,"title":{},"body":{"interfaces/QuestionnaireBody.html":{},"injectables/UserService.html":{}}}],["aliases",{"_index":858,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["allowed",{"_index":698,"title":{},"body":{"controllers/UserController.html":{}}}],["alternate",{"_index":203,"title":{},"body":{"interfaces/CollationDocument.html":{},"injectables/PaginateModel.html":{},"interfaces/PaginateOptions.html":{},"interfaces/PaginationResult.html":{},"interfaces/PopulateOptions.html":{}}}],["amazing",{"_index":831,"title":{},"body":{"index.html":{}}}],["ans",{"_index":564,"title":{},"body":{"interfaces/QuestionnaireBody.html":{},"injectables/UserService.html":{}}}],["ans.reduce((prev",{"_index":565,"title":{},"body":{"interfaces/QuestionnaireBody.html":{},"injectables/UserService.html":{}}}],["answers",{"_index":496,"title":{},"body":{"interfaces/QuestionnaireBody.html":{},"controllers/UserController.html":{},"injectables/UserService.html":{}}}],["answers.map((i",{"_index":549,"title":{},"body":{"interfaces/QuestionnaireBody.html":{},"injectables/UserService.html":{}}}],["app",{"_index":809,"title":{},"body":{"index.html":{}}}],["app.controller",{"_index":110,"title":{},"body":{"modules/AppModule.html":{}}}],["app.service",{"_index":54,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{}}}],["appcontroller",{"_index":1,"title":{"controllers/AppController.html":{}},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"coverage.html":{}}}],["applications",{"_index":801,"title":{},"body":{"index.html":{}}}],["appmodule",{"_index":91,"title":{"modules/AppModule.html":{}},"body":{"modules/AppModule.html":{},"modules.html":{},"overview.html":{}}}],["appservice",{"_index":53,"title":{"injectables/AppService.html":{}},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"interfaces/Todo.html":{},"coverage.html":{},"overview.html":{}}}],["argumentmetadata",{"_index":348,"title":{},"body":{"classes/JoiValidationPipe.html":{}}}],["array",{"_index":193,"title":{},"body":{"interfaces/Author.html":{},"interfaces/CollationDocument.html":{},"interfaces/Learner.html":{},"injectables/PaginateModel.html":{},"interfaces/PaginateOptions.html":{},"interfaces/PaginationResult.html":{},"interfaces/PopulateOptions.html":{},"interfaces/QuestionnaireBody.html":{},"classes/Student.html":{},"classes/Tutor.html":{},"interfaces/User.html":{},"injectables/UserService.html":{}}}],["async",{"_index":10,"title":{},"body":{"controllers/AppController.html":{},"injectables/AuthService.html":{},"interfaces/CollationDocument.html":{},"controllers/FeedController.html":{},"injectables/FeedService.html":{},"injectables/JwtStrategy.html":{},"injectables/LocalStrategy.html":{},"injectables/PaginateModel.html":{},"interfaces/PaginateOptions.html":{},"interfaces/PaginationResult.html":{},"interfaces/PopulateOptions.html":{},"interfaces/QuestionnaireBody.html":{},"controllers/UserController.html":{},"injectables/UserService.html":{},"miscellaneous/variables.html":{}}}],["asyncmodelfactory",{"_index":897,"title":{},"body":{"miscellaneous/variables.html":{}}}],["auth.guard",{"_index":52,"title":{},"body":{"controllers/AppController.html":{},"controllers/UserController.html":{}}}],["auth.guard.ts",{"_index":359,"title":{},"body":{"injectables/JwtAuthGuard.html":{},"injectables/LocalAuthGuard.html":{},"coverage.html":{}}}],["auth.guard.ts:11",{"_index":364,"title":{},"body":{"injectables/JwtAuthGuard.html":{}}}],["auth.guard.ts:16",{"_index":367,"title":{},"body":{"injectables/JwtAuthGuard.html":{}}}],["auth.service",{"_index":150,"title":{},"body":{"modules/AuthModule.html":{},"injectables/LocalStrategy.html":{}}}],["auth/auth.service",{"_index":49,"title":{},"body":{"controllers/AppController.html":{}}}],["auth/jwt",{"_index":663,"title":{},"body":{"controllers/UserController.html":{}}}],["auth/local",{"_index":51,"title":{},"body":{"controllers/AppController.html":{}}}],["authguard",{"_index":371,"title":{},"body":{"injectables/JwtAuthGuard.html":{},"injectables/LocalAuthGuard.html":{}}}],["authguard('jwt",{"_index":372,"title":{},"body":{"injectables/JwtAuthGuard.html":{}}}],["authguard('local",{"_index":462,"title":{},"body":{"injectables/LocalAuthGuard.html":{}}}],["authmodule",{"_index":102,"title":{"modules/AuthModule.html":{}},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules.html":{},"overview.html":{},"miscellaneous/variables.html":{}}}],["author",{"_index":187,"title":{"interfaces/Author.html":{}},"body":{"interfaces/Author.html":{},"interfaces/Course.html":{},"interfaces/CreateStudentDto.html":{},"interfaces/CreateTutorDto.html":{},"interfaces/CreateUserDto.html":{},"interfaces/Learner.html":{},"classes/Tutor.html":{},"interfaces/User.html":{},"coverage.html":{},"index.html":{}}}],["authservice",{"_index":48,"title":{"injectables/AuthService.html":{}},"body":{"controllers/AppController.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"injectables/LocalStrategy.html":{},"coverage.html":{},"overview.html":{}}}],["autopopulate",{"_index":771,"title":{},"body":{"dependencies.html":{}}}],["await",{"_index":84,"title":{},"body":{"controllers/AppController.html":{},"injectables/AuthService.html":{},"interfaces/CollationDocument.html":{},"controllers/FeedController.html":{},"injectables/FeedService.html":{},"injectables/LocalStrategy.html":{},"injectables/PaginateModel.html":{},"interfaces/PaginateOptions.html":{},"interfaces/PaginationResult.html":{},"interfaces/PopulateOptions.html":{},"interfaces/QuestionnaireBody.html":{},"controllers/UserController.html":{},"injectables/UserService.html":{},"miscellaneous/variables.html":{}}}],["axios",{"_index":123,"title":{},"body":{"injectables/AppService.html":{},"interfaces/Todo.html":{}}}],["axiosresponse",{"_index":122,"title":{},"body":{"injectables/AppService.html":{},"interfaces/Todo.html":{}}}],["backers",{"_index":832,"title":{},"body":{"index.html":{}}}],["backwards",{"_index":204,"title":{},"body":{"interfaces/CollationDocument.html":{},"injectables/PaginateModel.html":{},"interfaces/PaginateOptions.html":{},"interfaces/PaginationResult.html":{},"interfaces/PopulateOptions.html":{}}}],["badrequestexception",{"_index":351,"title":{},"body":{"classes/JoiValidationPipe.html":{},"controllers/UserController.html":{}}}],["badrequestexception(error.message",{"_index":356,"title":{},"body":{"classes/JoiValidationPipe.html":{},"controllers/UserController.html":{}}}],["bcrypt",{"_index":764,"title":{},"body":{"dependencies.html":{}}}],["bcrypt.compare(password",{"_index":891,"title":{},"body":{"miscellaneous/variables.html":{}}}],["bcrypt.gensalt(saltrounds",{"_index":887,"title":{},"body":{"miscellaneous/variables.html":{}}}],["bcrypt.hash(password",{"_index":889,"title":{},"body":{"miscellaneous/variables.html":{}}}],["beautiful",{"_index":773,"title":{},"body":{"dependencies.html":{},"miscellaneous/variables.html":{}}}],["body",{"_index":36,"title":{},"body":{"controllers/AppController.html":{},"interfaces/QuestionnaireBody.html":{},"controllers/UserController.html":{},"injectables/UserService.html":{}}}],["body.answers",{"_index":701,"title":{},"body":{"controllers/UserController.html":{}}}],["boolean",{"_index":131,"title":{},"body":{"injectables/AppService.html":{},"interfaces/Author.html":{},"interfaces/CollationDocument.html":{},"interfaces/Learner.html":{},"injectables/PaginateModel.html":{},"interfaces/PaginateOptions.html":{},"interfaces/PaginationResult.html":{},"interfaces/PopulateOptions.html":{},"interfaces/QuestionnaireBody.html":{},"guards/RolesGaurd.html":{},"classes/Student.html":{},"interfaces/Todo.html":{},"classes/Tutor.html":{},"interfaces/User.html":{},"injectables/UserService.html":{}}}],["bootstrap",{"_index":96,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/FeedModule.html":{},"modules/UserModule.html":{},"coverage.html":{},"miscellaneous/functions.html":{},"overview.html":{}}}],["browse",{"_index":850,"title":{},"body":{"modules.html":{}}}],["browser",{"_index":848,"title":{},"body":{"modules.html":{}}}],["buffer",{"_index":476,"title":{},"body":{"classes/Material.html":{}}}],["building",{"_index":796,"title":{},"body":{"index.html":{}}}],["canactivate",{"_index":360,"title":{},"body":{"injectables/JwtAuthGuard.html":{},"guards/RolesGaurd.html":{}}}],["canactivate(context",{"_index":362,"title":{},"body":{"injectables/JwtAuthGuard.html":{},"guards/RolesGaurd.html":{}}}],["casefirst",{"_index":205,"title":{},"body":{"interfaces/CollationDocument.html":{},"injectables/PaginateModel.html":{},"interfaces/PaginateOptions.html":{},"interfaces/PaginationResult.html":{},"interfaces/PopulateOptions.html":{}}}],["caselevel",{"_index":206,"title":{},"body":{"interfaces/CollationDocument.html":{},"injectables/PaginateModel.html":{},"interfaces/PaginateOptions.html":{},"interfaces/PaginationResult.html":{},"interfaces/PopulateOptions.html":{}}}],["catch",{"_index":330,"title":{},"body":{"injectables/FeedService.html":{},"interfaces/QuestionnaireBody.html":{},"controllers/UserController.html":{},"injectables/UserService.html":{}}}],["cb",{"_index":431,"title":{},"body":{"injectables/JwtConfigService.html":{},"injectables/MongooseConfigService.html":{},"injectables/MulterConfigService.html":{}}}],["cb(null",{"_index":433,"title":{},"body":{"injectables/JwtConfigService.html":{},"injectables/MongooseConfigService.html":{},"injectables/MulterConfigService.html":{}}}],["class",{"_index":58,"title":{"classes/Feed.html":{},"classes/JoiValidationPipe.html":{},"classes/Material.html":{},"classes/Student.html":{},"classes/Tutor.html":{}},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"interfaces/CollationDocument.html":{},"classes/Feed.html":{},"controllers/FeedController.html":{},"modules/FeedModule.html":{},"injectables/FeedService.html":{},"classes/JoiValidationPipe.html":{},"injectables/JwtAuthGuard.html":{},"injectables/JwtConfigService.html":{},"injectables/JwtStrategy.html":{},"injectables/LocalAuthGuard.html":{},"injectables/LocalStrategy.html":{},"classes/Material.html":{},"injectables/MongooseConfigService.html":{},"injectables/MulterConfigService.html":{},"injectables/PaginateModel.html":{},"interfaces/PaginateOptions.html":{},"interfaces/PaginationResult.html":{},"interfaces/PopulateOptions.html":{},"interfaces/QuestionnaireBody.html":{},"guards/RolesGaurd.html":{},"classes/Student.html":{},"interfaces/Todo.html":{},"classes/Tutor.html":{},"controllers/UserController.html":{},"modules/UserModule.html":{},"injectables/UserService.html":{},"coverage.html":{}}}],["classes",{"_index":266,"title":{},"body":{"classes/Feed.html":{},"classes/JoiValidationPipe.html":{},"classes/Material.html":{},"classes/Student.html":{},"classes/Tutor.html":{},"overview.html":{}}}],["cluster_appmodule",{"_index":99,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_appmodule_imports",{"_index":100,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_appmodule_providers",{"_index":101,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_authmodule",{"_index":134,"title":{},"body":{"modules/AuthModule.html":{},"overview.html":{}}}],["cluster_authmodule_exports",{"_index":135,"title":{},"body":{"modules/AuthModule.html":{},"overview.html":{}}}],["cluster_authmodule_imports",{"_index":136,"title":{},"body":{"modules/AuthModule.html":{}}}],["cluster_authmodule_providers",{"_index":137,"title":{},"body":{"modules/AuthModule.html":{},"overview.html":{}}}],["cluster_feedmodule",{"_index":307,"title":{},"body":{"modules/FeedModule.html":{},"overview.html":{}}}],["cluster_feedmodule_providers",{"_index":308,"title":{},"body":{"modules/FeedModule.html":{},"overview.html":{}}}],["cluster_usermodule",{"_index":703,"title":{},"body":{"modules/UserModule.html":{},"overview.html":{}}}],["cluster_usermodule_exports",{"_index":704,"title":{},"body":{"modules/UserModule.html":{},"overview.html":{}}}],["cluster_usermodule_providers",{"_index":705,"title":{},"body":{"modules/UserModule.html":{},"overview.html":{}}}],["collation",{"_index":225,"title":{},"body":{"interfaces/CollationDocument.html":{},"injectables/PaginateModel.html":{},"interfaces/PaginateOptions.html":{},"interfaces/PaginationResult.html":{},"interfaces/PopulateOptions.html":{}}}],["collationdocument",{"_index":201,"title":{"interfaces/CollationDocument.html":{}},"body":{"interfaces/CollationDocument.html":{},"injectables/PaginateModel.html":{},"interfaces/PaginateOptions.html":{},"interfaces/PaginationResult.html":{},"interfaces/PopulateOptions.html":{},"coverage.html":{}}}],["completed",{"_index":130,"title":{},"body":{"injectables/AppService.html":{},"interfaces/Todo.html":{}}}],["config",{"_index":398,"title":{},"body":{"injectables/JwtConfigService.html":{},"injectables/MongooseConfigService.html":{},"injectables/MulterConfigService.html":{}}}],["config/configuration",{"_index":148,"title":{},"body":{"modules/AuthModule.html":{}}}],["config/modules",{"_index":111,"title":{},"body":{"modules/AppModule.html":{}}}],["config_module_options",{"_index":734,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["configmodule",{"_index":141,"title":{},"body":{"modules/AuthModule.html":{},"miscellaneous/variables.html":{}}}],["configmodule.forroot(config_module_options",{"_index":892,"title":{},"body":{"miscellaneous/variables.html":{}}}],["configmoduleoptions",{"_index":874,"title":{},"body":{"miscellaneous/variables.html":{}}}],["configservice",{"_index":384,"title":{},"body":{"injectables/JwtConfigService.html":{},"injectables/JwtStrategy.html":{},"injectables/MongooseConfigService.html":{},"injectables/MulterConfigService.html":{}}}],["configuration",{"_index":418,"title":{},"body":{"injectables/JwtConfigService.html":{},"injectables/MongooseConfigService.html":{},"injectables/MulterConfigService.html":{},"miscellaneous/variables.html":{}}}],["console.log(context",{"_index":373,"title":{},"body":{"injectables/JwtAuthGuard.html":{}}}],["console.log(error",{"_index":332,"title":{},"body":{"injectables/FeedService.html":{},"interfaces/QuestionnaireBody.html":{},"injectables/UserService.html":{}}}],["console.log(error.keyvalue",{"_index":690,"title":{},"body":{"controllers/UserController.html":{}}}],["console.log(file",{"_index":73,"title":{},"body":{"controllers/AppController.html":{}}}],["console.log(request.body",{"_index":603,"title":{},"body":{"guards/RolesGaurd.html":{}}}],["const",{"_index":74,"title":{},"body":{"controllers/AppController.html":{},"injectables/AuthService.html":{},"interfaces/CollationDocument.html":{},"classes/Feed.html":{},"controllers/FeedController.html":{},"modules/FeedModule.html":{},"classes/JoiValidationPipe.html":{},"injectables/JwtConfigService.html":{},"injectables/LocalStrategy.html":{},"classes/Material.html":{},"injectables/MongooseConfigService.html":{},"injectables/MulterConfigService.html":{},"injectables/PaginateModel.html":{},"interfaces/PaginateOptions.html":{},"interfaces/PaginationResult.html":{},"interfaces/PopulateOptions.html":{},"interfaces/QuestionnaireBody.html":{},"guards/RolesGaurd.html":{},"classes/Student.html":{},"classes/Tutor.html":{},"controllers/UserController.html":{},"modules/UserModule.html":{},"injectables/UserService.html":{},"miscellaneous/variables.html":{}}}],["constructor",{"_index":59,"title":{},"body":{"controllers/AppController.html":{},"injectables/AppService.html":{},"injectables/AuthService.html":{},"injectables/FeedService.html":{},"classes/JoiValidationPipe.html":{},"injectables/JwtConfigService.html":{},"injectables/JwtStrategy.html":{},"injectables/LocalStrategy.html":{},"injectables/MongooseConfigService.html":{},"injectables/MulterConfigService.html":{},"interfaces/QuestionnaireBody.html":{},"injectables/UserService.html":{}}}],["constructor(authservice",{"_index":464,"title":{},"body":{"injectables/LocalStrategy.html":{}}}],["constructor(configservice",{"_index":383,"title":{},"body":{"injectables/JwtConfigService.html":{},"injectables/JwtStrategy.html":{},"injectables/MongooseConfigService.html":{},"injectables/MulterConfigService.html":{}}}],["constructor(feedmodel",{"_index":320,"title":{},"body":{"injectables/FeedService.html":{}}}],["constructor(httpservice",{"_index":115,"title":{},"body":{"injectables/AppService.html":{}}}],["constructor(materialmodel",{"_index":715,"title":{},"body":{"injectables/UserService.html":{}}}],["constructor(private",{"_index":132,"title":{},"body":{"injectables/AppService.html":{},"controllers/FeedController.html":{},"classes/JoiValidationPipe.html":{},"injectables/JwtConfigService.html":{},"injectables/JwtStrategy.html":{},"injectables/LocalStrategy.html":{},"injectables/MongooseConfigService.html":{},"injectables/MulterConfigService.html":{},"interfaces/Todo.html":{},"controllers/UserController.html":{}}}],["constructor(schema",{"_index":343,"title":{},"body":{"classes/JoiValidationPipe.html":{}}}],["constructor(userservice",{"_index":157,"title":{},"body":{"injectables/AuthService.html":{}}}],["contants",{"_index":399,"title":{},"body":{"injectables/JwtConfigService.html":{},"injectables/MongooseConfigService.html":{},"injectables/MulterConfigService.html":{}}}],["contenttype",{"_index":473,"title":{},"body":{"classes/Material.html":{}}}],["context",{"_index":365,"title":{},"body":{"injectables/JwtAuthGuard.html":{},"guards/RolesGaurd.html":{}}}],["context.switchtohttp().getrequest",{"_index":602,"title":{},"body":{"guards/RolesGaurd.html":{}}}],["controller",{"_index":0,"title":{"controllers/AppController.html":{},"controllers/FeedController.html":{},"controllers/UserController.html":{}},"body":{"controllers/AppController.html":{},"controllers/FeedController.html":{},"controllers/UserController.html":{},"coverage.html":{}}}],["controller('/feeds",{"_index":303,"title":{},"body":{"controllers/FeedController.html":{}}}],["controller('users",{"_index":678,"title":{},"body":{"controllers/UserController.html":{}}}],["controller.interface",{"_index":302,"title":{},"body":{"controllers/FeedController.html":{}}}],["controller.interface.ts",{"_index":334,"title":{},"body":{"interfaces/IFeedController.html":{},"coverage.html":{}}}],["controllers",{"_index":2,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"modules/AuthModule.html":{},"controllers/FeedController.html":{},"modules/FeedModule.html":{},"controllers/UserController.html":{},"modules/UserModule.html":{},"overview.html":{}}}],["course",{"_index":194,"title":{"interfaces/Course.html":{}},"body":{"interfaces/Author.html":{},"interfaces/Course.html":{},"classes/Feed.html":{},"interfaces/Learner.html":{},"classes/Tutor.html":{},"interfaces/User.html":{},"coverage.html":{}}}],["coursescreated",{"_index":192,"title":{},"body":{"interfaces/Author.html":{},"interfaces/Learner.html":{},"classes/Tutor.html":{},"interfaces/User.html":{},"controllers/UserController.html":{},"miscellaneous/variables.html":{}}}],["coverage",{"_index":724,"title":{"coverage.html":{}},"body":{"coverage.html":{},"index.html":{}}}],["createdat",{"_index":249,"title":{},"body":{"interfaces/Course.html":{},"classes/Feed.html":{}}}],["createdby",{"_index":250,"title":{},"body":{"interfaces/Course.html":{},"classes/Feed.html":{}}}],["createduser",{"_index":687,"title":{},"body":{"controllers/UserController.html":{}}}],["createjwtoptions",{"_index":382,"title":{},"body":{"injectables/JwtConfigService.html":{},"injectables/MongooseConfigService.html":{},"injectables/MulterConfigService.html":{}}}],["creatematerialdto",{"_index":75,"title":{},"body":{"controllers/AppController.html":{},"classes/Material.html":{}}}],["createmongooseoptions",{"_index":422,"title":{},"body":{"injectables/JwtConfigService.html":{},"injectables/MongooseConfigService.html":{},"injectables/MulterConfigService.html":{}}}],["createmulteroptions",{"_index":427,"title":{},"body":{"injectables/JwtConfigService.html":{},"injectables/MongooseConfigService.html":{},"injectables/MulterConfigService.html":{}}}],["createparamdecorator",{"_index":900,"title":{},"body":{"miscellaneous/variables.html":{}}}],["createstudent",{"_index":711,"title":{},"body":{"injectables/UserService.html":{}}}],["createstudent(body",{"_index":529,"title":{},"body":{"interfaces/QuestionnaireBody.html":{},"injectables/UserService.html":{}}}],["createstudentdto",{"_index":260,"title":{"interfaces/CreateStudentDto.html":{}},"body":{"interfaces/CreateStudentDto.html":{},"interfaces/CreateTutorDto.html":{},"interfaces/CreateUserDto.html":{},"coverage.html":{}}}],["createstudentschema",{"_index":659,"title":{},"body":{"controllers/UserController.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["createtutor",{"_index":712,"title":{},"body":{"injectables/UserService.html":{}}}],["createtutor(body",{"_index":541,"title":{},"body":{"interfaces/QuestionnaireBody.html":{},"injectables/UserService.html":{}}}],["createtutordto",{"_index":264,"title":{"interfaces/CreateTutorDto.html":{}},"body":{"interfaces/CreateStudentDto.html":{},"interfaces/CreateTutorDto.html":{},"interfaces/CreateUserDto.html":{},"coverage.html":{}}}],["createtutorschema",{"_index":658,"title":{},"body":{"controllers/UserController.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["createuserdto",{"_index":263,"title":{"interfaces/CreateUserDto.html":{}},"body":{"interfaces/CreateStudentDto.html":{},"interfaces/CreateTutorDto.html":{},"interfaces/CreateUserDto.html":{},"coverage.html":{}}}],["ctx",{"_index":902,"title":{},"body":{"miscellaneous/variables.html":{}}}],["ctx.switchtohttp().getrequest",{"_index":903,"title":{},"body":{"miscellaneous/variables.html":{}}}],["current",{"_index":566,"title":{},"body":{"interfaces/QuestionnaireBody.html":{},"injectables/UserService.html":{}}}],["data",{"_index":86,"title":{},"body":{"controllers/AppController.html":{},"classes/Material.html":{},"controllers/UserController.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["data._id",{"_index":669,"title":{},"body":{"controllers/UserController.html":{}}}],["data.coursescreated",{"_index":674,"title":{},"body":{"controllers/UserController.html":{}}}],["data.email",{"_index":671,"title":{},"body":{"controllers/UserController.html":{}}}],["data.firstname",{"_index":668,"title":{},"body":{"controllers/UserController.html":{}}}],["data.isstudent",{"_index":672,"title":{},"body":{"controllers/UserController.html":{}}}],["data.lastname",{"_index":670,"title":{},"body":{"controllers/UserController.html":{}}}],["data.learningstyle",{"_index":677,"title":{},"body":{"controllers/UserController.html":{}}}],["data.level",{"_index":675,"title":{},"body":{"controllers/UserController.html":{}}}],["data.studentnumber",{"_index":676,"title":{},"body":{"controllers/UserController.html":{}}}],["data.title",{"_index":673,"title":{},"body":{"controllers/UserController.html":{}}}],["database",{"_index":404,"title":{},"body":{"injectables/JwtConfigService.html":{},"injectables/MongooseConfigService.html":{},"injectables/MulterConfigService.html":{}}}],["datalength",{"_index":245,"title":{},"body":{"interfaces/CollationDocument.html":{},"injectables/PaginateModel.html":{},"interfaces/PaginateOptions.html":{},"interfaces/PaginationResult.html":{},"interfaces/PopulateOptions.html":{}}}],["date",{"_index":480,"title":{},"body":{"classes/Material.html":{}}}],["date.now",{"_index":484,"title":{},"body":{"classes/Material.html":{}}}],["declarations",{"_index":95,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/FeedModule.html":{},"modules/UserModule.html":{},"overview.html":{}}}],["decorators",{"_index":14,"title":{},"body":{"controllers/AppController.html":{},"classes/Feed.html":{},"controllers/FeedController.html":{},"classes/Material.html":{},"classes/Student.html":{},"classes/Tutor.html":{},"controllers/UserController.html":{}}}],["decotators/user.decorator",{"_index":664,"title":{},"body":{"controllers/UserController.html":{}}}],["default",{"_index":400,"title":{},"body":{"injectables/JwtConfigService.html":{},"classes/Material.html":{},"injectables/MongooseConfigService.html":{},"injectables/MulterConfigService.html":{},"miscellaneous/variables.html":{}}}],["defined",{"_index":17,"title":{},"body":{"controllers/AppController.html":{},"injectables/AppService.html":{},"injectables/AuthService.html":{},"classes/Feed.html":{},"controllers/FeedController.html":{},"injectables/FeedService.html":{},"classes/JoiValidationPipe.html":{},"injectables/JwtAuthGuard.html":{},"injectables/JwtConfigService.html":{},"injectables/JwtStrategy.html":{},"injectables/LocalStrategy.html":{},"classes/Material.html":{},"injectables/MongooseConfigService.html":{},"injectables/MulterConfigService.html":{},"injectables/PaginateModel.html":{},"guards/RolesGaurd.html":{},"classes/Student.html":{},"classes/Tutor.html":{},"controllers/UserController.html":{},"injectables/UserService.html":{}}}],["delete",{"_index":294,"title":{},"body":{"controllers/FeedController.html":{}}}],["deletefeed",{"_index":291,"title":{},"body":{"controllers/FeedController.html":{},"interfaces/IFeedController.html":{},"interfaces/IFeedService.html":{}}}],["dependencies",{"_index":93,"title":{"dependencies.html":{}},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/FeedModule.html":{},"modules/UserModule.html":{},"dependencies.html":{},"overview.html":{}}}],["description",{"_index":251,"title":{},"body":{"interfaces/Course.html":{},"classes/Feed.html":{},"injectables/JwtConfigService.html":{},"injectables/MongooseConfigService.html":{},"injectables/MulterConfigService.html":{},"index.html":{}}}],["destination",{"_index":429,"title":{},"body":{"injectables/JwtConfigService.html":{},"injectables/MongooseConfigService.html":{},"injectables/MulterConfigService.html":{}}}],["determine",{"_index":713,"title":{},"body":{"injectables/UserService.html":{}}}],["determine(body",{"_index":547,"title":{},"body":{"interfaces/QuestionnaireBody.html":{},"injectables/UserService.html":{}}}],["determinelearningstyle",{"_index":638,"title":{},"body":{"controllers/UserController.html":{}}}],["determinelearningstyle(@body",{"_index":696,"title":{},"body":{"controllers/UserController.html":{}}}],["determinelearningstyle(body",{"_index":642,"title":{},"body":{"controllers/UserController.html":{}}}],["development",{"_index":406,"title":{},"body":{"injectables/JwtConfigService.html":{},"injectables/MongooseConfigService.html":{},"injectables/MulterConfigService.html":{},"index.html":{}}}],["diskstorage",{"_index":392,"title":{},"body":{"injectables/JwtConfigService.html":{},"injectables/MongooseConfigService.html":{},"injectables/MulterConfigService.html":{}}}],["docs",{"_index":228,"title":{},"body":{"interfaces/CollationDocument.html":{},"injectables/PaginateModel.html":{},"interfaces/PaginateOptions.html":{},"interfaces/PaginationResult.html":{},"interfaces/PopulateOptions.html":{}}}],["document",{"_index":212,"title":{},"body":{"interfaces/CollationDocument.html":{},"classes/Feed.html":{},"classes/Material.html":{},"injectables/PaginateModel.html":{},"interfaces/PaginateOptions.html":{},"interfaces/PaginationResult.html":{},"interfaces/PopulateOptions.html":{},"classes/Student.html":{},"classes/Tutor.html":{}}}],["documentation",{"_index":725,"title":{},"body":{"coverage.html":{}}}],["dto/create",{"_index":498,"title":{},"body":{"interfaces/QuestionnaireBody.html":{},"controllers/UserController.html":{},"injectables/UserService.html":{}}}],["e2e",{"_index":820,"title":{},"body":{"index.html":{}}}],["efficient",{"_index":797,"title":{},"body":{"index.html":{}}}],["email",{"_index":175,"title":{},"body":{"injectables/AuthService.html":{},"interfaces/Author.html":{},"interfaces/CreateStudentDto.html":{},"interfaces/CreateTutorDto.html":{},"interfaces/CreateUserDto.html":{},"interfaces/Learner.html":{},"interfaces/QuestionnaireBody.html":{},"classes/Student.html":{},"classes/Tutor.html":{},"interfaces/User.html":{},"controllers/UserController.html":{},"injectables/UserService.html":{},"miscellaneous/variables.html":{}}}],["emailpattern",{"_index":514,"title":{},"body":{"interfaces/QuestionnaireBody.html":{},"injectables/UserService.html":{}}}],["emailpattern.test(username",{"_index":521,"title":{},"body":{"interfaces/QuestionnaireBody.html":{},"injectables/UserService.html":{}}}],["endindex",{"_index":244,"title":{},"body":{"interfaces/CollationDocument.html":{},"injectables/PaginateModel.html":{},"interfaces/PaginateOptions.html":{},"interfaces/PaginationResult.html":{},"interfaces/PopulateOptions.html":{}}}],["environment",{"_index":413,"title":{},"body":{"injectables/JwtConfigService.html":{},"injectables/MongooseConfigService.html":{},"injectables/MulterConfigService.html":{}}}],["err",{"_index":368,"title":{},"body":{"injectables/JwtAuthGuard.html":{},"controllers/UserController.html":{}}}],["error",{"_index":331,"title":{},"body":{"injectables/FeedService.html":{},"classes/JoiValidationPipe.html":{},"injectables/JwtAuthGuard.html":{},"interfaces/QuestionnaireBody.html":{},"controllers/UserController.html":{},"injectables/UserService.html":{}}}],["error(`a",{"_index":533,"title":{},"body":{"interfaces/QuestionnaireBody.html":{},"injectables/UserService.html":{}}}],["error(error",{"_index":540,"title":{},"body":{"interfaces/QuestionnaireBody.html":{},"injectables/UserService.html":{}}}],["example",{"_index":381,"title":{},"body":{"injectables/JwtConfigService.html":{},"injectables/MongooseConfigService.html":{},"injectables/MulterConfigService.html":{}}}],["exec",{"_index":523,"title":{},"body":{"interfaces/QuestionnaireBody.html":{},"injectables/UserService.html":{}}}],["executioncontext",{"_index":363,"title":{},"body":{"injectables/JwtAuthGuard.html":{},"guards/RolesGaurd.html":{},"miscellaneous/variables.html":{}}}],["exist",{"_index":534,"title":{},"body":{"interfaces/QuestionnaireBody.html":{},"injectables/UserService.html":{}}}],["existinguserbyemail",{"_index":532,"title":{},"body":{"interfaces/QuestionnaireBody.html":{},"injectables/UserService.html":{}}}],["existinguserbystudentnumber",{"_index":535,"title":{},"body":{"interfaces/QuestionnaireBody.html":{},"injectables/UserService.html":{}}}],["expiresin",{"_index":441,"title":{},"body":{"injectables/JwtConfigService.html":{},"injectables/MongooseConfigService.html":{},"injectables/MulterConfigService.html":{}}}],["export",{"_index":57,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"interfaces/Author.html":{},"interfaces/CollationDocument.html":{},"interfaces/Course.html":{},"interfaces/CreateStudentDto.html":{},"interfaces/CreateTutorDto.html":{},"interfaces/CreateUserDto.html":{},"classes/Feed.html":{},"controllers/FeedController.html":{},"modules/FeedModule.html":{},"injectables/FeedService.html":{},"interfaces/IFeedController.html":{},"interfaces/IFeedService.html":{},"classes/JoiValidationPipe.html":{},"injectables/JwtAuthGuard.html":{},"injectables/JwtConfigService.html":{},"injectables/JwtStrategy.html":{},"interfaces/Learner.html":{},"injectables/LocalAuthGuard.html":{},"injectables/LocalStrategy.html":{},"classes/Material.html":{},"injectables/MongooseConfigService.html":{},"injectables/MulterConfigService.html":{},"injectables/PaginateModel.html":{},"interfaces/PaginateOptions.html":{},"interfaces/PaginationResult.html":{},"interfaces/PopulateOptions.html":{},"interfaces/QuestionnaireBody.html":{},"guards/RolesGaurd.html":{},"classes/Student.html":{},"interfaces/Todo.html":{},"classes/Tutor.html":{},"interfaces/User.html":{},"controllers/UserController.html":{},"modules/UserModule.html":{},"injectables/UserService.html":{}}}],["exports",{"_index":98,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/FeedModule.html":{},"modules/UserModule.html":{},"overview.html":{}}}],["express",{"_index":47,"title":{},"body":{"controllers/AppController.html":{},"injectables/JwtConfigService.html":{},"injectables/MongooseConfigService.html":{},"injectables/MulterConfigService.html":{},"dependencies.html":{}}}],["express.multer.file",{"_index":32,"title":{},"body":{"controllers/AppController.html":{}}}],["extends",{"_index":190,"title":{},"body":{"interfaces/Author.html":{},"interfaces/CreateStudentDto.html":{},"interfaces/CreateTutorDto.html":{},"interfaces/CreateUserDto.html":{},"injectables/JwtAuthGuard.html":{},"injectables/JwtStrategy.html":{},"interfaces/Learner.html":{},"injectables/LocalAuthGuard.html":{},"injectables/LocalStrategy.html":{},"classes/Material.html":{},"interfaces/User.html":{}}}],["extname",{"_index":394,"title":{},"body":{"injectables/JwtConfigService.html":{},"injectables/MongooseConfigService.html":{},"injectables/MulterConfigService.html":{}}}],["extractjwt",{"_index":449,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["extractjwt.fromauthheaderasbearertoken",{"_index":455,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["false",{"_index":457,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["feed",{"_index":258,"title":{"classes/Feed.html":{}},"body":{"interfaces/Course.html":{},"classes/Feed.html":{},"controllers/FeedController.html":{},"modules/FeedModule.html":{},"injectables/FeedService.html":{},"coverage.html":{}}}],["feed.controller",{"_index":313,"title":{},"body":{"modules/FeedModule.html":{}}}],["feed.name",{"_index":316,"title":{},"body":{"modules/FeedModule.html":{},"miscellaneous/variables.html":{}}}],["feed.service",{"_index":299,"title":{},"body":{"controllers/FeedController.html":{},"modules/FeedModule.html":{}}}],["feed/interfaces/feed.interface",{"_index":195,"title":{},"body":{"interfaces/Author.html":{},"classes/Feed.html":{},"interfaces/Learner.html":{},"classes/Tutor.html":{},"interfaces/User.html":{}}}],["feedcontroller",{"_index":287,"title":{"controllers/FeedController.html":{}},"body":{"controllers/FeedController.html":{},"modules/FeedModule.html":{},"coverage.html":{}}}],["feeddocument",{"_index":284,"title":{},"body":{"classes/Feed.html":{},"injectables/FeedService.html":{},"miscellaneous/typealiases.html":{}}}],["feedmodel",{"_index":322,"title":{},"body":{"injectables/FeedService.html":{}}}],["feedmodule",{"_index":103,"title":{"modules/FeedModule.html":{}},"body":{"modules/AppModule.html":{},"modules/FeedModule.html":{},"modules.html":{},"overview.html":{},"miscellaneous/variables.html":{}}}],["feeds",{"_index":290,"title":{},"body":{"controllers/FeedController.html":{}}}],["feedschema",{"_index":285,"title":{},"body":{"classes/Feed.html":{},"modules/FeedModule.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["feedservice",{"_index":298,"title":{"injectables/FeedService.html":{}},"body":{"controllers/FeedController.html":{},"modules/FeedModule.html":{},"injectables/FeedService.html":{},"coverage.html":{},"overview.html":{}}}],["fetchfeed",{"_index":338,"title":{},"body":{"interfaces/IFeedService.html":{}}}],["fetchfeeds",{"_index":319,"title":{},"body":{"injectables/FeedService.html":{},"interfaces/IFeedService.html":{}}}],["file",{"_index":5,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"interfaces/Author.html":{},"interfaces/CollationDocument.html":{},"interfaces/Course.html":{},"interfaces/CreateStudentDto.html":{},"interfaces/CreateTutorDto.html":{},"interfaces/CreateUserDto.html":{},"classes/Feed.html":{},"controllers/FeedController.html":{},"modules/FeedModule.html":{},"injectables/FeedService.html":{},"interfaces/IFeedController.html":{},"interfaces/IFeedService.html":{},"classes/JoiValidationPipe.html":{},"injectables/JwtAuthGuard.html":{},"injectables/JwtConfigService.html":{},"injectables/JwtStrategy.html":{},"interfaces/Learner.html":{},"injectables/LocalAuthGuard.html":{},"injectables/LocalStrategy.html":{},"classes/Material.html":{},"injectables/MongooseConfigService.html":{},"injectables/MulterConfigService.html":{},"injectables/PaginateModel.html":{},"interfaces/PaginateOptions.html":{},"interfaces/PaginationResult.html":{},"interfaces/PopulateOptions.html":{},"interfaces/QuestionnaireBody.html":{},"guards/RolesGaurd.html":{},"classes/Student.html":{},"interfaces/Todo.html":{},"classes/Tutor.html":{},"interfaces/User.html":{},"controllers/UserController.html":{},"modules/UserModule.html":{},"injectables/UserService.html":{},"coverage.html":{}}}],["fileinterceptor",{"_index":45,"title":{},"body":{"controllers/AppController.html":{}}}],["filename",{"_index":414,"title":{},"body":{"injectables/JwtConfigService.html":{},"classes/Material.html":{},"injectables/MongooseConfigService.html":{},"injectables/MulterConfigService.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["filename(file.originalname",{"_index":432,"title":{},"body":{"injectables/JwtConfigService.html":{},"injectables/MongooseConfigService.html":{},"injectables/MulterConfigService.html":{}}}],["files",{"_index":252,"title":{},"body":{"interfaces/Course.html":{},"classes/Feed.html":{}}}],["filterquery",{"_index":211,"title":{},"body":{"interfaces/CollationDocument.html":{},"injectables/PaginateModel.html":{},"interfaces/PaginateOptions.html":{},"interfaces/PaginationResult.html":{},"interfaces/PopulateOptions.html":{}}}],["findone",{"_index":525,"title":{},"body":{"interfaces/QuestionnaireBody.html":{},"injectables/UserService.html":{}}}],["findone(username",{"_index":513,"title":{},"body":{"interfaces/QuestionnaireBody.html":{},"injectables/UserService.html":{}}}],["firstname",{"_index":196,"title":{},"body":{"interfaces/Author.html":{},"interfaces/CreateStudentDto.html":{},"interfaces/CreateTutorDto.html":{},"interfaces/CreateUserDto.html":{},"interfaces/Learner.html":{},"classes/Student.html":{},"classes/Tutor.html":{},"interfaces/User.html":{},"controllers/UserController.html":{},"miscellaneous/variables.html":{}}}],["formattedanswers",{"_index":548,"title":{},"body":{"interfaces/QuestionnaireBody.html":{},"injectables/UserService.html":{}}}],["formattedanswers.slice(0",{"_index":552,"title":{},"body":{"interfaces/QuestionnaireBody.html":{},"injectables/UserService.html":{}}}],["formattedanswers.slice(18",{"_index":558,"title":{},"body":{"interfaces/QuestionnaireBody.html":{},"injectables/UserService.html":{}}}],["formattedanswers.slice(27",{"_index":561,"title":{},"body":{"interfaces/QuestionnaireBody.html":{},"injectables/UserService.html":{}}}],["formattedanswers.slice(9",{"_index":555,"title":{},"body":{"interfaces/QuestionnaireBody.html":{},"injectables/UserService.html":{}}}],["formatuserresponsedata",{"_index":749,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["formatuserresponsedata(createduser",{"_index":689,"title":{},"body":{"controllers/UserController.html":{}}}],["formatuserresponsedata(data",{"_index":666,"title":{},"body":{"controllers/UserController.html":{},"miscellaneous/functions.html":{}}}],["formatuserresponsedata(u",{"_index":681,"title":{},"body":{"controllers/UserController.html":{}}}],["formatuserresponsedata(updateduser",{"_index":702,"title":{},"body":{"controllers/UserController.html":{}}}],["framework",{"_index":795,"title":{},"body":{"index.html":{}}}],["function",{"_index":335,"title":{},"body":{"interfaces/IFeedController.html":{},"interfaces/IFeedService.html":{},"controllers/UserController.html":{},"coverage.html":{}}}],["functions",{"_index":788,"title":{"miscellaneous/functions.html":{}},"body":{"miscellaneous/functions.html":{}}}],["get('profile",{"_index":79,"title":{},"body":{"controllers/AppController.html":{},"controllers/UserController.html":{}}}],["get('todos",{"_index":22,"title":{},"body":{"controllers/AppController.html":{}}}],["get()@render('index",{"_index":16,"title":{},"body":{"controllers/AppController.html":{}}}],["getfeed",{"_index":292,"title":{},"body":{"controllers/FeedController.html":{},"interfaces/IFeedController.html":{}}}],["getfeeds",{"_index":293,"title":{},"body":{"controllers/FeedController.html":{},"interfaces/IFeedController.html":{}}}],["gethello",{"_index":9,"title":{},"body":{"controllers/AppController.html":{},"injectables/AppService.html":{},"interfaces/Todo.html":{}}}],["getprofile",{"_index":639,"title":{},"body":{"controllers/UserController.html":{}}}],["getprofile(@user",{"_index":80,"title":{},"body":{"controllers/AppController.html":{},"controllers/UserController.html":{}}}],["getprofile(user",{"_index":646,"title":{},"body":{"controllers/UserController.html":{}}}],["getsum",{"_index":563,"title":{},"body":{"interfaces/QuestionnaireBody.html":{},"injectables/UserService.html":{}}}],["getsum(activistanswers",{"_index":569,"title":{},"body":{"interfaces/QuestionnaireBody.html":{},"injectables/UserService.html":{}}}],["getsum(pragmatistanswers",{"_index":571,"title":{},"body":{"interfaces/QuestionnaireBody.html":{},"injectables/UserService.html":{}}}],["getsum(reflectoranswers",{"_index":573,"title":{},"body":{"interfaces/QuestionnaireBody.html":{},"injectables/UserService.html":{}}}],["getsum(theoristanswers",{"_index":575,"title":{},"body":{"interfaces/QuestionnaireBody.html":{},"injectables/UserService.html":{}}}],["getting",{"_index":791,"title":{"index.html":{}},"body":{}}],["gettodos",{"_index":11,"title":{},"body":{"controllers/AppController.html":{},"injectables/AppService.html":{},"interfaces/Todo.html":{}}}],["grow",{"_index":827,"title":{},"body":{"index.html":{}}}],["guard",{"_index":597,"title":{"guards/RolesGaurd.html":{}},"body":{"coverage.html":{},"overview.html":{}}}],["guards",{"_index":599,"title":{},"body":{"guards/RolesGaurd.html":{}}}],["guards/roles.guard",{"_index":665,"title":{},"body":{"controllers/UserController.html":{}}}],["handlerequest",{"_index":361,"title":{},"body":{"injectables/JwtAuthGuard.html":{}}}],["handlerequest(err",{"_index":366,"title":{},"body":{"injectables/JwtAuthGuard.html":{}}}],["handling",{"_index":426,"title":{},"body":{"injectables/JwtConfigService.html":{},"injectables/MongooseConfigService.html":{},"injectables/MulterConfigService.html":{}}}],["hash",{"_index":888,"title":{},"body":{"miscellaneous/variables.html":{}}}],["hashed",{"_index":890,"title":{},"body":{"miscellaneous/variables.html":{}}}],["hashpassword",{"_index":497,"title":{},"body":{"interfaces/QuestionnaireBody.html":{},"injectables/UserService.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["hashpassword(user.password",{"_index":531,"title":{},"body":{"interfaces/QuestionnaireBody.html":{},"injectables/UserService.html":{}}}],["hasnextpage",{"_index":231,"title":{},"body":{"interfaces/CollationDocument.html":{},"injectables/PaginateModel.html":{},"interfaces/PaginateOptions.html":{},"interfaces/PaginationResult.html":{},"interfaces/PopulateOptions.html":{}}}],["hasprevpage",{"_index":230,"title":{},"body":{"interfaces/CollationDocument.html":{},"injectables/PaginateModel.html":{},"interfaces/PaginateOptions.html":{},"interfaces/PaginationResult.html":{},"interfaces/PopulateOptions.html":{}}}],["hbs",{"_index":766,"title":{},"body":{"dependencies.html":{}}}],["hello",{"_index":64,"title":{},"body":{"controllers/AppController.html":{},"injectables/AppService.html":{},"interfaces/Todo.html":{}}}],["here",{"_index":838,"title":{},"body":{"index.html":{}}}],["httpmodule",{"_index":896,"title":{},"body":{"miscellaneous/variables.html":{}}}],["https://nestjs.com",{"_index":844,"title":{},"body":{"index.html":{}}}],["httpservice",{"_index":116,"title":{},"body":{"injectables/AppService.html":{},"interfaces/Todo.html":{}}}],["httpstatus",{"_index":369,"title":{},"body":{"injectables/JwtAuthGuard.html":{}}}],["httpstatus.unauthorized",{"_index":376,"title":{},"body":{"injectables/JwtAuthGuard.html":{}}}],["id",{"_index":128,"title":{},"body":{"injectables/AppService.html":{},"injectables/AuthService.html":{},"interfaces/Course.html":{},"classes/Feed.html":{},"injectables/JwtStrategy.html":{},"interfaces/QuestionnaireBody.html":{},"interfaces/Todo.html":{},"injectables/UserService.html":{}}}],["identifier",{"_index":726,"title":{},"body":{"coverage.html":{}}}],["ifeedcontroller",{"_index":300,"title":{"interfaces/IFeedController.html":{}},"body":{"controllers/FeedController.html":{},"interfaces/IFeedController.html":{},"coverage.html":{}}}],["ifeedservice",{"_index":336,"title":{"interfaces/IFeedService.html":{}},"body":{"interfaces/IFeedService.html":{},"coverage.html":{}}}],["ignoreexpiration",{"_index":456,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["image",{"_index":259,"title":{},"body":{"interfaces/Course.html":{}}}],["implements",{"_index":268,"title":{},"body":{"classes/Feed.html":{},"controllers/FeedController.html":{},"classes/JoiValidationPipe.html":{},"injectables/JwtConfigService.html":{},"injectables/MongooseConfigService.html":{},"injectables/MulterConfigService.html":{},"guards/RolesGaurd.html":{},"classes/Student.html":{},"classes/Tutor.html":{}}}],["import",{"_index":37,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"interfaces/Author.html":{},"interfaces/CollationDocument.html":{},"interfaces/Course.html":{},"interfaces/CreateStudentDto.html":{},"interfaces/CreateTutorDto.html":{},"interfaces/CreateUserDto.html":{},"classes/Feed.html":{},"controllers/FeedController.html":{},"modules/FeedModule.html":{},"injectables/FeedService.html":{},"classes/JoiValidationPipe.html":{},"injectables/JwtAuthGuard.html":{},"injectables/JwtConfigService.html":{},"injectables/JwtStrategy.html":{},"interfaces/Learner.html":{},"injectables/LocalAuthGuard.html":{},"injectables/LocalStrategy.html":{},"classes/Material.html":{},"injectables/MongooseConfigService.html":{},"injectables/MulterConfigService.html":{},"injectables/PaginateModel.html":{},"interfaces/PaginateOptions.html":{},"interfaces/PaginationResult.html":{},"interfaces/PopulateOptions.html":{},"interfaces/QuestionnaireBody.html":{},"guards/RolesGaurd.html":{},"classes/Student.html":{},"interfaces/Todo.html":{},"classes/Tutor.html":{},"interfaces/User.html":{},"controllers/UserController.html":{},"modules/UserModule.html":{},"injectables/UserService.html":{}}}],["imports",{"_index":109,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/FeedModule.html":{},"modules/UserModule.html":{},"miscellaneous/variables.html":{}}}],["index",{"_index":7,"title":{"index.html":{}},"body":{"controllers/AppController.html":{},"injectables/AppService.html":{},"injectables/AuthService.html":{},"interfaces/Author.html":{},"interfaces/CollationDocument.html":{},"interfaces/Course.html":{},"interfaces/CreateUserDto.html":{},"classes/Feed.html":{},"controllers/FeedController.html":{},"injectables/FeedService.html":{},"interfaces/IFeedController.html":{},"interfaces/IFeedService.html":{},"classes/JoiValidationPipe.html":{},"injectables/JwtAuthGuard.html":{},"injectables/JwtConfigService.html":{},"injectables/JwtStrategy.html":{},"interfaces/Learner.html":{},"injectables/LocalStrategy.html":{},"classes/Material.html":{},"injectables/MongooseConfigService.html":{},"injectables/MulterConfigService.html":{},"injectables/PaginateModel.html":{},"interfaces/PaginateOptions.html":{},"interfaces/PaginationResult.html":{},"interfaces/PopulateOptions.html":{},"interfaces/QuestionnaireBody.html":{},"guards/RolesGaurd.html":{},"classes/Student.html":{},"interfaces/Todo.html":{},"classes/Tutor.html":{},"interfaces/User.html":{},"controllers/UserController.html":{},"injectables/UserService.html":{},"miscellaneous/functions.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["info",{"_index":3,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"interfaces/Author.html":{},"interfaces/CollationDocument.html":{},"interfaces/Course.html":{},"interfaces/CreateStudentDto.html":{},"interfaces/CreateTutorDto.html":{},"interfaces/CreateUserDto.html":{},"classes/Feed.html":{},"controllers/FeedController.html":{},"modules/FeedModule.html":{},"injectables/FeedService.html":{},"interfaces/IFeedController.html":{},"interfaces/IFeedService.html":{},"classes/JoiValidationPipe.html":{},"injectables/JwtAuthGuard.html":{},"injectables/JwtConfigService.html":{},"injectables/JwtStrategy.html":{},"interfaces/Learner.html":{},"injectables/LocalAuthGuard.html":{},"injectables/LocalStrategy.html":{},"classes/Material.html":{},"injectables/MongooseConfigService.html":{},"injectables/MulterConfigService.html":{},"injectables/PaginateModel.html":{},"interfaces/PaginateOptions.html":{},"interfaces/PaginationResult.html":{},"interfaces/PopulateOptions.html":{},"interfaces/QuestionnaireBody.html":{},"guards/RolesGaurd.html":{},"classes/Student.html":{},"interfaces/Todo.html":{},"classes/Tutor.html":{},"interfaces/User.html":{},"controllers/UserController.html":{},"modules/UserModule.html":{},"injectables/UserService.html":{}}}],["info.message",{"_index":378,"title":{},"body":{"injectables/JwtAuthGuard.html":{}}}],["injectable",{"_index":112,"title":{"injectables/AppService.html":{},"injectables/AuthService.html":{},"injectables/FeedService.html":{},"injectables/JwtAuthGuard.html":{},"injectables/JwtConfigService.html":{},"injectables/JwtStrategy.html":{},"injectables/LocalAuthGuard.html":{},"injectables/LocalStrategy.html":{},"injectables/MongooseConfigService.html":{},"injectables/MulterConfigService.html":{},"injectables/PaginateModel.html":{},"injectables/UserService.html":{}},"body":{"injectables/AppService.html":{},"injectables/AuthService.html":{},"interfaces/CollationDocument.html":{},"injectables/FeedService.html":{},"injectables/JwtAuthGuard.html":{},"injectables/JwtConfigService.html":{},"injectables/JwtStrategy.html":{},"injectables/LocalAuthGuard.html":{},"injectables/LocalStrategy.html":{},"injectables/MongooseConfigService.html":{},"injectables/MulterConfigService.html":{},"injectables/PaginateModel.html":{},"interfaces/PaginateOptions.html":{},"interfaces/PaginationResult.html":{},"interfaces/PopulateOptions.html":{},"interfaces/QuestionnaireBody.html":{},"guards/RolesGaurd.html":{},"interfaces/Todo.html":{},"injectables/UserService.html":{},"coverage.html":{}}}],["injectables",{"_index":113,"title":{},"body":{"injectables/AppService.html":{},"injectables/AuthService.html":{},"injectables/FeedService.html":{},"injectables/JwtAuthGuard.html":{},"injectables/JwtConfigService.html":{},"injectables/JwtStrategy.html":{},"injectables/LocalAuthGuard.html":{},"injectables/LocalStrategy.html":{},"injectables/MongooseConfigService.html":{},"injectables/MulterConfigService.html":{},"injectables/PaginateModel.html":{},"injectables/UserService.html":{},"overview.html":{}}}],["injectmodel",{"_index":324,"title":{},"body":{"injectables/FeedService.html":{},"interfaces/QuestionnaireBody.html":{},"injectables/UserService.html":{}}}],["injectmodel(feed.name",{"_index":325,"title":{},"body":{"injectables/FeedService.html":{}}}],["injectmodel(material.name",{"_index":507,"title":{},"body":{"interfaces/QuestionnaireBody.html":{},"injectables/UserService.html":{}}}],["injectmodel(student.name",{"_index":509,"title":{},"body":{"interfaces/QuestionnaireBody.html":{},"injectables/UserService.html":{}}}],["injectmodel(tutor.name",{"_index":511,"title":{},"body":{"interfaces/QuestionnaireBody.html":{},"injectables/UserService.html":{}}}],["installation",{"_index":806,"title":{},"body":{"index.html":{}}}],["installrunning",{"_index":808,"title":{},"body":{"index.html":{}}}],["interface",{"_index":124,"title":{"interfaces/Author.html":{},"interfaces/CollationDocument.html":{},"interfaces/Course.html":{},"interfaces/CreateStudentDto.html":{},"interfaces/CreateTutorDto.html":{},"interfaces/CreateUserDto.html":{},"interfaces/IFeedController.html":{},"interfaces/IFeedService.html":{},"interfaces/Learner.html":{},"interfaces/PaginateOptions.html":{},"interfaces/PaginationResult.html":{},"interfaces/PopulateOptions.html":{},"interfaces/QuestionnaireBody.html":{},"interfaces/Todo.html":{},"interfaces/User.html":{}},"body":{"injectables/AppService.html":{},"interfaces/Author.html":{},"interfaces/CollationDocument.html":{},"interfaces/Course.html":{},"interfaces/CreateStudentDto.html":{},"interfaces/CreateTutorDto.html":{},"interfaces/CreateUserDto.html":{},"interfaces/IFeedController.html":{},"interfaces/IFeedService.html":{},"interfaces/Learner.html":{},"classes/Material.html":{},"injectables/PaginateModel.html":{},"interfaces/PaginateOptions.html":{},"interfaces/PaginationResult.html":{},"interfaces/PopulateOptions.html":{},"interfaces/QuestionnaireBody.html":{},"interfaces/Todo.html":{},"interfaces/User.html":{},"injectables/UserService.html":{},"coverage.html":{}}}],["interfaces",{"_index":188,"title":{},"body":{"interfaces/Author.html":{},"interfaces/CollationDocument.html":{},"interfaces/Course.html":{},"interfaces/CreateStudentDto.html":{},"interfaces/CreateTutorDto.html":{},"interfaces/CreateUserDto.html":{},"interfaces/IFeedController.html":{},"interfaces/IFeedService.html":{},"interfaces/Learner.html":{},"interfaces/PaginateOptions.html":{},"interfaces/PaginationResult.html":{},"interfaces/PopulateOptions.html":{},"interfaces/QuestionnaireBody.html":{},"interfaces/Todo.html":{},"interfaces/User.html":{},"overview.html":{}}}],["interfaces/feed",{"_index":301,"title":{},"body":{"controllers/FeedController.html":{}}}],["intro",{"_index":253,"title":{},"body":{"interfaces/Course.html":{},"classes/Feed.html":{}}}],["isemail",{"_index":520,"title":{},"body":{"interfaces/QuestionnaireBody.html":{},"injectables/UserService.html":{}}}],["isglobal",{"_index":875,"title":{},"body":{"miscellaneous/variables.html":{}}}],["isstudent",{"_index":177,"title":{},"body":{"injectables/AuthService.html":{},"interfaces/Author.html":{},"injectables/JwtStrategy.html":{},"interfaces/Learner.html":{},"interfaces/QuestionnaireBody.html":{},"classes/Student.html":{},"classes/Tutor.html":{},"interfaces/User.html":{},"controllers/UserController.html":{},"injectables/UserService.html":{},"miscellaneous/variables.html":{}}}],["joi",{"_index":352,"title":{},"body":{"classes/JoiValidationPipe.html":{},"dependencies.html":{}}}],["joi.array().allow(null",{"_index":884,"title":{},"body":{"miscellaneous/variables.html":{}}}],["joi.boolean().required",{"_index":882,"title":{},"body":{"miscellaneous/variables.html":{}}}],["joi.boolean().required().only().allow(false",{"_index":883,"title":{},"body":{"miscellaneous/variables.html":{}}}],["joi.object().keys",{"_index":877,"title":{},"body":{"miscellaneous/variables.html":{}}}],["joi.string().allow",{"_index":881,"title":{},"body":{"miscellaneous/variables.html":{}}}],["joi.string().email().required",{"_index":878,"title":{},"body":{"miscellaneous/variables.html":{}}}],["joi.string().min(6).required",{"_index":880,"title":{},"body":{"miscellaneous/variables.html":{}}}],["joi.string().required",{"_index":879,"title":{},"body":{"miscellaneous/variables.html":{}}}],["join",{"_index":834,"title":{},"body":{"index.html":{}}}],["joivalidationpipe",{"_index":339,"title":{"classes/JoiValidationPipe.html":{}},"body":{"classes/JoiValidationPipe.html":{},"controllers/UserController.html":{},"coverage.html":{}}}],["joivalidationpipe(createstudentschema",{"_index":685,"title":{},"body":{"controllers/UserController.html":{}}}],["joivalidationpipe(createtutorschema",{"_index":692,"title":{},"body":{"controllers/UserController.html":{}}}],["jwt",{"_index":435,"title":{},"body":{"injectables/JwtConfigService.html":{},"injectables/JwtStrategy.html":{},"injectables/MongooseConfigService.html":{},"injectables/MulterConfigService.html":{},"dependencies.html":{}}}],["jwt.strategy",{"_index":151,"title":{},"body":{"modules/AuthModule.html":{}}}],["jwtauthguard",{"_index":357,"title":{"injectables/JwtAuthGuard.html":{}},"body":{"injectables/JwtAuthGuard.html":{},"controllers/UserController.html":{},"coverage.html":{}}}],["jwtconfigservice",{"_index":147,"title":{"injectables/JwtConfigService.html":{}},"body":{"modules/AuthModule.html":{},"injectables/JwtConfigService.html":{},"injectables/MongooseConfigService.html":{},"injectables/MulterConfigService.html":{},"coverage.html":{}}}],["jwtfromrequest",{"_index":454,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["jwtmodule",{"_index":143,"title":{},"body":{"modules/AuthModule.html":{}}}],["jwtmodule.registerasync",{"_index":153,"title":{},"body":{"modules/AuthModule.html":{}}}],["jwtmoduleoptions",{"_index":387,"title":{},"body":{"injectables/JwtConfigService.html":{},"injectables/MongooseConfigService.html":{},"injectables/MulterConfigService.html":{}}}],["jwtoptionsfactory",{"_index":397,"title":{},"body":{"injectables/JwtConfigService.html":{},"injectables/MongooseConfigService.html":{},"injectables/MulterConfigService.html":{}}}],["jwtsecret",{"_index":411,"title":{},"body":{"injectables/JwtConfigService.html":{},"injectables/MongooseConfigService.html":{},"injectables/MulterConfigService.html":{}}}],["jwtservice",{"_index":158,"title":{},"body":{"injectables/AuthService.html":{}}}],["jwtstrategy",{"_index":138,"title":{"injectables/JwtStrategy.html":{}},"body":{"modules/AuthModule.html":{},"injectables/JwtStrategy.html":{},"coverage.html":{},"overview.html":{}}}],["kamil",{"_index":841,"title":{},"body":{"index.html":{}}}],["lastname",{"_index":197,"title":{},"body":{"interfaces/Author.html":{},"interfaces/CreateStudentDto.html":{},"interfaces/CreateTutorDto.html":{},"interfaces/CreateUserDto.html":{},"interfaces/Learner.html":{},"classes/Student.html":{},"classes/Tutor.html":{},"interfaces/User.html":{},"controllers/UserController.html":{},"miscellaneous/variables.html":{}}}],["learner",{"_index":199,"title":{"interfaces/Learner.html":{}},"body":{"interfaces/Author.html":{},"interfaces/CreateStudentDto.html":{},"interfaces/CreateTutorDto.html":{},"interfaces/CreateUserDto.html":{},"interfaces/Learner.html":{},"classes/Material.html":{},"classes/Student.html":{},"interfaces/User.html":{},"coverage.html":{}}}],["learningstyle",{"_index":181,"title":{},"body":{"injectables/AuthService.html":{},"interfaces/Author.html":{},"interfaces/Course.html":{},"classes/Feed.html":{},"interfaces/Learner.html":{},"interfaces/QuestionnaireBody.html":{},"classes/Student.html":{},"interfaces/User.html":{},"controllers/UserController.html":{},"injectables/UserService.html":{},"miscellaneous/variables.html":{}}}],["learningstyle.push('activist",{"_index":586,"title":{},"body":{"interfaces/QuestionnaireBody.html":{},"injectables/UserService.html":{}}}],["learningstyle.push('pragmatist",{"_index":587,"title":{},"body":{"interfaces/QuestionnaireBody.html":{},"injectables/UserService.html":{}}}],["learningstyle.push('reflector",{"_index":588,"title":{},"body":{"interfaces/QuestionnaireBody.html":{},"injectables/UserService.html":{}}}],["learningstyle.push('theorist",{"_index":589,"title":{},"body":{"interfaces/QuestionnaireBody.html":{},"injectables/UserService.html":{}}}],["learningstyle.push(learningstyles[index",{"_index":592,"title":{},"body":{"interfaces/QuestionnaireBody.html":{},"injectables/UserService.html":{}}}],["learningstyles",{"_index":577,"title":{},"body":{"interfaces/QuestionnaireBody.html":{},"injectables/UserService.html":{}}}],["learningstyles[index",{"_index":593,"title":{},"body":{"interfaces/QuestionnaireBody.html":{},"injectables/UserService.html":{}}}],["legend",{"_index":94,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/FeedModule.html":{},"modules/UserModule.html":{},"overview.html":{}}}],["level",{"_index":200,"title":{},"body":{"interfaces/Author.html":{},"interfaces/Learner.html":{},"classes/Student.html":{},"interfaces/User.html":{},"controllers/UserController.html":{},"miscellaneous/variables.html":{}}}],["license",{"_index":847,"title":{},"body":{"index.html":{}}}],["licensed",{"_index":824,"title":{},"body":{"index.html":{}}}],["limit",{"_index":223,"title":{},"body":{"interfaces/CollationDocument.html":{},"injectables/PaginateModel.html":{},"interfaces/PaginateOptions.html":{},"interfaces/PaginationResult.html":{},"interfaces/PopulateOptions.html":{}}}],["literal",{"_index":492,"title":{},"body":{"injectables/PaginateModel.html":{},"interfaces/QuestionnaireBody.html":{},"injectables/UserService.html":{},"miscellaneous/typealiases.html":{}}}],["load",{"_index":876,"title":{},"body":{"miscellaneous/variables.html":{}}}],["local",{"_index":468,"title":{},"body":{"injectables/LocalStrategy.html":{},"dependencies.html":{}}}],["local.strategy",{"_index":152,"title":{},"body":{"modules/AuthModule.html":{}}}],["localauthguard",{"_index":50,"title":{"injectables/LocalAuthGuard.html":{}},"body":{"controllers/AppController.html":{},"injectables/LocalAuthGuard.html":{},"coverage.html":{}}}],["locale",{"_index":207,"title":{},"body":{"interfaces/CollationDocument.html":{},"injectables/PaginateModel.html":{},"interfaces/PaginateOptions.html":{},"interfaces/PaginationResult.html":{},"interfaces/PopulateOptions.html":{}}}],["localstrategy",{"_index":139,"title":{"injectables/LocalStrategy.html":{}},"body":{"modules/AuthModule.html":{},"injectables/LocalStrategy.html":{},"coverage.html":{},"overview.html":{}}}],["lodash",{"_index":396,"title":{},"body":{"injectables/JwtConfigService.html":{},"injectables/MongooseConfigService.html":{},"injectables/MulterConfigService.html":{},"dependencies.html":{}}}],["login",{"_index":12,"title":{},"body":{"controllers/AppController.html":{},"injectables/AuthService.html":{}}}],["login(@request",{"_index":68,"title":{},"body":{"controllers/AppController.html":{}}}],["login(req",{"_index":24,"title":{},"body":{"controllers/AppController.html":{}}}],["login(user",{"_index":160,"title":{},"body":{"injectables/AuthService.html":{}}}],["match",{"_index":218,"title":{},"body":{"interfaces/CollationDocument.html":{},"injectables/PaginateModel.html":{},"interfaces/PaginateOptions.html":{},"interfaces/PaginationResult.html":{},"interfaces/PopulateOptions.html":{},"miscellaneous/variables.html":{}}}],["matching",{"_index":88,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"interfaces/Author.html":{},"interfaces/CollationDocument.html":{},"interfaces/Course.html":{},"interfaces/CreateStudentDto.html":{},"interfaces/CreateTutorDto.html":{},"interfaces/CreateUserDto.html":{},"classes/Feed.html":{},"controllers/FeedController.html":{},"modules/FeedModule.html":{},"injectables/FeedService.html":{},"interfaces/IFeedController.html":{},"interfaces/IFeedService.html":{},"classes/JoiValidationPipe.html":{},"injectables/JwtAuthGuard.html":{},"injectables/JwtConfigService.html":{},"injectables/JwtStrategy.html":{},"interfaces/Learner.html":{},"injectables/LocalAuthGuard.html":{},"injectables/LocalStrategy.html":{},"classes/Material.html":{},"injectables/MongooseConfigService.html":{},"injectables/MulterConfigService.html":{},"injectables/PaginateModel.html":{},"interfaces/PaginateOptions.html":{},"interfaces/PaginationResult.html":{},"interfaces/PopulateOptions.html":{},"interfaces/QuestionnaireBody.html":{},"guards/RolesGaurd.html":{},"classes/Student.html":{},"interfaces/Todo.html":{},"classes/Tutor.html":{},"interfaces/User.html":{},"controllers/UserController.html":{},"modules/UserModule.html":{},"injectables/UserService.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/functions.html":{},"index.html":{},"modules.html":{},"overview.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["material",{"_index":471,"title":{"classes/Material.html":{}},"body":{"classes/Material.html":{},"interfaces/QuestionnaireBody.html":{},"modules/UserModule.html":{},"injectables/UserService.html":{},"coverage.html":{}}}],["material.name",{"_index":708,"title":{},"body":{"modules/UserModule.html":{},"miscellaneous/variables.html":{}}}],["materialdocument",{"_index":483,"title":{},"body":{"classes/Material.html":{},"interfaces/QuestionnaireBody.html":{},"injectables/UserService.html":{},"miscellaneous/typealiases.html":{}}}],["materialmodel",{"_index":508,"title":{},"body":{"interfaces/QuestionnaireBody.html":{},"injectables/UserService.html":{}}}],["materialschema",{"_index":485,"title":{},"body":{"classes/Material.html":{},"modules/UserModule.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["maxvariable",{"_index":208,"title":{},"body":{"interfaces/CollationDocument.html":{},"injectables/PaginateModel.html":{},"interfaces/PaginateOptions.html":{},"interfaces/PaginationResult.html":{},"interfaces/PopulateOptions.html":{}}}],["message",{"_index":20,"title":{},"body":{"controllers/AppController.html":{},"injectables/JwtAuthGuard.html":{}}}],["metadata",{"_index":347,"title":{},"body":{"classes/JoiValidationPipe.html":{},"dependencies.html":{}}}],["methods",{"_index":8,"title":{},"body":{"controllers/AppController.html":{},"injectables/AppService.html":{},"injectables/AuthService.html":{},"controllers/FeedController.html":{},"injectables/FeedService.html":{},"classes/JoiValidationPipe.html":{},"injectables/JwtAuthGuard.html":{},"injectables/JwtConfigService.html":{},"injectables/JwtStrategy.html":{},"injectables/LocalStrategy.html":{},"injectables/MongooseConfigService.html":{},"injectables/MulterConfigService.html":{},"injectables/PaginateModel.html":{},"guards/RolesGaurd.html":{},"controllers/UserController.html":{},"injectables/UserService.html":{}}}],["miscellaneous",{"_index":787,"title":{"miscellaneous/functions.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}},"body":{"miscellaneous/functions.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["mit",{"_index":823,"title":{},"body":{"index.html":{}}}],["mode",{"_index":813,"title":{},"body":{"index.html":{}}}],["model",{"_index":213,"title":{},"body":{"interfaces/CollationDocument.html":{},"injectables/FeedService.html":{},"injectables/PaginateModel.html":{},"interfaces/PaginateOptions.html":{},"interfaces/PaginationResult.html":{},"interfaces/PopulateOptions.html":{},"interfaces/QuestionnaireBody.html":{},"injectables/UserService.html":{}}}],["model.countdocuments().exec",{"_index":246,"title":{},"body":{"interfaces/CollationDocument.html":{},"injectables/PaginateModel.html":{},"interfaces/PaginateOptions.html":{},"interfaces/PaginationResult.html":{},"interfaces/PopulateOptions.html":{}}}],["modeldefinition",{"_index":310,"title":{},"body":{"modules/FeedModule.html":{},"modules/UserModule.html":{},"miscellaneous/variables.html":{}}}],["models",{"_index":315,"title":{},"body":{"modules/FeedModule.html":{},"modules/UserModule.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["module",{"_index":90,"title":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/FeedModule.html":{},"modules/UserModule.html":{}},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/FeedModule.html":{},"modules/UserModule.html":{},"overview.html":{}}}],["modules",{"_index":92,"title":{"modules.html":{}},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/FeedModule.html":{},"modules/UserModule.html":{},"coverage.html":{},"modules.html":{},"overview.html":{},"miscellaneous/variables.html":{}}}],["mongodb",{"_index":420,"title":{},"body":{"injectables/JwtConfigService.html":{},"injectables/MongooseConfigService.html":{},"injectables/MulterConfigService.html":{}}}],["mongoose",{"_index":214,"title":{},"body":{"interfaces/CollationDocument.html":{},"classes/Feed.html":{},"injectables/FeedService.html":{},"injectables/JwtConfigService.html":{},"classes/Material.html":{},"injectables/MongooseConfigService.html":{},"injectables/MulterConfigService.html":{},"injectables/PaginateModel.html":{},"interfaces/PaginateOptions.html":{},"interfaces/PaginationResult.html":{},"interfaces/PopulateOptions.html":{},"interfaces/QuestionnaireBody.html":{},"classes/Student.html":{},"classes/Tutor.html":{},"injectables/UserService.html":{},"dependencies.html":{}}}],["mongoose.schema.types.objectid",{"_index":631,"title":{},"body":{"classes/Tutor.html":{}}}],["mongooseconfigservice",{"_index":417,"title":{"injectables/MongooseConfigService.html":{}},"body":{"injectables/JwtConfigService.html":{},"injectables/MongooseConfigService.html":{},"injectables/MulterConfigService.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["mongoosemodelfactories",{"_index":737,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["mongoosemodule",{"_index":311,"title":{},"body":{"modules/FeedModule.html":{},"modules/UserModule.html":{}}}],["mongoosemodule.forfeature(models",{"_index":317,"title":{},"body":{"modules/FeedModule.html":{},"modules/UserModule.html":{}}}],["mongoosemodule.forfeatureasync(mongoosemodelfactories",{"_index":894,"title":{},"body":{"miscellaneous/variables.html":{}}}],["mongoosemodule.forrootasync",{"_index":893,"title":{},"body":{"miscellaneous/variables.html":{}}}],["mongoosemoduleoptions",{"_index":388,"title":{},"body":{"injectables/JwtConfigService.html":{},"injectables/MongooseConfigService.html":{},"injectables/MulterConfigService.html":{}}}],["mongooseoptionsfactory",{"_index":389,"title":{},"body":{"injectables/JwtConfigService.html":{},"injectables/MongooseConfigService.html":{},"injectables/MulterConfigService.html":{}}}],["more",{"_index":837,"title":{},"body":{"index.html":{}}}],["multer",{"_index":393,"title":{},"body":{"injectables/JwtConfigService.html":{},"injectables/MongooseConfigService.html":{},"injectables/MulterConfigService.html":{}}}],["multerconfigservice",{"_index":425,"title":{"injectables/MulterConfigService.html":{}},"body":{"injectables/JwtConfigService.html":{},"injectables/MongooseConfigService.html":{},"injectables/MulterConfigService.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["multermodule.registerasync",{"_index":895,"title":{},"body":{"miscellaneous/variables.html":{}}}],["multermoduleoptions",{"_index":390,"title":{},"body":{"injectables/JwtConfigService.html":{},"injectables/MongooseConfigService.html":{},"injectables/MulterConfigService.html":{}}}],["multeroptionsfactory",{"_index":391,"title":{},"body":{"injectables/JwtConfigService.html":{},"injectables/MongooseConfigService.html":{},"injectables/MulterConfigService.html":{}}}],["myśliwiec",{"_index":842,"title":{},"body":{"index.html":{}}}],["name",{"_index":28,"title":{},"body":{"controllers/AppController.html":{},"injectables/AppService.html":{},"injectables/AuthService.html":{},"modules/FeedModule.html":{},"injectables/FeedService.html":{},"classes/JoiValidationPipe.html":{},"injectables/JwtAuthGuard.html":{},"injectables/JwtConfigService.html":{},"injectables/JwtStrategy.html":{},"injectables/LocalStrategy.html":{},"injectables/MongooseConfigService.html":{},"injectables/MulterConfigService.html":{},"injectables/PaginateModel.html":{},"guards/RolesGaurd.html":{},"controllers/UserController.html":{},"modules/UserModule.html":{},"injectables/UserService.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["name}${extname(file.originalname",{"_index":434,"title":{},"body":{"injectables/JwtConfigService.html":{},"injectables/MongooseConfigService.html":{},"injectables/MulterConfigService.html":{}}}],["nest",{"_index":802,"title":{},"body":{"index.html":{}}}],["nestframework",{"_index":846,"title":{},"body":{"index.html":{}}}],["nestjs/common",{"_index":44,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"interfaces/CollationDocument.html":{},"controllers/FeedController.html":{},"modules/FeedModule.html":{},"injectables/FeedService.html":{},"classes/JoiValidationPipe.html":{},"injectables/JwtAuthGuard.html":{},"injectables/JwtConfigService.html":{},"injectables/JwtStrategy.html":{},"injectables/LocalAuthGuard.html":{},"injectables/LocalStrategy.html":{},"injectables/MongooseConfigService.html":{},"injectables/MulterConfigService.html":{},"injectables/PaginateModel.html":{},"interfaces/PaginateOptions.html":{},"interfaces/PaginationResult.html":{},"interfaces/PopulateOptions.html":{},"interfaces/QuestionnaireBody.html":{},"guards/RolesGaurd.html":{},"interfaces/Todo.html":{},"controllers/UserController.html":{},"modules/UserModule.html":{},"injectables/UserService.html":{},"dependencies.html":{}}}],["nestjs/config",{"_index":142,"title":{},"body":{"modules/AuthModule.html":{},"injectables/JwtConfigService.html":{},"injectables/JwtStrategy.html":{},"injectables/MongooseConfigService.html":{},"injectables/MulterConfigService.html":{},"dependencies.html":{}}}],["nestjs/core",{"_index":755,"title":{},"body":{"dependencies.html":{}}}],["nestjs/jwt",{"_index":144,"title":{},"body":{"modules/AuthModule.html":{},"injectables/AuthService.html":{},"injectables/JwtConfigService.html":{},"injectables/MongooseConfigService.html":{},"injectables/MulterConfigService.html":{},"dependencies.html":{}}}],["nestjs/mongoose",{"_index":283,"title":{},"body":{"classes/Feed.html":{},"modules/FeedModule.html":{},"injectables/FeedService.html":{},"injectables/JwtConfigService.html":{},"classes/Material.html":{},"injectables/MongooseConfigService.html":{},"injectables/MulterConfigService.html":{},"interfaces/QuestionnaireBody.html":{},"classes/Student.html":{},"classes/Tutor.html":{},"modules/UserModule.html":{},"injectables/UserService.html":{},"dependencies.html":{}}}],["nestjs/passport",{"_index":146,"title":{},"body":{"modules/AuthModule.html":{},"injectables/JwtAuthGuard.html":{},"injectables/JwtStrategy.html":{},"injectables/LocalAuthGuard.html":{},"injectables/LocalStrategy.html":{},"dependencies.html":{}}}],["nestjs/platform",{"_index":46,"title":{},"body":{"controllers/AppController.html":{},"injectables/JwtConfigService.html":{},"injectables/MongooseConfigService.html":{},"injectables/MulterConfigService.html":{},"dependencies.html":{}}}],["nestjs/serve",{"_index":759,"title":{},"body":{"dependencies.html":{}}}],["nestjs/swagger",{"_index":762,"title":{},"body":{"dependencies.html":{}}}],["new",{"_index":355,"title":{},"body":{"classes/JoiValidationPipe.html":{},"injectables/JwtAuthGuard.html":{},"injectables/LocalStrategy.html":{},"interfaces/QuestionnaireBody.html":{},"controllers/UserController.html":{},"injectables/UserService.html":{},"coverage.html":{}}}],["newfile",{"_index":545,"title":{},"body":{"interfaces/QuestionnaireBody.html":{},"injectables/UserService.html":{}}}],["newuser",{"_index":536,"title":{},"body":{"interfaces/QuestionnaireBody.html":{},"injectables/UserService.html":{}}}],["newuser.save",{"_index":539,"title":{},"body":{"interfaces/QuestionnaireBody.html":{},"injectables/UserService.html":{}}}],["nextpage",{"_index":234,"title":{},"body":{"interfaces/CollationDocument.html":{},"injectables/PaginateModel.html":{},"interfaces/PaginateOptions.html":{},"interfaces/PaginationResult.html":{},"interfaces/PopulateOptions.html":{}}}],["node.js",{"_index":794,"title":{},"body":{"index.html":{}}}],["notfoundexception",{"_index":655,"title":{},"body":{"controllers/UserController.html":{}}}],["notfoundexception(err.message",{"_index":682,"title":{},"body":{"controllers/UserController.html":{}}}],["npm",{"_index":807,"title":{},"body":{"index.html":{}}}],["null",{"_index":183,"title":{},"body":{"injectables/AuthService.html":{},"interfaces/CollationDocument.html":{},"injectables/PaginateModel.html":{},"interfaces/PaginateOptions.html":{},"interfaces/PaginationResult.html":{},"interfaces/PopulateOptions.html":{},"interfaces/QuestionnaireBody.html":{},"injectables/UserService.html":{}}}],["number",{"_index":127,"title":{},"body":{"injectables/AppService.html":{},"interfaces/CollationDocument.html":{},"injectables/PaginateModel.html":{},"interfaces/PaginateOptions.html":{},"interfaces/PaginationResult.html":{},"interfaces/PopulateOptions.html":{},"interfaces/QuestionnaireBody.html":{},"interfaces/Todo.html":{},"injectables/UserService.html":{}}}],["number(i",{"_index":550,"title":{},"body":{"interfaces/QuestionnaireBody.html":{},"injectables/UserService.html":{}}}],["numericordering",{"_index":209,"title":{},"body":{"interfaces/CollationDocument.html":{},"injectables/PaginateModel.html":{},"interfaces/PaginateOptions.html":{},"interfaces/PaginationResult.html":{},"interfaces/PopulateOptions.html":{}}}],["object",{"_index":220,"title":{},"body":{"interfaces/CollationDocument.html":{},"injectables/PaginateModel.html":{},"interfaces/PaginateOptions.html":{},"interfaces/PaginationResult.html":{},"interfaces/PopulateOptions.html":{}}}],["objectives",{"_index":254,"title":{},"body":{"interfaces/Course.html":{},"classes/Feed.html":{}}}],["objectschema",{"_index":344,"title":{},"body":{"classes/JoiValidationPipe.html":{}}}],["observable",{"_index":120,"title":{},"body":{"injectables/AppService.html":{},"guards/RolesGaurd.html":{},"interfaces/Todo.html":{}}}],["occured",{"_index":379,"title":{},"body":{"injectables/JwtAuthGuard.html":{}}}],["omit",{"_index":667,"title":{},"body":{"controllers/UserController.html":{},"miscellaneous/functions.html":{}}}],["open",{"_index":825,"title":{},"body":{"index.html":{}}}],["optional",{"_index":29,"title":{},"body":{"controllers/AppController.html":{},"injectables/AppService.html":{},"injectables/AuthService.html":{},"interfaces/Author.html":{},"injectables/FeedService.html":{},"classes/JoiValidationPipe.html":{},"injectables/JwtAuthGuard.html":{},"injectables/JwtConfigService.html":{},"injectables/JwtStrategy.html":{},"interfaces/Learner.html":{},"injectables/LocalStrategy.html":{},"injectables/MongooseConfigService.html":{},"injectables/MulterConfigService.html":{},"injectables/PaginateModel.html":{},"interfaces/PaginateOptions.html":{},"guards/RolesGaurd.html":{},"interfaces/User.html":{},"controllers/UserController.html":{},"injectables/UserService.html":{},"miscellaneous/functions.html":{}}}],["options",{"_index":437,"title":{},"body":{"injectables/JwtConfigService.html":{},"injectables/MongooseConfigService.html":{},"injectables/MulterConfigService.html":{}}}],["othernames",{"_index":474,"title":{},"body":{"classes/Material.html":{}}}],["out",{"_index":107,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/FeedModule.html":{},"modules/UserModule.html":{},"overview.html":{}}}],["overview",{"_index":851,"title":{"overview.html":{}},"body":{"overview.html":{}}}],["package",{"_index":752,"title":{"dependencies.html":{}},"body":{}}],["page",{"_index":222,"title":{},"body":{"interfaces/CollationDocument.html":{},"injectables/PaginateModel.html":{},"interfaces/PaginateOptions.html":{},"interfaces/PaginationResult.html":{},"interfaces/PopulateOptions.html":{}}}],["paginate",{"_index":237,"title":{},"body":{"interfaces/CollationDocument.html":{},"injectables/FeedService.html":{},"injectables/PaginateModel.html":{},"interfaces/PaginateOptions.html":{},"interfaces/PaginationResult.html":{},"interfaces/PopulateOptions.html":{}}}],["paginate(model",{"_index":491,"title":{},"body":{"injectables/PaginateModel.html":{}}}],["paginatemodel",{"_index":235,"title":{"injectables/PaginateModel.html":{}},"body":{"interfaces/CollationDocument.html":{},"modules/FeedModule.html":{},"injectables/FeedService.html":{},"injectables/PaginateModel.html":{},"interfaces/PaginateOptions.html":{},"interfaces/PaginationResult.html":{},"interfaces/PopulateOptions.html":{},"coverage.html":{},"overview.html":{}}}],["paginateoptions",{"_index":219,"title":{"interfaces/PaginateOptions.html":{}},"body":{"interfaces/CollationDocument.html":{},"injectables/PaginateModel.html":{},"interfaces/PaginateOptions.html":{},"interfaces/PaginationResult.html":{},"interfaces/PopulateOptions.html":{},"coverage.html":{}}}],["pagination",{"_index":224,"title":{},"body":{"interfaces/CollationDocument.html":{},"injectables/PaginateModel.html":{},"interfaces/PaginateOptions.html":{},"interfaces/PaginationResult.html":{},"interfaces/PopulateOptions.html":{}}}],["paginationresult",{"_index":227,"title":{"interfaces/PaginationResult.html":{}},"body":{"interfaces/CollationDocument.html":{},"injectables/PaginateModel.html":{},"interfaces/PaginateOptions.html":{},"interfaces/PaginationResult.html":{},"interfaces/PopulateOptions.html":{},"coverage.html":{}}}],["parameters",{"_index":27,"title":{},"body":{"controllers/AppController.html":{},"injectables/AppService.html":{},"injectables/AuthService.html":{},"injectables/FeedService.html":{},"classes/JoiValidationPipe.html":{},"injectables/JwtAuthGuard.html":{},"injectables/JwtConfigService.html":{},"injectables/JwtStrategy.html":{},"injectables/LocalStrategy.html":{},"injectables/MongooseConfigService.html":{},"injectables/MulterConfigService.html":{},"injectables/PaginateModel.html":{},"guards/RolesGaurd.html":{},"controllers/UserController.html":{},"injectables/UserService.html":{},"miscellaneous/functions.html":{}}}],["parseint(process.env.port",{"_index":402,"title":{},"body":{"injectables/JwtConfigService.html":{},"injectables/MongooseConfigService.html":{},"injectables/MulterConfigService.html":{}}}],["pass",{"_index":163,"title":{},"body":{"injectables/AuthService.html":{}}}],["passport",{"_index":451,"title":{},"body":{"injectables/JwtStrategy.html":{},"injectables/LocalStrategy.html":{},"dependencies.html":{}}}],["passportmodule",{"_index":145,"title":{},"body":{"modules/AuthModule.html":{}}}],["passportstrategy",{"_index":448,"title":{},"body":{"injectables/JwtStrategy.html":{},"injectables/LocalStrategy.html":{}}}],["passportstrategy(strategy",{"_index":452,"title":{},"body":{"injectables/JwtStrategy.html":{},"injectables/LocalStrategy.html":{}}}],["password",{"_index":198,"title":{},"body":{"interfaces/Author.html":{},"interfaces/CreateStudentDto.html":{},"interfaces/CreateTutorDto.html":{},"interfaces/CreateUserDto.html":{},"interfaces/Learner.html":{},"injectables/LocalStrategy.html":{},"interfaces/QuestionnaireBody.html":{},"classes/Student.html":{},"classes/Tutor.html":{},"interfaces/User.html":{},"injectables/UserService.html":{},"miscellaneous/variables.html":{}}}],["path",{"_index":216,"title":{},"body":{"interfaces/CollationDocument.html":{},"injectables/JwtConfigService.html":{},"injectables/MongooseConfigService.html":{},"injectables/MulterConfigService.html":{},"injectables/PaginateModel.html":{},"interfaces/PaginateOptions.html":{},"interfaces/PaginationResult.html":{},"interfaces/PopulateOptions.html":{}}}],["payload",{"_index":184,"title":{},"body":{"injectables/AuthService.html":{},"injectables/JwtStrategy.html":{}}}],["payload.id",{"_index":459,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["payload.isstudent",{"_index":460,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["pipetransform",{"_index":341,"title":{},"body":{"classes/JoiValidationPipe.html":{}}}],["please",{"_index":835,"title":{},"body":{"index.html":{}}}],["populate",{"_index":226,"title":{},"body":{"interfaces/CollationDocument.html":{},"injectables/PaginateModel.html":{},"interfaces/PaginateOptions.html":{},"interfaces/PaginationResult.html":{},"interfaces/PopulateOptions.html":{}}}],["populateoptions",{"_index":215,"title":{"interfaces/PopulateOptions.html":{}},"body":{"interfaces/CollationDocument.html":{},"injectables/PaginateModel.html":{},"interfaces/PaginateOptions.html":{},"interfaces/PaginationResult.html":{},"interfaces/PopulateOptions.html":{},"coverage.html":{}}}],["port",{"_index":401,"title":{},"body":{"injectables/JwtConfigService.html":{},"injectables/MongooseConfigService.html":{},"injectables/MulterConfigService.html":{}}}],["post",{"_index":38,"title":{},"body":{"controllers/AppController.html":{},"controllers/UserController.html":{}}}],["post('auth/login",{"_index":67,"title":{},"body":{"controllers/AppController.html":{}}}],["post('learning",{"_index":695,"title":{},"body":{"controllers/UserController.html":{}}}],["post('register/student",{"_index":683,"title":{},"body":{"controllers/UserController.html":{}}}],["post('register/student')@usepipes(new",{"_index":650,"title":{},"body":{"controllers/UserController.html":{}}}],["post('register/tutor",{"_index":691,"title":{},"body":{"controllers/UserController.html":{}}}],["post('register/tutor')@usepipes(new",{"_index":653,"title":{},"body":{"controllers/UserController.html":{}}}],["post('upload",{"_index":70,"title":{},"body":{"controllers/AppController.html":{}}}],["post('upload')@useinterceptors(undefined",{"_index":33,"title":{},"body":{"controllers/AppController.html":{}}}],["pragmatist",{"_index":579,"title":{},"body":{"interfaces/QuestionnaireBody.html":{},"injectables/UserService.html":{}}}],["pragmatistanswers",{"_index":554,"title":{},"body":{"interfaces/QuestionnaireBody.html":{},"injectables/UserService.html":{}}}],["pragmatistsum",{"_index":570,"title":{},"body":{"interfaces/QuestionnaireBody.html":{},"injectables/UserService.html":{}}}],["prefix",{"_index":289,"title":{},"body":{"controllers/FeedController.html":{},"controllers/UserController.html":{}}}],["prev",{"_index":567,"title":{},"body":{"interfaces/QuestionnaireBody.html":{},"injectables/UserService.html":{}}}],["prevpage",{"_index":233,"title":{},"body":{"interfaces/CollationDocument.html":{},"injectables/PaginateModel.html":{},"interfaces/PaginateOptions.html":{},"interfaces/PaginationResult.html":{},"interfaces/PopulateOptions.html":{}}}],["private",{"_index":60,"title":{},"body":{"controllers/AppController.html":{},"injectables/AuthService.html":{},"injectables/FeedService.html":{},"interfaces/QuestionnaireBody.html":{},"injectables/UserService.html":{}}}],["process.env.environment",{"_index":405,"title":{},"body":{"injectables/JwtConfigService.html":{},"injectables/MongooseConfigService.html":{},"injectables/MulterConfigService.html":{}}}],["process.env.jwtsecret",{"_index":412,"title":{},"body":{"injectables/JwtConfigService.html":{},"injectables/JwtStrategy.html":{},"injectables/MongooseConfigService.html":{},"injectables/MulterConfigService.html":{}}}],["process.env.mongodb_uri",{"_index":408,"title":{},"body":{"injectables/JwtConfigService.html":{},"injectables/MongooseConfigService.html":{},"injectables/MulterConfigService.html":{}}}],["process.env.mongodb_uri_dev",{"_index":407,"title":{},"body":{"injectables/JwtConfigService.html":{},"injectables/MongooseConfigService.html":{},"injectables/MulterConfigService.html":{}}}],["production",{"_index":815,"title":{},"body":{"index.html":{}}}],["profile",{"_index":526,"title":{},"body":{"interfaces/QuestionnaireBody.html":{},"injectables/UserService.html":{}}}],["profile(undefined",{"_index":721,"title":{},"body":{"injectables/UserService.html":{}}}],["progressive",{"_index":793,"title":{},"body":{"index.html":{}}}],["project",{"_index":826,"title":{},"body":{"index.html":{}}}],["promise",{"_index":242,"title":{},"body":{"interfaces/CollationDocument.html":{},"controllers/FeedController.html":{},"interfaces/IFeedController.html":{},"interfaces/IFeedService.html":{},"injectables/PaginateModel.html":{},"interfaces/PaginateOptions.html":{},"interfaces/PaginationResult.html":{},"interfaces/PopulateOptions.html":{},"interfaces/QuestionnaireBody.html":{},"guards/RolesGaurd.html":{},"injectables/UserService.html":{},"miscellaneous/variables.html":{}}}],["prop",{"_index":269,"title":{},"body":{"classes/Feed.html":{},"classes/Material.html":{},"classes/Student.html":{},"classes/Tutor.html":{}}}],["prop([string",{"_index":616,"title":{},"body":{"classes/Student.html":{}}}],["prop(undefined",{"_index":610,"title":{},"body":{"classes/Student.html":{}}}],["prop({type",{"_index":477,"title":{},"body":{"classes/Material.html":{},"classes/Tutor.html":{}}}],["prop({unique",{"_index":605,"title":{},"body":{"classes/Student.html":{},"classes/Tutor.html":{}}}],["properties",{"_index":191,"title":{},"body":{"interfaces/Author.html":{},"interfaces/CollationDocument.html":{},"interfaces/Course.html":{},"interfaces/CreateUserDto.html":{},"classes/Feed.html":{},"injectables/FeedService.html":{},"interfaces/IFeedController.html":{},"interfaces/IFeedService.html":{},"interfaces/Learner.html":{},"classes/Material.html":{},"interfaces/PaginateOptions.html":{},"interfaces/PaginationResult.html":{},"interfaces/PopulateOptions.html":{},"interfaces/QuestionnaireBody.html":{},"classes/Student.html":{},"interfaces/Todo.html":{},"classes/Tutor.html":{},"interfaces/User.html":{}}}],["providers",{"_index":97,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/FeedModule.html":{},"modules/UserModule.html":{},"overview.html":{}}}],["providers/paginatemodel.provider",{"_index":312,"title":{},"body":{"modules/FeedModule.html":{},"injectables/FeedService.html":{}}}],["public",{"_index":236,"title":{},"body":{"interfaces/CollationDocument.html":{},"injectables/PaginateModel.html":{},"interfaces/PaginateOptions.html":{},"interfaces/PaginationResult.html":{},"interfaces/PopulateOptions.html":{}}}],["public/upload",{"_index":410,"title":{},"body":{"injectables/JwtConfigService.html":{},"injectables/MongooseConfigService.html":{},"injectables/MulterConfigService.html":{}}}],["pwdmatch",{"_index":169,"title":{},"body":{"injectables/AuthService.html":{}}}],["query",{"_index":238,"title":{},"body":{"interfaces/CollationDocument.html":{},"injectables/PaginateModel.html":{},"interfaces/PaginateOptions.html":{},"interfaces/PaginationResult.html":{},"interfaces/PopulateOptions.html":{}}}],["questionnairebody",{"_index":494,"title":{"interfaces/QuestionnaireBody.html":{}},"body":{"interfaces/QuestionnaireBody.html":{},"injectables/UserService.html":{},"coverage.html":{}}}],["read",{"_index":836,"title":{},"body":{"index.html":{}}}],["readonly",{"_index":61,"title":{},"body":{"controllers/AppController.html":{},"controllers/FeedController.html":{}}}],["ref",{"_index":632,"title":{},"body":{"classes/Tutor.html":{}}}],["reflect",{"_index":779,"title":{},"body":{"dependencies.html":{}}}],["reflector",{"_index":580,"title":{},"body":{"interfaces/QuestionnaireBody.html":{},"injectables/UserService.html":{}}}],["reflectoranswers",{"_index":557,"title":{},"body":{"interfaces/QuestionnaireBody.html":{},"injectables/UserService.html":{}}}],["reflectorsum",{"_index":572,"title":{},"body":{"interfaces/QuestionnaireBody.html":{},"injectables/UserService.html":{}}}],["registerstudent",{"_index":640,"title":{},"body":{"controllers/UserController.html":{}}}],["registerstudent(@body",{"_index":686,"title":{},"body":{"controllers/UserController.html":{}}}],["registerstudent(body",{"_index":649,"title":{},"body":{"controllers/UserController.html":{}}}],["registertutor",{"_index":641,"title":{},"body":{"controllers/UserController.html":{}}}],["registertutor(@body",{"_index":693,"title":{},"body":{"controllers/UserController.html":{}}}],["registertutor(body",{"_index":652,"title":{},"body":{"controllers/UserController.html":{}}}],["render",{"_index":39,"title":{},"body":{"controllers/AppController.html":{}}}],["render('index",{"_index":62,"title":{},"body":{"controllers/AppController.html":{}}}],["repository",{"_index":805,"title":{},"body":{"index.html":{}}}],["req",{"_index":30,"title":{},"body":{"controllers/AppController.html":{},"injectables/JwtConfigService.html":{},"injectables/MongooseConfigService.html":{},"injectables/MulterConfigService.html":{}}}],["request",{"_index":40,"title":{},"body":{"controllers/AppController.html":{},"guards/RolesGaurd.html":{},"miscellaneous/variables.html":{}}}],["request.user",{"_index":904,"title":{},"body":{"miscellaneous/variables.html":{}}}],["requirements",{"_index":255,"title":{},"body":{"interfaces/Course.html":{},"classes/Feed.html":{}}}],["reset",{"_index":106,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/FeedModule.html":{},"modules/UserModule.html":{},"overview.html":{}}}],["result",{"_index":76,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"interfaces/Author.html":{},"interfaces/CollationDocument.html":{},"interfaces/Course.html":{},"interfaces/CreateStudentDto.html":{},"interfaces/CreateTutorDto.html":{},"interfaces/CreateUserDto.html":{},"classes/Feed.html":{},"controllers/FeedController.html":{},"modules/FeedModule.html":{},"injectables/FeedService.html":{},"interfaces/IFeedController.html":{},"interfaces/IFeedService.html":{},"classes/JoiValidationPipe.html":{},"injectables/JwtAuthGuard.html":{},"injectables/JwtConfigService.html":{},"injectables/JwtStrategy.html":{},"interfaces/Learner.html":{},"injectables/LocalAuthGuard.html":{},"injectables/LocalStrategy.html":{},"classes/Material.html":{},"injectables/MongooseConfigService.html":{},"injectables/MulterConfigService.html":{},"injectables/PaginateModel.html":{},"interfaces/PaginateOptions.html":{},"interfaces/PaginationResult.html":{},"interfaces/PopulateOptions.html":{},"interfaces/QuestionnaireBody.html":{},"guards/RolesGaurd.html":{},"classes/Student.html":{},"interfaces/Todo.html":{},"classes/Tutor.html":{},"interfaces/User.html":{},"controllers/UserController.html":{},"modules/UserModule.html":{},"injectables/UserService.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/functions.html":{},"index.html":{},"modules.html":{},"overview.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["result.topromise",{"_index":85,"title":{},"body":{"controllers/AppController.html":{}}}],["results",{"_index":89,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"interfaces/Author.html":{},"interfaces/CollationDocument.html":{},"interfaces/Course.html":{},"interfaces/CreateStudentDto.html":{},"interfaces/CreateTutorDto.html":{},"interfaces/CreateUserDto.html":{},"classes/Feed.html":{},"controllers/FeedController.html":{},"modules/FeedModule.html":{},"injectables/FeedService.html":{},"interfaces/IFeedController.html":{},"interfaces/IFeedService.html":{},"classes/JoiValidationPipe.html":{},"injectables/JwtAuthGuard.html":{},"injectables/JwtConfigService.html":{},"injectables/JwtStrategy.html":{},"interfaces/Learner.html":{},"injectables/LocalAuthGuard.html":{},"injectables/LocalStrategy.html":{},"classes/Material.html":{},"injectables/MongooseConfigService.html":{},"injectables/MulterConfigService.html":{},"injectables/PaginateModel.html":{},"interfaces/PaginateOptions.html":{},"interfaces/PaginationResult.html":{},"interfaces/PopulateOptions.html":{},"interfaces/QuestionnaireBody.html":{},"guards/RolesGaurd.html":{},"classes/Student.html":{},"interfaces/Todo.html":{},"classes/Tutor.html":{},"interfaces/User.html":{},"controllers/UserController.html":{},"modules/UserModule.html":{},"injectables/UserService.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/functions.html":{},"index.html":{},"modules.html":{},"overview.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["return",{"_index":63,"title":{},"body":{"controllers/AppController.html":{},"injectables/AppService.html":{},"injectables/AuthService.html":{},"controllers/FeedController.html":{},"injectables/FeedService.html":{},"classes/JoiValidationPipe.html":{},"injectables/JwtAuthGuard.html":{},"injectables/JwtConfigService.html":{},"injectables/JwtStrategy.html":{},"injectables/LocalStrategy.html":{},"injectables/MongooseConfigService.html":{},"injectables/MulterConfigService.html":{},"interfaces/QuestionnaireBody.html":{},"guards/RolesGaurd.html":{},"classes/Student.html":{},"interfaces/Todo.html":{},"controllers/UserController.html":{},"injectables/UserService.html":{},"miscellaneous/variables.html":{}}}],["returns",{"_index":19,"title":{},"body":{"controllers/AppController.html":{},"injectables/AppService.html":{},"injectables/AuthService.html":{},"controllers/FeedController.html":{},"injectables/FeedService.html":{},"classes/JoiValidationPipe.html":{},"injectables/JwtAuthGuard.html":{},"injectables/JwtConfigService.html":{},"injectables/JwtStrategy.html":{},"injectables/LocalStrategy.html":{},"injectables/MongooseConfigService.html":{},"injectables/MulterConfigService.html":{},"injectables/PaginateModel.html":{},"guards/RolesGaurd.html":{},"controllers/UserController.html":{},"injectables/UserService.html":{},"miscellaneous/functions.html":{}}}],["rimraf",{"_index":781,"title":{},"body":{"dependencies.html":{}}}],["rolesgaurd",{"_index":598,"title":{"guards/RolesGaurd.html":{}},"body":{"guards/RolesGaurd.html":{},"controllers/UserController.html":{},"coverage.html":{}}}],["route",{"_index":306,"title":{},"body":{"controllers/FeedController.html":{}}}],["run",{"_index":810,"title":{},"body":{"index.html":{}}}],["rxjs",{"_index":121,"title":{},"body":{"injectables/AppService.html":{},"guards/RolesGaurd.html":{},"interfaces/Todo.html":{},"dependencies.html":{}}}],["salt",{"_index":886,"title":{},"body":{"miscellaneous/variables.html":{}}}],["saltrounds",{"_index":885,"title":{},"body":{"miscellaneous/variables.html":{}}}],["saveduser",{"_index":538,"title":{},"body":{"interfaces/QuestionnaireBody.html":{},"injectables/UserService.html":{}}}],["scalable",{"_index":798,"title":{},"body":{"index.html":{}}}],["schema",{"_index":281,"title":{},"body":{"classes/Feed.html":{},"modules/FeedModule.html":{},"classes/JoiValidationPipe.html":{},"classes/Material.html":{},"classes/Student.html":{},"classes/Tutor.html":{},"modules/UserModule.html":{},"miscellaneous/variables.html":{}}}],["schema.plugin(require('mongoose",{"_index":899,"title":{},"body":{"miscellaneous/variables.html":{}}}],["schemafactory",{"_index":282,"title":{},"body":{"classes/Feed.html":{},"classes/Material.html":{},"classes/Student.html":{},"classes/Tutor.html":{}}}],["schemafactory.createforclass(feed",{"_index":286,"title":{},"body":{"classes/Feed.html":{},"miscellaneous/variables.html":{}}}],["schemafactory.createforclass(material",{"_index":486,"title":{},"body":{"classes/Material.html":{},"miscellaneous/variables.html":{}}}],["schemafactory.createforclass(student",{"_index":618,"title":{},"body":{"classes/Student.html":{},"miscellaneous/variables.html":{}}}],["schemafactory.createforclass(tutor",{"_index":634,"title":{},"body":{"classes/Tutor.html":{},"miscellaneous/variables.html":{}}}],["schemas/feed.schema",{"_index":314,"title":{},"body":{"modules/FeedModule.html":{},"injectables/FeedService.html":{}}}],["schemas/files.schema",{"_index":500,"title":{},"body":{"interfaces/QuestionnaireBody.html":{},"modules/UserModule.html":{},"injectables/UserService.html":{}}}],["schemas/student.schema",{"_index":503,"title":{},"body":{"interfaces/QuestionnaireBody.html":{},"modules/UserModule.html":{},"injectables/UserService.html":{}}}],["schemas/tutor.schema",{"_index":506,"title":{},"body":{"interfaces/QuestionnaireBody.html":{},"modules/UserModule.html":{},"injectables/UserService.html":{}}}],["schemas/validation/create",{"_index":660,"title":{},"body":{"controllers/UserController.html":{}}}],["secret",{"_index":438,"title":{},"body":{"injectables/JwtConfigService.html":{},"injectables/MongooseConfigService.html":{},"injectables/MulterConfigService.html":{}}}],["secretorkey",{"_index":458,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["select",{"_index":217,"title":{},"body":{"interfaces/CollationDocument.html":{},"injectables/PaginateModel.html":{},"interfaces/PaginateOptions.html":{},"interfaces/PaginationResult.html":{},"interfaces/PopulateOptions.html":{}}}],["server",{"_index":799,"title":{},"body":{"index.html":{}}}],["service",{"_index":419,"title":{},"body":{"injectables/JwtConfigService.html":{},"injectables/MongooseConfigService.html":{},"injectables/MulterConfigService.html":{}}}],["service.interface.ts",{"_index":337,"title":{},"body":{"interfaces/IFeedService.html":{},"coverage.html":{}}}],["setting",{"_index":436,"title":{},"body":{"injectables/JwtConfigService.html":{},"injectables/MongooseConfigService.html":{},"injectables/MulterConfigService.html":{}}}],["setup",{"_index":421,"title":{},"body":{"injectables/JwtConfigService.html":{},"injectables/MongooseConfigService.html":{},"injectables/MulterConfigService.html":{}}}],["shared/hashing",{"_index":167,"title":{},"body":{"injectables/AuthService.html":{},"interfaces/QuestionnaireBody.html":{},"injectables/UserService.html":{}}}],["shared/joivalidation.pipe",{"_index":657,"title":{},"body":{"controllers/UserController.html":{}}}],["side",{"_index":800,"title":{},"body":{"index.html":{}}}],["signoptions",{"_index":440,"title":{},"body":{"injectables/JwtConfigService.html":{},"injectables/MongooseConfigService.html":{},"injectables/MulterConfigService.html":{}}}],["single",{"_index":305,"title":{},"body":{"controllers/FeedController.html":{}}}],["sort",{"_index":221,"title":{},"body":{"interfaces/CollationDocument.html":{},"injectables/PaginateModel.html":{},"interfaces/PaginateOptions.html":{},"interfaces/PaginationResult.html":{},"interfaces/PopulateOptions.html":{}}}],["source",{"_index":4,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"interfaces/Author.html":{},"interfaces/CollationDocument.html":{},"interfaces/Course.html":{},"interfaces/CreateStudentDto.html":{},"interfaces/CreateTutorDto.html":{},"interfaces/CreateUserDto.html":{},"classes/Feed.html":{},"controllers/FeedController.html":{},"modules/FeedModule.html":{},"injectables/FeedService.html":{},"interfaces/IFeedController.html":{},"interfaces/IFeedService.html":{},"classes/JoiValidationPipe.html":{},"injectables/JwtAuthGuard.html":{},"injectables/JwtConfigService.html":{},"injectables/JwtStrategy.html":{},"interfaces/Learner.html":{},"injectables/LocalAuthGuard.html":{},"injectables/LocalStrategy.html":{},"classes/Material.html":{},"injectables/MongooseConfigService.html":{},"injectables/MulterConfigService.html":{},"injectables/PaginateModel.html":{},"interfaces/PaginateOptions.html":{},"interfaces/PaginationResult.html":{},"interfaces/PopulateOptions.html":{},"interfaces/QuestionnaireBody.html":{},"guards/RolesGaurd.html":{},"classes/Student.html":{},"interfaces/Todo.html":{},"classes/Tutor.html":{},"interfaces/User.html":{},"controllers/UserController.html":{},"modules/UserModule.html":{},"injectables/UserService.html":{},"index.html":{}}}],["sponsors",{"_index":829,"title":{},"body":{"index.html":{}}}],["src/.../configuration.ts",{"_index":867,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../constants.ts",{"_index":866,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../create",{"_index":864,"title":{},"body":{"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["src/.../feed.module.ts",{"_index":869,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../feed.schema.ts",{"_index":859,"title":{},"body":{"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["src/.../files.schema.ts",{"_index":860,"title":{},"body":{"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["src/.../hashing.ts",{"_index":868,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../main.ts",{"_index":789,"title":{},"body":{"miscellaneous/functions.html":{}}}],["src/.../modules.ts",{"_index":871,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../mongoosemodelfactories.ts",{"_index":872,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../student.schema.ts",{"_index":861,"title":{},"body":{"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["src/.../tutor.schema.ts",{"_index":862,"title":{},"body":{"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["src/.../user.controller.ts",{"_index":790,"title":{},"body":{"miscellaneous/functions.html":{}}}],["src/.../user.decorator.ts",{"_index":873,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../user.module.ts",{"_index":870,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../user.service.ts",{"_index":863,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["src/app.controller.ts",{"_index":6,"title":{},"body":{"controllers/AppController.html":{},"coverage.html":{}}}],["src/app.controller.ts:29",{"_index":18,"title":{},"body":{"controllers/AppController.html":{}}}],["src/app.controller.ts:35",{"_index":26,"title":{},"body":{"controllers/AppController.html":{}}}],["src/app.controller.ts:41",{"_index":34,"title":{},"body":{"controllers/AppController.html":{}}}],["src/app.controller.ts:58",{"_index":23,"title":{},"body":{"controllers/AppController.html":{}}}],["src/app.module.ts",{"_index":108,"title":{},"body":{"modules/AppModule.html":{}}}],["src/app.service.ts",{"_index":114,"title":{},"body":{"injectables/AppService.html":{},"interfaces/Todo.html":{},"coverage.html":{}}}],["src/app.service.ts:13",{"_index":117,"title":{},"body":{"injectables/AppService.html":{}}}],["src/app.service.ts:15",{"_index":118,"title":{},"body":{"injectables/AppService.html":{}}}],["src/app.service.ts:19",{"_index":119,"title":{},"body":{"injectables/AppService.html":{}}}],["src/auth/auth.module.ts",{"_index":140,"title":{},"body":{"modules/AuthModule.html":{}}}],["src/auth/auth.service.ts",{"_index":155,"title":{},"body":{"injectables/AuthService.html":{},"coverage.html":{}}}],["src/auth/auth.service.ts:13",{"_index":164,"title":{},"body":{"injectables/AuthService.html":{}}}],["src/auth/auth.service.ts:32",{"_index":161,"title":{},"body":{"injectables/AuthService.html":{}}}],["src/auth/auth.service.ts:7",{"_index":159,"title":{},"body":{"injectables/AuthService.html":{}}}],["src/auth/jwt",{"_index":358,"title":{},"body":{"injectables/JwtAuthGuard.html":{},"coverage.html":{}}}],["src/auth/jwt.strategy.ts",{"_index":443,"title":{},"body":{"injectables/JwtStrategy.html":{},"coverage.html":{}}}],["src/auth/jwt.strategy.ts:16",{"_index":447,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["src/auth/jwt.strategy.ts:7",{"_index":445,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["src/auth/local",{"_index":461,"title":{},"body":{"injectables/LocalAuthGuard.html":{},"coverage.html":{}}}],["src/auth/local.strategy.ts",{"_index":463,"title":{},"body":{"injectables/LocalStrategy.html":{},"coverage.html":{}}}],["src/auth/local.strategy.ts:12",{"_index":467,"title":{},"body":{"injectables/LocalStrategy.html":{}}}],["src/auth/local.strategy.ts:7",{"_index":465,"title":{},"body":{"injectables/LocalStrategy.html":{}}}],["src/config/configuration.ts",{"_index":380,"title":{},"body":{"injectables/JwtConfigService.html":{},"injectables/MongooseConfigService.html":{},"injectables/MulterConfigService.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/config/configuration.ts:36",{"_index":487,"title":{},"body":{"injectables/MongooseConfigService.html":{}}}],["src/config/configuration.ts:38",{"_index":488,"title":{},"body":{"injectables/MongooseConfigService.html":{}}}],["src/config/configuration.ts:52",{"_index":489,"title":{},"body":{"injectables/MulterConfigService.html":{}}}],["src/config/configuration.ts:54",{"_index":490,"title":{},"body":{"injectables/MulterConfigService.html":{}}}],["src/config/configuration.ts:74",{"_index":385,"title":{},"body":{"injectables/JwtConfigService.html":{}}}],["src/config/configuration.ts:76",{"_index":386,"title":{},"body":{"injectables/JwtConfigService.html":{}}}],["src/config/constants.ts",{"_index":733,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/config/modules.ts",{"_index":735,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/config/mongoosemodelfactories.ts",{"_index":736,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/decotators/user.decorator.ts",{"_index":738,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/feed/feed.controller.ts",{"_index":288,"title":{},"body":{"controllers/FeedController.html":{},"coverage.html":{}}}],["src/feed/feed.controller.ts:10",{"_index":297,"title":{},"body":{"controllers/FeedController.html":{}}}],["src/feed/feed.controller.ts:16",{"_index":296,"title":{},"body":{"controllers/FeedController.html":{}}}],["src/feed/feed.controller.ts:21",{"_index":295,"title":{},"body":{"controllers/FeedController.html":{}}}],["src/feed/feed.module.ts",{"_index":309,"title":{},"body":{"modules/FeedModule.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/feed/feed.service.ts",{"_index":318,"title":{},"body":{"injectables/FeedService.html":{},"coverage.html":{}}}],["src/feed/feed.service.ts:17",{"_index":323,"title":{},"body":{"injectables/FeedService.html":{}}}],["src/feed/feed.service.ts:9",{"_index":321,"title":{},"body":{"injectables/FeedService.html":{}}}],["src/feed/interfaces/feed",{"_index":333,"title":{},"body":{"interfaces/IFeedController.html":{},"interfaces/IFeedService.html":{},"coverage.html":{}}}],["src/feed/interfaces/feed.interface.ts",{"_index":248,"title":{},"body":{"interfaces/Course.html":{},"coverage.html":{}}}],["src/feed/schemas/feed.schema.ts",{"_index":267,"title":{},"body":{"classes/Feed.html":{},"coverage.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["src/feed/schemas/feed.schema.ts:10",{"_index":274,"title":{},"body":{"classes/Feed.html":{}}}],["src/feed/schemas/feed.schema.ts:13",{"_index":280,"title":{},"body":{"classes/Feed.html":{}}}],["src/feed/schemas/feed.schema.ts:16",{"_index":279,"title":{},"body":{"classes/Feed.html":{}}}],["src/feed/schemas/feed.schema.ts:19",{"_index":275,"title":{},"body":{"classes/Feed.html":{}}}],["src/feed/schemas/feed.schema.ts:22",{"_index":272,"title":{},"body":{"classes/Feed.html":{}}}],["src/feed/schemas/feed.schema.ts:25",{"_index":276,"title":{},"body":{"classes/Feed.html":{}}}],["src/feed/schemas/feed.schema.ts:28",{"_index":271,"title":{},"body":{"classes/Feed.html":{}}}],["src/feed/schemas/feed.schema.ts:31",{"_index":270,"title":{},"body":{"classes/Feed.html":{}}}],["src/feed/schemas/feed.schema.ts:34",{"_index":277,"title":{},"body":{"classes/Feed.html":{}}}],["src/feed/schemas/feed.schema.ts:37",{"_index":278,"title":{},"body":{"classes/Feed.html":{}}}],["src/feed/schemas/feed.schema.ts:40",{"_index":273,"title":{},"body":{"classes/Feed.html":{}}}],["src/guards/roles.guard.ts",{"_index":600,"title":{},"body":{"guards/RolesGaurd.html":{},"coverage.html":{}}}],["src/guards/roles.guard.ts:6",{"_index":601,"title":{},"body":{"guards/RolesGaurd.html":{}}}],["src/main.ts",{"_index":741,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["src/providers/paginatemodel.provider.ts",{"_index":202,"title":{},"body":{"interfaces/CollationDocument.html":{},"injectables/PaginateModel.html":{},"interfaces/PaginateOptions.html":{},"interfaces/PaginationResult.html":{},"interfaces/PopulateOptions.html":{},"coverage.html":{}}}],["src/providers/paginatemodel.provider.ts:47",{"_index":493,"title":{},"body":{"injectables/PaginateModel.html":{}}}],["src/shared/hashing.ts",{"_index":745,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/shared/joivalidation.pipe.ts",{"_index":340,"title":{},"body":{"classes/JoiValidationPipe.html":{},"coverage.html":{}}}],["src/shared/joivalidation.pipe.ts:11",{"_index":349,"title":{},"body":{"classes/JoiValidationPipe.html":{}}}],["src/shared/joivalidation.pipe.ts:8",{"_index":345,"title":{},"body":{"classes/JoiValidationPipe.html":{}}}],["src/user/dto/create",{"_index":261,"title":{},"body":{"interfaces/CreateStudentDto.html":{},"interfaces/CreateTutorDto.html":{},"interfaces/CreateUserDto.html":{},"coverage.html":{},"miscellaneous/typealiases.html":{}}}],["src/user/interfaces/user.interface.ts",{"_index":189,"title":{},"body":{"interfaces/Author.html":{},"interfaces/Learner.html":{},"interfaces/User.html":{},"coverage.html":{}}}],["src/user/schemas/files.schema.ts",{"_index":472,"title":{},"body":{"classes/Material.html":{},"coverage.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["src/user/schemas/files.schema.ts:12",{"_index":478,"title":{},"body":{"classes/Material.html":{}}}],["src/user/schemas/files.schema.ts:15",{"_index":479,"title":{},"body":{"classes/Material.html":{}}}],["src/user/schemas/files.schema.ts:18",{"_index":475,"title":{},"body":{"classes/Material.html":{}}}],["src/user/schemas/files.schema.ts:21",{"_index":482,"title":{},"body":{"classes/Material.html":{}}}],["src/user/schemas/student.schema.ts",{"_index":604,"title":{},"body":{"classes/Student.html":{},"coverage.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["src/user/schemas/student.schema.ts:10",{"_index":607,"title":{},"body":{"classes/Student.html":{}}}],["src/user/schemas/student.schema.ts:13",{"_index":609,"title":{},"body":{"classes/Student.html":{}}}],["src/user/schemas/student.schema.ts:16",{"_index":612,"title":{},"body":{"classes/Student.html":{}}}],["src/user/schemas/student.schema.ts:19",{"_index":606,"title":{},"body":{"classes/Student.html":{}}}],["src/user/schemas/student.schema.ts:22",{"_index":614,"title":{},"body":{"classes/Student.html":{}}}],["src/user/schemas/student.schema.ts:25",{"_index":611,"title":{},"body":{"classes/Student.html":{}}}],["src/user/schemas/student.schema.ts:28",{"_index":608,"title":{},"body":{"classes/Student.html":{}}}],["src/user/schemas/student.schema.ts:31",{"_index":613,"title":{},"body":{"classes/Student.html":{}}}],["src/user/schemas/tutor.schema.ts",{"_index":623,"title":{},"body":{"classes/Tutor.html":{},"coverage.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["src/user/schemas/tutor.schema.ts:12",{"_index":626,"title":{},"body":{"classes/Tutor.html":{}}}],["src/user/schemas/tutor.schema.ts:15",{"_index":628,"title":{},"body":{"classes/Tutor.html":{}}}],["src/user/schemas/tutor.schema.ts:18",{"_index":629,"title":{},"body":{"classes/Tutor.html":{}}}],["src/user/schemas/tutor.schema.ts:21",{"_index":625,"title":{},"body":{"classes/Tutor.html":{}}}],["src/user/schemas/tutor.schema.ts:24",{"_index":630,"title":{},"body":{"classes/Tutor.html":{}}}],["src/user/schemas/tutor.schema.ts:27",{"_index":627,"title":{},"body":{"classes/Tutor.html":{}}}],["src/user/schemas/tutor.schema.ts:30",{"_index":624,"title":{},"body":{"classes/Tutor.html":{}}}],["src/user/schemas/validation/create",{"_index":747,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/user/user.controller.ts",{"_index":636,"title":{},"body":{"controllers/UserController.html":{},"coverage.html":{},"miscellaneous/functions.html":{}}}],["src/user/user.controller.ts:46",{"_index":648,"title":{},"body":{"controllers/UserController.html":{}}}],["src/user/user.controller.ts:57",{"_index":651,"title":{},"body":{"controllers/UserController.html":{}}}],["src/user/user.controller.ts:72",{"_index":654,"title":{},"body":{"controllers/UserController.html":{}}}],["src/user/user.controller.ts:86",{"_index":645,"title":{},"body":{"controllers/UserController.html":{}}}],["src/user/user.module.ts",{"_index":706,"title":{},"body":{"modules/UserModule.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/user/user.service.ts",{"_index":495,"title":{},"body":{"interfaces/QuestionnaireBody.html":{},"injectables/UserService.html":{},"coverage.html":{},"miscellaneous/typealiases.html":{}}}],["src/user/user.service.ts:107",{"_index":723,"title":{},"body":{"injectables/UserService.html":{}}}],["src/user/user.service.ts:112",{"_index":719,"title":{},"body":{"injectables/UserService.html":{}}}],["src/user/user.service.ts:25",{"_index":716,"title":{},"body":{"injectables/UserService.html":{}}}],["src/user/user.service.ts:32",{"_index":720,"title":{},"body":{"injectables/UserService.html":{}}}],["src/user/user.service.ts:46",{"_index":722,"title":{},"body":{"injectables/UserService.html":{}}}],["src/user/user.service.ts:60",{"_index":717,"title":{},"body":{"injectables/UserService.html":{}}}],["src/user/user.service.ts:88",{"_index":718,"title":{},"body":{"injectables/UserService.html":{}}}],["start",{"_index":811,"title":{},"body":{"index.html":{}}}],["start:dev",{"_index":814,"title":{},"body":{"index.html":{}}}],["start:prodtest",{"_index":816,"title":{},"body":{"index.html":{}}}],["started",{"_index":792,"title":{"index.html":{}},"body":{}}],["starter",{"_index":804,"title":{},"body":{"index.html":{}}}],["startindex",{"_index":243,"title":{},"body":{"interfaces/CollationDocument.html":{},"injectables/PaginateModel.html":{},"interfaces/PaginateOptions.html":{},"interfaces/PaginationResult.html":{},"interfaces/PopulateOptions.html":{}}}],["statements",{"_index":727,"title":{},"body":{"coverage.html":{}}}],["static",{"_index":760,"title":{},"body":{"dependencies.html":{}}}],["statuscode",{"_index":375,"title":{},"body":{"injectables/JwtAuthGuard.html":{}}}],["stay",{"_index":839,"title":{},"body":{"index.html":{}}}],["storage",{"_index":428,"title":{},"body":{"injectables/JwtConfigService.html":{},"injectables/MongooseConfigService.html":{},"injectables/MulterConfigService.html":{}}}],["str",{"_index":415,"title":{},"body":{"injectables/JwtConfigService.html":{},"injectables/MongooseConfigService.html":{},"injectables/MulterConfigService.html":{},"miscellaneous/variables.html":{}}}],["strategy",{"_index":450,"title":{},"body":{"injectables/JwtStrategy.html":{},"injectables/LocalStrategy.html":{}}}],["strength",{"_index":210,"title":{},"body":{"interfaces/CollationDocument.html":{},"injectables/PaginateModel.html":{},"interfaces/PaginateOptions.html":{},"interfaces/PaginationResult.html":{},"interfaces/PopulateOptions.html":{}}}],["string",{"_index":21,"title":{},"body":{"controllers/AppController.html":{},"injectables/AppService.html":{},"injectables/AuthService.html":{},"interfaces/Author.html":{},"interfaces/CollationDocument.html":{},"interfaces/Course.html":{},"interfaces/CreateStudentDto.html":{},"interfaces/CreateTutorDto.html":{},"interfaces/CreateUserDto.html":{},"classes/Feed.html":{},"injectables/JwtConfigService.html":{},"interfaces/Learner.html":{},"injectables/LocalStrategy.html":{},"classes/Material.html":{},"injectables/MongooseConfigService.html":{},"injectables/MulterConfigService.html":{},"injectables/PaginateModel.html":{},"interfaces/PaginateOptions.html":{},"interfaces/PaginationResult.html":{},"interfaces/PopulateOptions.html":{},"interfaces/QuestionnaireBody.html":{},"classes/Student.html":{},"interfaces/Todo.html":{},"classes/Tutor.html":{},"interfaces/User.html":{},"injectables/UserService.html":{},"miscellaneous/variables.html":{}}}],["student",{"_index":501,"title":{"classes/Student.html":{}},"body":{"interfaces/QuestionnaireBody.html":{},"classes/Student.html":{},"controllers/UserController.html":{},"modules/UserModule.html":{},"injectables/UserService.html":{},"coverage.html":{}}}],["student.name",{"_index":709,"title":{},"body":{"modules/UserModule.html":{},"miscellaneous/variables.html":{}}}],["studentdocument",{"_index":502,"title":{},"body":{"interfaces/QuestionnaireBody.html":{},"classes/Student.html":{},"injectables/UserService.html":{},"miscellaneous/typealiases.html":{}}}],["studentmodel",{"_index":510,"title":{},"body":{"interfaces/QuestionnaireBody.html":{},"injectables/UserService.html":{}}}],["studentnumber",{"_index":179,"title":{},"body":{"injectables/AuthService.html":{},"interfaces/Author.html":{},"interfaces/Learner.html":{},"interfaces/QuestionnaireBody.html":{},"classes/Student.html":{},"interfaces/User.html":{},"controllers/UserController.html":{},"injectables/UserService.html":{},"miscellaneous/variables.html":{}}}],["studentschema",{"_index":617,"title":{},"body":{"classes/Student.html":{},"modules/UserModule.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["studentschema.virtual('fullname').get(function",{"_index":619,"title":{},"body":{"classes/Student.html":{}}}],["style",{"_index":644,"title":{},"body":{"controllers/UserController.html":{}}}],["success",{"_index":680,"title":{},"body":{"controllers/UserController.html":{}}}],["super",{"_index":453,"title":{},"body":{"injectables/JwtStrategy.html":{},"injectables/LocalStrategy.html":{}}}],["super.canactivate(context",{"_index":374,"title":{},"body":{"injectables/JwtAuthGuard.html":{}}}],["support",{"_index":830,"title":{},"body":{"index.html":{},"modules.html":{}}}],["svg",{"_index":849,"title":{},"body":{"modules.html":{}}}],["swagger",{"_index":784,"title":{},"body":{"dependencies.html":{}}}],["table",{"_index":751,"title":{},"body":{"coverage.html":{}}}],["tablesort(document.getelementbyid('coverage",{"_index":750,"title":{},"body":{"coverage.html":{}}}],["test",{"_index":819,"title":{},"body":{"index.html":{}}}],["test:covsupport",{"_index":822,"title":{},"body":{"index.html":{}}}],["test:e2e",{"_index":821,"title":{},"body":{"index.html":{}}}],["tests",{"_index":818,"title":{},"body":{"index.html":{}}}],["thanks",{"_index":828,"title":{},"body":{"index.html":{}}}],["theorist",{"_index":581,"title":{},"body":{"interfaces/QuestionnaireBody.html":{},"injectables/UserService.html":{}}}],["theoristanswers",{"_index":560,"title":{},"body":{"interfaces/QuestionnaireBody.html":{},"injectables/UserService.html":{}}}],["theoristsum",{"_index":574,"title":{},"body":{"interfaces/QuestionnaireBody.html":{},"injectables/UserService.html":{}}}],["this.appservice.gettodos",{"_index":82,"title":{},"body":{"controllers/AppController.html":{}}}],["this.authservice.login(req.user",{"_index":69,"title":{},"body":{"controllers/AppController.html":{}}}],["this.authservice.validateuser(username",{"_index":469,"title":{},"body":{"injectables/LocalStrategy.html":{}}}],["this.configservice.get('database",{"_index":424,"title":{},"body":{"injectables/JwtConfigService.html":{},"injectables/MongooseConfigService.html":{},"injectables/MulterConfigService.html":{}}}],["this.configservice.get('jwtsecret",{"_index":439,"title":{},"body":{"injectables/JwtConfigService.html":{},"injectables/MongooseConfigService.html":{},"injectables/MulterConfigService.html":{}}}],["this.configservice.get('upload_path",{"_index":430,"title":{},"body":{"injectables/JwtConfigService.html":{},"injectables/MongooseConfigService.html":{},"injectables/MulterConfigService.html":{}}}],["this.feedservice.fetchfeeds",{"_index":304,"title":{},"body":{"controllers/FeedController.html":{}}}],["this.firstname",{"_index":620,"title":{},"body":{"classes/Student.html":{}}}],["this.httpservice.get('https://jsonplaceholder.typicode.com/todos",{"_index":133,"title":{},"body":{"injectables/AppService.html":{},"interfaces/Todo.html":{}}}],["this.jwtservice.sign(payload",{"_index":186,"title":{},"body":{"injectables/AuthService.html":{}}}],["this.materialmodel(body",{"_index":546,"title":{},"body":{"interfaces/QuestionnaireBody.html":{},"injectables/UserService.html":{}}}],["this.othernames",{"_index":622,"title":{},"body":{"classes/Student.html":{}}}],["this.paginate",{"_index":326,"title":{},"body":{"injectables/FeedService.html":{}}}],["this.paginatemodel",{"_index":327,"title":{},"body":{"injectables/FeedService.html":{}}}],["this.paginatemodel.paginate(this.feedmodel",{"_index":329,"title":{},"body":{"injectables/FeedService.html":{}}}],["this.schema.validate(value",{"_index":353,"title":{},"body":{"classes/JoiValidationPipe.html":{}}}],["this.studentmodel",{"_index":524,"title":{},"body":{"interfaces/QuestionnaireBody.html":{},"injectables/UserService.html":{}}}],["this.studentmodel(user",{"_index":537,"title":{},"body":{"interfaces/QuestionnaireBody.html":{},"injectables/UserService.html":{}}}],["this.studentmodel.findbyid(id",{"_index":528,"title":{},"body":{"interfaces/QuestionnaireBody.html":{},"injectables/UserService.html":{}}}],["this.studentmodel.findone",{"_index":596,"title":{},"body":{"interfaces/QuestionnaireBody.html":{},"injectables/UserService.html":{}}}],["this.studentmodel.updateone",{"_index":594,"title":{},"body":{"interfaces/QuestionnaireBody.html":{},"injectables/UserService.html":{}}}],["this.surname",{"_index":621,"title":{},"body":{"classes/Student.html":{}}}],["this.tutormodel",{"_index":542,"title":{},"body":{"interfaces/QuestionnaireBody.html":{},"injectables/UserService.html":{}}}],["this.tutormodel(user",{"_index":543,"title":{},"body":{"interfaces/QuestionnaireBody.html":{},"injectables/UserService.html":{}}}],["this.tutormodel.findbyid(id",{"_index":527,"title":{},"body":{"interfaces/QuestionnaireBody.html":{},"injectables/UserService.html":{}}}],["this.tutormodel.findone",{"_index":522,"title":{},"body":{"interfaces/QuestionnaireBody.html":{},"injectables/UserService.html":{}}}],["this.userservice.createstudent(body",{"_index":688,"title":{},"body":{"controllers/UserController.html":{}}}],["this.userservice.createtutor(body",{"_index":694,"title":{},"body":{"controllers/UserController.html":{}}}],["this.userservice.determine",{"_index":700,"title":{},"body":{"controllers/UserController.html":{}}}],["this.userservice.findone(username",{"_index":168,"title":{},"body":{"injectables/AuthService.html":{}}}],["this.userservice.profile(user",{"_index":679,"title":{},"body":{"controllers/UserController.html":{}}}],["this.userservice.uploadfile",{"_index":77,"title":{},"body":{"controllers/AppController.html":{}}}],["throw",{"_index":354,"title":{},"body":{"classes/JoiValidationPipe.html":{},"injectables/JwtAuthGuard.html":{},"injectables/LocalStrategy.html":{},"interfaces/QuestionnaireBody.html":{},"controllers/UserController.html":{},"injectables/UserService.html":{}}}],["thumbnail",{"_index":256,"title":{},"body":{"interfaces/Course.html":{},"classes/Feed.html":{}}}],["title",{"_index":129,"title":{},"body":{"injectables/AppService.html":{},"interfaces/Author.html":{},"interfaces/Course.html":{},"classes/Feed.html":{},"interfaces/Learner.html":{},"interfaces/Todo.html":{},"classes/Tutor.html":{},"interfaces/User.html":{},"controllers/UserController.html":{},"miscellaneous/variables.html":{}}}],["todo",{"_index":125,"title":{"interfaces/Todo.html":{}},"body":{"injectables/AppService.html":{},"interfaces/Todo.html":{},"coverage.html":{}}}],["todos",{"_index":83,"title":{},"body":{"controllers/AppController.html":{}}}],["todos.data",{"_index":87,"title":{},"body":{"controllers/AppController.html":{}}}],["totaldocs",{"_index":229,"title":{},"body":{"interfaces/CollationDocument.html":{},"injectables/PaginateModel.html":{},"interfaces/PaginateOptions.html":{},"interfaces/PaginationResult.html":{},"interfaces/PopulateOptions.html":{}}}],["totalpages",{"_index":232,"title":{},"body":{"interfaces/CollationDocument.html":{},"injectables/PaginateModel.html":{},"interfaces/PaginateOptions.html":{},"interfaces/PaginationResult.html":{},"interfaces/PopulateOptions.html":{}}}],["touch",{"_index":840,"title":{},"body":{"index.html":{}}}],["transform",{"_index":342,"title":{},"body":{"classes/JoiValidationPipe.html":{}}}],["transform(value",{"_index":346,"title":{},"body":{"classes/JoiValidationPipe.html":{}}}],["true",{"_index":241,"title":{},"body":{"interfaces/CollationDocument.html":{},"controllers/FeedController.html":{},"injectables/PaginateModel.html":{},"interfaces/PaginateOptions.html":{},"interfaces/PaginationResult.html":{},"interfaces/PopulateOptions.html":{},"guards/RolesGaurd.html":{},"classes/Student.html":{},"classes/Tutor.html":{},"controllers/UserController.html":{},"miscellaneous/variables.html":{}}}],["try",{"_index":328,"title":{},"body":{"injectables/FeedService.html":{},"interfaces/QuestionnaireBody.html":{},"controllers/UserController.html":{},"injectables/UserService.html":{}}}],["tutor",{"_index":504,"title":{"classes/Tutor.html":{}},"body":{"interfaces/QuestionnaireBody.html":{},"classes/Tutor.html":{},"modules/UserModule.html":{},"injectables/UserService.html":{},"coverage.html":{}}}],["tutor.name",{"_index":710,"title":{},"body":{"modules/UserModule.html":{},"miscellaneous/variables.html":{}}}],["tutordocument",{"_index":505,"title":{},"body":{"interfaces/QuestionnaireBody.html":{},"classes/Tutor.html":{},"injectables/UserService.html":{},"miscellaneous/typealiases.html":{}}}],["tutormodel",{"_index":512,"title":{},"body":{"interfaces/QuestionnaireBody.html":{},"injectables/UserService.html":{}}}],["tutorschema",{"_index":633,"title":{},"body":{"classes/Tutor.html":{},"modules/UserModule.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["twitter",{"_index":845,"title":{},"body":{"index.html":{}}}],["type",{"_index":35,"title":{},"body":{"controllers/AppController.html":{},"injectables/AppService.html":{},"injectables/AuthService.html":{},"interfaces/Author.html":{},"interfaces/CollationDocument.html":{},"interfaces/Course.html":{},"interfaces/CreateStudentDto.html":{},"interfaces/CreateTutorDto.html":{},"interfaces/CreateUserDto.html":{},"classes/Feed.html":{},"injectables/FeedService.html":{},"interfaces/IFeedController.html":{},"interfaces/IFeedService.html":{},"classes/JoiValidationPipe.html":{},"injectables/JwtAuthGuard.html":{},"injectables/JwtConfigService.html":{},"injectables/JwtStrategy.html":{},"interfaces/Learner.html":{},"injectables/LocalStrategy.html":{},"classes/Material.html":{},"injectables/MongooseConfigService.html":{},"injectables/MulterConfigService.html":{},"injectables/PaginateModel.html":{},"interfaces/PaginateOptions.html":{},"interfaces/PaginationResult.html":{},"interfaces/PopulateOptions.html":{},"interfaces/QuestionnaireBody.html":{},"guards/RolesGaurd.html":{},"classes/Student.html":{},"interfaces/Todo.html":{},"classes/Tutor.html":{},"interfaces/User.html":{},"controllers/UserController.html":{},"injectables/UserService.html":{},"coverage.html":{},"miscellaneous/functions.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["typealiases",{"_index":857,"title":{"miscellaneous/typealiases.html":{}},"body":{}}],["typescript",{"_index":803,"title":{},"body":{"index.html":{}}}],["u",{"_index":172,"title":{},"body":{"injectables/AuthService.html":{},"interfaces/QuestionnaireBody.html":{},"controllers/UserController.html":{},"injectables/UserService.html":{}}}],["ui",{"_index":785,"title":{},"body":{"dependencies.html":{}}}],["unauthorized",{"_index":377,"title":{},"body":{"injectables/JwtAuthGuard.html":{}}}],["unauthorizedexception",{"_index":370,"title":{},"body":{"injectables/JwtAuthGuard.html":{},"injectables/LocalStrategy.html":{},"controllers/UserController.html":{}}}],["unauthorizedexception('incorrect",{"_index":470,"title":{},"body":{"injectables/LocalStrategy.html":{}}}],["unauthorizedexception('only",{"_index":697,"title":{},"body":{"controllers/UserController.html":{}}}],["undefined",{"_index":481,"title":{},"body":{"classes/Material.html":{},"injectables/PaginateModel.html":{},"classes/Tutor.html":{}}}],["unique",{"_index":615,"title":{},"body":{"classes/Student.html":{},"classes/Tutor.html":{},"dependencies.html":{},"miscellaneous/variables.html":{}}}],["unit",{"_index":817,"title":{},"body":{"index.html":{}}}],["unknown",{"_index":901,"title":{},"body":{"miscellaneous/variables.html":{}}}],["updateduser",{"_index":699,"title":{},"body":{"controllers/UserController.html":{}}}],["upload",{"_index":13,"title":{},"body":{"controllers/AppController.html":{},"injectables/JwtConfigService.html":{},"injectables/MongooseConfigService.html":{},"injectables/MulterConfigService.html":{}}}],["upload(@body",{"_index":72,"title":{},"body":{"controllers/AppController.html":{}}}],["upload(body",{"_index":31,"title":{},"body":{"controllers/AppController.html":{}}}],["upload_path",{"_index":409,"title":{},"body":{"injectables/JwtConfigService.html":{},"injectables/MongooseConfigService.html":{},"injectables/MulterConfigService.html":{}}}],["uploadedfile",{"_index":41,"title":{},"body":{"controllers/AppController.html":{}}}],["uploadfile",{"_index":714,"title":{},"body":{"injectables/UserService.html":{}}}],["uploadfile(body",{"_index":544,"title":{},"body":{"interfaces/QuestionnaireBody.html":{},"injectables/UserService.html":{}}}],["uri",{"_index":423,"title":{},"body":{"injectables/JwtConfigService.html":{},"injectables/MongooseConfigService.html":{},"injectables/MulterConfigService.html":{}}}],["useclass",{"_index":154,"title":{},"body":{"modules/AuthModule.html":{},"miscellaneous/variables.html":{}}}],["usefactory",{"_index":898,"title":{},"body":{"miscellaneous/variables.html":{}}}],["useguards",{"_index":42,"title":{},"body":{"controllers/AppController.html":{},"controllers/UserController.html":{}}}],["useguards(jwtauthguard",{"_index":78,"title":{},"body":{"controllers/AppController.html":{},"controllers/UserController.html":{}}}],["useguards(jwtauthguard)@get('profile",{"_index":647,"title":{},"body":{"controllers/UserController.html":{}}}],["useguards(jwtauthguard)@post('learning",{"_index":643,"title":{},"body":{"controllers/UserController.html":{}}}],["useguards(localauthguard",{"_index":66,"title":{},"body":{"controllers/AppController.html":{}}}],["useguards(localauthguard)@post('auth/login",{"_index":25,"title":{},"body":{"controllers/AppController.html":{}}}],["useinterceptors",{"_index":43,"title":{},"body":{"controllers/AppController.html":{}}}],["useinterceptors(fileinterceptor('file",{"_index":71,"title":{},"body":{"controllers/AppController.html":{}}}],["usepipes",{"_index":656,"title":{},"body":{"controllers/UserController.html":{}}}],["usepipes(new",{"_index":684,"title":{},"body":{"controllers/UserController.html":{}}}],["user",{"_index":81,"title":{"interfaces/User.html":{}},"body":{"controllers/AppController.html":{},"injectables/AuthService.html":{},"interfaces/Author.html":{},"interfaces/CreateStudentDto.html":{},"interfaces/CreateTutorDto.html":{},"interfaces/CreateUserDto.html":{},"injectables/JwtAuthGuard.html":{},"interfaces/Learner.html":{},"injectables/LocalStrategy.html":{},"interfaces/QuestionnaireBody.html":{},"interfaces/User.html":{},"controllers/UserController.html":{},"injectables/UserService.html":{},"coverage.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["user._id",{"_index":174,"title":{},"body":{"injectables/AuthService.html":{}}}],["user.controller",{"_index":707,"title":{},"body":{"modules/UserModule.html":{}}}],["user.dto",{"_index":499,"title":{},"body":{"interfaces/QuestionnaireBody.html":{},"controllers/UserController.html":{},"injectables/UserService.html":{}}}],["user.dto.ts",{"_index":262,"title":{},"body":{"interfaces/CreateStudentDto.html":{},"interfaces/CreateTutorDto.html":{},"interfaces/CreateUserDto.html":{},"coverage.html":{},"miscellaneous/typealiases.html":{}}}],["user.email",{"_index":176,"title":{},"body":{"injectables/AuthService.html":{},"interfaces/QuestionnaireBody.html":{},"injectables/UserService.html":{}}}],["user.id",{"_index":595,"title":{},"body":{"interfaces/QuestionnaireBody.html":{},"injectables/UserService.html":{}}}],["user.isstudent",{"_index":178,"title":{},"body":{"injectables/AuthService.html":{},"controllers/UserController.html":{}}}],["user.learningstyle",{"_index":182,"title":{},"body":{"injectables/AuthService.html":{}}}],["user.password",{"_index":530,"title":{},"body":{"interfaces/QuestionnaireBody.html":{},"injectables/UserService.html":{}}}],["user.schema",{"_index":661,"title":{},"body":{"controllers/UserController.html":{}}}],["user.schema.ts",{"_index":748,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["user.service",{"_index":662,"title":{},"body":{"controllers/UserController.html":{},"modules/UserModule.html":{}}}],["user.studentnumber",{"_index":180,"title":{},"body":{"injectables/AuthService.html":{},"interfaces/QuestionnaireBody.html":{},"injectables/UserService.html":{}}}],["user/interfaces/user.interface",{"_index":257,"title":{},"body":{"interfaces/Course.html":{},"interfaces/CreateStudentDto.html":{},"interfaces/CreateTutorDto.html":{},"interfaces/CreateUserDto.html":{},"classes/Material.html":{},"classes/Student.html":{},"classes/Tutor.html":{}}}],["user/user.module",{"_index":149,"title":{},"body":{"modules/AuthModule.html":{}}}],["user/user.service",{"_index":56,"title":{},"body":{"controllers/AppController.html":{},"injectables/AuthService.html":{}}}],["user?.password",{"_index":171,"title":{},"body":{"injectables/AuthService.html":{}}}],["usercontroller",{"_index":635,"title":{"controllers/UserController.html":{}},"body":{"controllers/UserController.html":{},"modules/UserModule.html":{},"coverage.html":{}}}],["userdetails",{"_index":265,"title":{},"body":{"interfaces/CreateStudentDto.html":{},"interfaces/CreateTutorDto.html":{},"interfaces/CreateUserDto.html":{},"interfaces/QuestionnaireBody.html":{},"controllers/UserController.html":{},"injectables/UserService.html":{},"miscellaneous/typealiases.html":{}}}],["userid",{"_index":126,"title":{},"body":{"injectables/AppService.html":{},"interfaces/QuestionnaireBody.html":{},"interfaces/Todo.html":{},"injectables/UserService.html":{}}}],["usermodule",{"_index":104,"title":{"modules/UserModule.html":{}},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/UserModule.html":{},"modules.html":{},"overview.html":{},"miscellaneous/variables.html":{}}}],["username",{"_index":165,"title":{},"body":{"injectables/AuthService.html":{},"injectables/LocalStrategy.html":{},"interfaces/QuestionnaireBody.html":{},"injectables/UserService.html":{}}}],["users",{"_index":637,"title":{},"body":{"controllers/UserController.html":{}}}],["userservice",{"_index":55,"title":{"injectables/UserService.html":{}},"body":{"controllers/AppController.html":{},"injectables/AuthService.html":{},"interfaces/QuestionnaireBody.html":{},"controllers/UserController.html":{},"modules/UserModule.html":{},"injectables/UserService.html":{},"coverage.html":{},"overview.html":{}}}],["validate",{"_index":444,"title":{},"body":{"injectables/JwtStrategy.html":{},"injectables/LocalStrategy.html":{}}}],["validate(payload",{"_index":446,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["validate(username",{"_index":466,"title":{},"body":{"injectables/LocalStrategy.html":{}}}],["validatepassword",{"_index":166,"title":{},"body":{"injectables/AuthService.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["validatepassword(pass",{"_index":170,"title":{},"body":{"injectables/AuthService.html":{}}}],["validateuser",{"_index":156,"title":{},"body":{"injectables/AuthService.html":{}}}],["validateuser(username",{"_index":162,"title":{},"body":{"injectables/AuthService.html":{}}}],["validation",{"_index":774,"title":{},"body":{"dependencies.html":{},"miscellaneous/variables.html":{}}}],["value",{"_index":350,"title":{},"body":{"classes/JoiValidationPipe.html":{},"miscellaneous/variables.html":{}}}],["variable",{"_index":732,"title":{},"body":{"coverage.html":{}}}],["variables",{"_index":865,"title":{"miscellaneous/variables.html":{}},"body":{"miscellaneous/variables.html":{}}}],["watch",{"_index":812,"title":{},"body":{"index.html":{}}}],["website",{"_index":843,"title":{},"body":{"index.html":{}}}],["world",{"_index":65,"title":{},"body":{"controllers/AppController.html":{},"injectables/AppService.html":{},"interfaces/Todo.html":{}}}],["you'd",{"_index":833,"title":{},"body":{"index.html":{}}}],["z0",{"_index":516,"title":{},"body":{"interfaces/QuestionnaireBody.html":{},"injectables/UserService.html":{}}}],["z]{2,4",{"_index":519,"title":{},"body":{"interfaces/QuestionnaireBody.html":{},"injectables/UserService.html":{}}}],["za",{"_index":515,"title":{},"body":{"interfaces/QuestionnaireBody.html":{},"injectables/UserService.html":{}}}],["zoom",{"_index":105,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/FeedModule.html":{},"modules/UserModule.html":{},"overview.html":{}}}]],"pipeline":["stemmer"]},
    "store": {"controllers/AppController.html":{"url":"controllers/AppController.html","title":"controller - AppController","body":"\n                   \n\n\n\n\n\n\n  Controllers\n  AppController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app.controller.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                getHello\n                            \n                            \n                                    Async\n                                getTodos\n                            \n                            \n                                    Async\n                                login\n                            \n                            \n                                    Async\n                                upload\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            getHello\n                        \n                        \n                    \n                \n            \n            \n                \ngetHello()\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get()@Render('index')\n                \n            \n\n            \n                \n                    Defined in src/app.controller.ts:29\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :     { message: string; }\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            getTodos\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    getTodos()\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get('todos')\n                \n            \n\n            \n                \n                    Defined in src/app.controller.ts:58\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :     {}\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            login\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    login(req)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @UseGuards(LocalAuthGuard)@Post('auth/login')\n                \n            \n\n            \n                \n                    Defined in src/app.controller.ts:35\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    req\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     {}\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            upload\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    upload(body, file: Express.Multer.File)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Post('upload')@UseInterceptors(undefined)\n                \n            \n\n            \n                \n                    Defined in src/app.controller.ts:41\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    body\n                                    \n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    file\n                                    \n                                            Express.Multer.File\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     {}\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n\n\n    \n        import {\n  Body,\n  Controller,\n  Get,\n  Post,\n  Render,\n  Request,\n  UploadedFile,\n  UseGuards,\n  UseInterceptors,\n} from '@nestjs/common';\nimport { FileInterceptor } from '@nestjs/platform-express';\nimport { AuthService } from 'auth/auth.service';\nimport { LocalAuthGuard } from 'auth/local-auth.guard';\nimport { AppService } from './app.service';\nimport { Express } from 'express';\nimport { UserService } from 'user/user.service';\n\n@Controller()\nexport class AppController {\n  constructor(\n    private readonly appService: AppService,\n    private readonly authService: AuthService,\n    private readonly userService: UserService,\n  ) {}\n\n  @Get()\n  @Render('index')\n  getHello() {\n    return { message: 'Hello world!' };\n  }\n\n  @UseGuards(LocalAuthGuard)\n  @Post('auth/login')\n  async login(@Request() req) {\n    return this.authService.login(req.user);\n  }\n\n  @Post('upload')\n  @UseInterceptors(FileInterceptor('file'))\n  async upload(@Body() body, @UploadedFile() file: Express.Multer.File) {\n    console.log(file, body);\n    // const body: CreateMaterialDto = {\n\n    // }\n    // const result = this.userService.uploadFile()\n\n    return 'upload file';\n  }\n\n  // @UseGuards(JwtAuthGuard)\n  // @Get('profile')\n  // getProfile(@User() user) {\n  //   return user;\n  // }\n\n  @Get('todos')\n  async getTodos() {\n    const result = this.appService.getTodos();\n    const todos = await result.toPromise();\n    return { data: todos.data };\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/AppModule.html":{"url":"modules/AppModule.html","title":"module - AppModule","body":"\n                   \n\n\n\n\n    Modules\n    AppModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_AppModule\n\n\n\ncluster_AppModule_imports\n\n\n\ncluster_AppModule_providers\n\n\n\n\nAuthModule\n\nAuthModule\n\n\n\nAppModule\n\nAppModule\n\nAppModule -->\n\nAuthModule->AppModule\n\n\n\n\n\nFeedModule\n\nFeedModule\n\nAppModule -->\n\nFeedModule->AppModule\n\n\n\n\n\nUserModule\n\nUserModule\n\nAppModule -->\n\nUserModule->AppModule\n\n\n\n\n\nAppService\n\nAppService\n\nAppModule -->\n\nAppService->AppModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app.module.ts\n        \n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            AppService\n                        \n                    \n                \n                \n                    Controllers\n                    \n                        \n                            AppController\n                        \n                    \n                \n                \n                    Imports\n                    \n                        \n                            AuthModule\n                        \n                        \n                            FeedModule\n                        \n                        \n                            UserModule\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Module } from '@nestjs/common';\nimport { AppController } from './app.controller';\nimport { AppService } from './app.service';\nimport modules from './config/modules';\n\n@Module({\n  imports: [...modules],\n  controllers: [AppController],\n  providers: [AppService],\n})\nexport class AppModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/AppService.html":{"url":"injectables/AppService.html","title":"injectable - AppService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  AppService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app.service.ts\n        \n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                getHello\n                            \n                            \n                                getTodos\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(httpService: HttpService)\n                    \n                \n                        \n                            \n                                Defined in src/app.service.ts:13\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        httpService\n                                                  \n                                                        \n                                                                    HttpService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            getHello\n                        \n                        \n                    \n                \n            \n            \n                \ngetHello()\n                \n            \n\n\n            \n                \n                    Defined in src/app.service.ts:15\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         string\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            getTodos\n                        \n                        \n                    \n                \n            \n            \n                \ngetTodos()\n                \n            \n\n\n            \n                \n                    Defined in src/app.service.ts:19\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         Observable>\n\n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { HttpService, Injectable } from '@nestjs/common';\nimport { Observable } from 'rxjs';\nimport { AxiosResponse } from 'axios';\n\nexport interface Todo {\n  UserId: number;\n  Id: number;\n  Title: string;\n  Completed: boolean;\n}\n\n@Injectable()\nexport class AppService {\n  constructor(private httpService: HttpService) {}\n  getHello(): string {\n    return 'Hello World!';\n  }\n\n  getTodos(): Observable> {\n    return this.httpService.get('https://jsonplaceholder.typicode.com/todos');\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/AuthModule.html":{"url":"modules/AuthModule.html","title":"module - AuthModule","body":"\n                   \n\n\n\n\n    Modules\n    AuthModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_AuthModule\n\n\n\ncluster_AuthModule_exports\n\n\n\ncluster_AuthModule_imports\n\n\n\ncluster_AuthModule_providers\n\n\n\n\nUserModule\n\nUserModule\n\n\n\nAuthModule\n\nAuthModule\n\nAuthModule -->\n\nUserModule->AuthModule\n\n\n\n\n\nAuthService \n\nAuthService \n\nAuthService  -->\n\nAuthModule->AuthService \n\n\n\n\n\nAuthService\n\nAuthService\n\nAuthModule -->\n\nAuthService->AuthModule\n\n\n\n\n\nJwtStrategy\n\nJwtStrategy\n\nAuthModule -->\n\nJwtStrategy->AuthModule\n\n\n\n\n\nLocalStrategy\n\nLocalStrategy\n\nAuthModule -->\n\nLocalStrategy->AuthModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/auth/auth.module.ts\n        \n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            AuthService\n                        \n                        \n                            JwtStrategy\n                        \n                        \n                            LocalStrategy\n                        \n                    \n                \n                \n                    Imports\n                    \n                        \n                            UserModule\n                        \n                    \n                \n                \n                    Exports\n                    \n                        \n                            AuthService\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Module } from '@nestjs/common';\nimport { ConfigModule } from '@nestjs/config';\nimport { JwtModule } from '@nestjs/jwt';\nimport { PassportModule } from '@nestjs/passport';\nimport { JwtConfigService } from 'config/configuration';\nimport { UserModule } from 'user/user.module';\nimport { AuthService } from './auth.service';\nimport { JwtStrategy } from './jwt.strategy';\nimport { LocalStrategy } from './local.strategy';\n\n@Module({\n  imports: [\n    UserModule,\n    PassportModule,\n    ConfigModule,\n    JwtModule.registerAsync({\n      imports: [ConfigModule],\n      useClass: JwtConfigService,\n    }),\n  ],\n  controllers: [],\n  providers: [AuthService, LocalStrategy, JwtStrategy],\n  exports: [AuthService, JwtModule],\n})\nexport class AuthModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/AuthService.html":{"url":"injectables/AuthService.html","title":"injectable - AuthService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  AuthService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/auth/auth.service.ts\n        \n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                login\n                            \n                            \n                                    Async\n                                validateUser\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(userService: UserService, jwtService: JwtService)\n                    \n                \n                        \n                            \n                                Defined in src/auth/auth.service.ts:7\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        userService\n                                                  \n                                                        \n                                                                        UserService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        jwtService\n                                                  \n                                                        \n                                                                    JwtService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            login\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    login(user)\n                \n            \n\n\n            \n                \n                    Defined in src/auth/auth.service.ts:32\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    user\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     {}\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            validateUser\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    validateUser(username: string, pass: string)\n                \n            \n\n\n            \n                \n                    Defined in src/auth/auth.service.ts:13\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    username\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    pass\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     {}\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@nestjs/common';\nimport { JwtService } from '@nestjs/jwt';\nimport { validatePassword } from 'shared/hashing';\nimport { UserService } from 'user/user.service';\n\n@Injectable()\nexport class AuthService {\n  constructor(\n    private userService: UserService,\n    private jwtService: JwtService,\n  ) {}\n\n  async validateUser(username: string, pass: string) {\n    const user = await this.userService.findOne(username);\n    if (user) {\n      const pwdMatch = await validatePassword(pass, user?.password);\n      if (pwdMatch) {\n        const u = {\n          _id: user._id,\n          email: user.email,\n          isStudent: user.isStudent,\n          studentNumber: user.studentNumber,\n          learningStyle: user.learningStyle,\n        };\n        return u;\n      }\n      return null;\n    }\n    return null;\n  }\n\n  async login(user) {\n    const payload = { id: user._id, isStudent: user.isStudent };\n\n    return {\n      access_token: this.jwtService.sign(payload),\n      user: { ...user },\n    };\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/Author.html":{"url":"interfaces/Author.html","title":"interface - Author","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  Author\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/user/interfaces/user.interface.ts\n        \n\n\n            \n                Extends\n            \n            \n                        User\n            \n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                            Optional\n                                        coursesCreated\n                                \n                                \n                                        title\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        coursesCreated\n                                    \n                                \n                                \n                                    \n                                        coursesCreated:         Array\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         Array\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        title\n                                    \n                                \n                                \n                                    \n                                        title:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { Course } from 'feed/interfaces/feed.interface';\n\nexport interface User {\n  _id?: string;\n  firstname: string;\n  lastname: string;\n  email: string;\n  password: string;\n  isStudent: boolean;\n}\n\nexport interface Author extends User {\n  title: string;\n  coursesCreated?: Array;\n}\n\nexport interface Learner extends User {\n  level: string;\n  studentNumber: string;\n  learningStyle?: Array;\n}\n\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/CollationDocument.html":{"url":"interfaces/CollationDocument.html","title":"interface - CollationDocument","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  CollationDocument\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/providers/PaginateModel.provider.ts\n        \n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        alternate\n                                \n                                \n                                        backwards\n                                \n                                \n                                        caseFirst\n                                \n                                \n                                        caseLevel\n                                \n                                \n                                        locale\n                                \n                                \n                                        maxVariable\n                                \n                                \n                                        numericOrdering\n                                \n                                \n                                        strength\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        alternate\n                                    \n                                \n                                \n                                    \n                                        alternate:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        backwards\n                                    \n                                \n                                \n                                    \n                                        backwards:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        caseFirst\n                                    \n                                \n                                \n                                    \n                                        caseFirst:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        caseLevel\n                                    \n                                \n                                \n                                    \n                                        caseLevel:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        locale\n                                    \n                                \n                                \n                                    \n                                        locale:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        maxVariable\n                                    \n                                \n                                \n                                    \n                                        maxVariable:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        numericOrdering\n                                    \n                                \n                                \n                                    \n                                        numericOrdering:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        strength\n                                    \n                                \n                                \n                                    \n                                        strength:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { Injectable } from '@nestjs/common';\nimport { FilterQuery, Document, Model } from 'mongoose';\n\nexport interface CollationDocument {\n  locale: string;\n  caseLevel: boolean;\n  caseFirst: string;\n  strength: number;\n  numericOrdering: boolean;\n  alternate: string;\n  maxVariable: string;\n  backwards: boolean;\n}\n\nexport interface PopulateOptions {\n  path: any;\n  select: any;\n  model: string | Model;\n  match: any;\n}\n\nexport interface PaginateOptions {\n  select?: Object | string;\n  sort?: Object | string;\n  page?: number;\n  limit?: number;\n  pagination?: boolean;\n  collation?: CollationDocument;\n  populate?: PopulateOptions;\n}\n\nexport interface PaginationResult {\n  docs: Array;\n  totalDocs: number;\n  limit: number;\n  hasPrevPage: boolean;\n  hasNextPage: boolean;\n  page: number;\n  totalPages: number;\n  prevPage: number | null;\n  nextPage: number | null;\n}\n\n@Injectable()\nexport class PaginateModel {\n  public async paginate(\n    model: Model,\n    query: (FilterQuery & Document) | {},\n    {\n      select = {},\n      sort = {},\n      page = 1,\n      limit = 10,\n      pagination = true,\n      collation,\n      populate,\n    }: PaginateOptions,\n  ): Promise {\n    const startIndex = (page - 1) * limit;\n    const endIndex = page * limit;\n    const dataLength = await model.countDocuments().exec();\n    const results: PaginationResult = {\n      docs: [],\n      totalDocs: null,\n      limit,\n      hasPrevPage: startIndex > 0,\n      hasNextPage: endIndex  0 ? page - 1 : null,\n      nextPage: endIndex \n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/Course.html":{"url":"interfaces/Course.html","title":"interface - Course","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  Course\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/feed/interfaces/feed.interface.ts\n        \n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        createdAt\n                                \n                                \n                                        createdBy\n                                \n                                \n                                        description\n                                \n                                \n                                        files\n                                \n                                \n                                        id\n                                \n                                \n                                        intro\n                                \n                                \n                                        learningStyle\n                                \n                                \n                                        objectives\n                                \n                                \n                                        requirements\n                                \n                                \n                                        thumbnail\n                                \n                                \n                                        title\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        createdAt\n                                    \n                                \n                                \n                                    \n                                        createdAt:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        createdBy\n                                    \n                                \n                                \n                                    \n                                        createdBy:         Author | string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         Author | string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        description\n                                    \n                                \n                                \n                                    \n                                        description:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        files\n                                    \n                                \n                                \n                                    \n                                        files:         any\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         any\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        id\n                                    \n                                \n                                \n                                    \n                                        id:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        intro\n                                    \n                                \n                                \n                                    \n                                        intro:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        learningStyle\n                                    \n                                \n                                \n                                    \n                                        learningStyle:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        objectives\n                                    \n                                \n                                \n                                    \n                                        objectives:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        requirements\n                                    \n                                \n                                \n                                    \n                                        requirements:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        thumbnail\n                                    \n                                \n                                \n                                    \n                                        thumbnail:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        title\n                                    \n                                \n                                \n                                    \n                                        title:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { Author } from 'user/interfaces/user.interface';\n\nexport interface Feed {\n  title: string;\n  image: string;\n  author: Author;\n  learningStyle: string;\n}\n\nexport interface Course {\n  id: string;\n  title: string;\n  thumbnail: string;\n  intro: string;\n  description: string;\n  learningStyle: string;\n  createdBy: Author | string;\n  createdAt: string;\n  objectives: string;\n  requirements: string;\n  files: any;\n}\n\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/CreateStudentDto.html":{"url":"interfaces/CreateStudentDto.html","title":"interface - CreateStudentDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  CreateStudentDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/user/dto/create-user.dto.ts\n        \n\n\n            \n                Extends\n            \n            \n                        Learner\n            \n\n\n\n\n    \n\n\n    \n        import { Author, Learner, User } from 'user/interfaces/user.interface';\n\nexport interface CreateUserDto extends User {\n  firstname: string;\n  lastname: string;\n  email: string;\n  password: string;\n}\n\nexport interface CreateStudentDto extends Learner {}\n\nexport interface CreateTutorDto extends Author {}\n\nexport type UserDetails = Learner & Author;\n\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/CreateTutorDto.html":{"url":"interfaces/CreateTutorDto.html","title":"interface - CreateTutorDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  CreateTutorDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/user/dto/create-user.dto.ts\n        \n\n\n            \n                Extends\n            \n            \n                        Author\n            \n\n\n\n\n    \n\n\n    \n        import { Author, Learner, User } from 'user/interfaces/user.interface';\n\nexport interface CreateUserDto extends User {\n  firstname: string;\n  lastname: string;\n  email: string;\n  password: string;\n}\n\nexport interface CreateStudentDto extends Learner {}\n\nexport interface CreateTutorDto extends Author {}\n\nexport type UserDetails = Learner & Author;\n\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/CreateUserDto.html":{"url":"interfaces/CreateUserDto.html","title":"interface - CreateUserDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  CreateUserDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/user/dto/create-user.dto.ts\n        \n\n\n            \n                Extends\n            \n            \n                        User\n            \n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        email\n                                \n                                \n                                        firstname\n                                \n                                \n                                        lastname\n                                \n                                \n                                        password\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        email\n                                    \n                                \n                                \n                                    \n                                        email:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        firstname\n                                    \n                                \n                                \n                                    \n                                        firstname:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        lastname\n                                    \n                                \n                                \n                                    \n                                        lastname:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        password\n                                    \n                                \n                                \n                                    \n                                        password:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { Author, Learner, User } from 'user/interfaces/user.interface';\n\nexport interface CreateUserDto extends User {\n  firstname: string;\n  lastname: string;\n  email: string;\n  password: string;\n}\n\nexport interface CreateStudentDto extends Learner {}\n\nexport interface CreateTutorDto extends Author {}\n\nexport type UserDetails = Learner & Author;\n\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/Feed.html":{"url":"classes/Feed.html","title":"class - Feed","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  Feed\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/feed/schemas/feed.schema.ts\n        \n\n\n\n            \n                Implements\n            \n            \n                            Course\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                createdAt\n                            \n                            \n                                createdBy\n                            \n                            \n                                description\n                            \n                            \n                                files\n                            \n                            \n                                id\n                            \n                            \n                                intro\n                            \n                            \n                                learningStyle\n                            \n                            \n                                objectives\n                            \n                            \n                                requirements\n                            \n                            \n                                thumbnail\n                            \n                            \n                                title\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            createdAt\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Prop()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/feed/schemas/feed.schema.ts:31\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            createdBy\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Prop()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/feed/schemas/feed.schema.ts:28\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            description\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Prop()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/feed/schemas/feed.schema.ts:22\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            files\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Prop()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/feed/schemas/feed.schema.ts:40\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            id\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Prop()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/feed/schemas/feed.schema.ts:10\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            intro\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Prop()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/feed/schemas/feed.schema.ts:19\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            learningStyle\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Prop()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/feed/schemas/feed.schema.ts:25\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            objectives\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Prop()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/feed/schemas/feed.schema.ts:34\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            requirements\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Prop()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/feed/schemas/feed.schema.ts:37\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            thumbnail\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Prop()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/feed/schemas/feed.schema.ts:16\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            title\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Prop()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/feed/schemas/feed.schema.ts:13\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { Prop, Schema, SchemaFactory } from '@nestjs/mongoose';\nimport { Course } from 'feed/interfaces/feed.interface';\nimport { Document } from 'mongoose';\n\nexport type FeedDocument = Feed & Document;\n\n@Schema()\nexport class Feed implements Course {\n  @Prop()\n  id: string;\n\n  @Prop()\n  title: string;\n\n  @Prop()\n  thumbnail: string;\n\n  @Prop()\n  intro: string;\n\n  @Prop()\n  description: string;\n\n  @Prop()\n  learningStyle: string;\n\n  @Prop()\n  createdBy: string;\n\n  @Prop()\n  createdAt: string;\n\n  @Prop()\n  objectives: string;\n\n  @Prop()\n  requirements: string;\n\n  @Prop()\n  files: string;\n}\n\nexport const FeedSchema = SchemaFactory.createForClass(Feed);\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"controllers/FeedController.html":{"url":"controllers/FeedController.html","title":"controller - FeedController","body":"\n                   \n\n\n\n\n\n\n  Controllers\n  FeedController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/feed/feed.controller.ts\n        \n\n            \n                Prefix\n            \n            \n                /feeds\n            \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                deleteFeed\n                            \n                            \n                                    Async\n                                getFeed\n                            \n                            \n                                    Async\n                                getFeeds\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            deleteFeed\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    deleteFeed()\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Delete()\n                \n            \n\n            \n                \n                    Defined in src/feed/feed.controller.ts:21\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :     {}\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            getFeed\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    getFeed()\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get()\n                \n            \n\n            \n                \n                    Defined in src/feed/feed.controller.ts:16\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :     {}\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            getFeeds\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    getFeeds()\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get()\n                \n            \n\n            \n                \n                    Defined in src/feed/feed.controller.ts:10\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :     Promise\n\n                    \n                \n            \n        \n    \n    \n\n\n    \n        import { Controller, Delete, Get } from '@nestjs/common';\nimport { FeedService } from './feed.service';\nimport { IFeedController } from './interfaces/feed-controller.interface';\n\n@Controller('/feeds')\nexport class FeedController implements IFeedController {\n  constructor(private readonly feedService: FeedService) {}\n\n  @Get()\n  async getFeeds(): Promise {\n    const feeds = await this.feedService.fetchFeeds();\n    return feeds;\n  }\n\n  @Get()\n  async getFeed() {\n    return 'get single feed route';\n  }\n\n  @Delete()\n  async deleteFeed() {\n    return true;\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/FeedModule.html":{"url":"modules/FeedModule.html","title":"module - FeedModule","body":"\n                   \n\n\n\n\n    Modules\n    FeedModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_FeedModule\n\n\n\ncluster_FeedModule_providers\n\n\n\n\nFeedService\n\nFeedService\n\n\n\nFeedModule\n\nFeedModule\n\nFeedModule -->\n\nFeedService->FeedModule\n\n\n\n\n\nPaginateModel\n\nPaginateModel\n\nFeedModule -->\n\nPaginateModel->FeedModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/feed/feed.module.ts\n        \n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            FeedService\n                        \n                        \n                            PaginateModel\n                        \n                    \n                \n                \n                    Controllers\n                    \n                        \n                            FeedController\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Module } from '@nestjs/common';\nimport { ModelDefinition, MongooseModule } from '@nestjs/mongoose';\nimport { PaginateModel } from 'providers/PaginateModel.provider';\nimport { FeedController } from './feed.controller';\nimport { FeedService } from './feed.service';\nimport { Feed, FeedSchema } from './schemas/feed.schema';\n\nconst models: ModelDefinition[] = [\n  {\n    name: Feed.name,\n    schema: FeedSchema,\n  },\n];\n\n@Module({\n  imports: [MongooseModule.forFeature(models)],\n  controllers: [FeedController],\n  providers: [FeedService, PaginateModel],\n  exports: [],\n})\nexport class FeedModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/FeedService.html":{"url":"injectables/FeedService.html","title":"injectable - FeedService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  FeedService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/feed/feed.service.ts\n        \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                paginate\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                fetchFeeds\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(feedModel: Model, paginateModel: PaginateModel)\n                    \n                \n                        \n                            \n                                Defined in src/feed/feed.service.ts:9\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        feedModel\n                                                  \n                                                        \n                                                                        Model\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        paginateModel\n                                                  \n                                                        \n                                                                        PaginateModel\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            fetchFeeds\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    fetchFeeds()\n                \n            \n\n\n            \n                \n                    Defined in src/feed/feed.service.ts:17\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :     {}\n\n                    \n                \n            \n        \n    \n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            paginate\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         PaginateModel\n\n                        \n                    \n                        \n                            \n                                    Defined in src/feed/feed.service.ts:9\n                            \n                        \n\n\n            \n        \n\n\n    \n\n\n    \n        import { Injectable } from '@nestjs/common';\nimport { InjectModel } from '@nestjs/mongoose';\nimport { Model } from 'mongoose';\nimport { PaginateModel } from 'providers/PaginateModel.provider';\nimport { Feed, FeedDocument } from './schemas/feed.schema';\n\n@Injectable()\nexport class FeedService {\n  paginate: PaginateModel;\n  constructor(\n    @InjectModel(Feed.name) private feedModel: Model,\n    private paginateModel: PaginateModel,\n  ) {\n    this.paginate = this.paginateModel;\n  }\n\n  async fetchFeeds() {\n    try {\n      return await this.paginateModel.paginate(this.feedModel, {}, {});\n    } catch (error) {\n      console.log(error);\n    }\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/IFeedController.html":{"url":"interfaces/IFeedController.html","title":"interface - IFeedController","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  IFeedController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/feed/interfaces/feed-controller.interface.ts\n        \n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        deleteFeed\n                                \n                                \n                                        getFeed\n                                \n                                \n                                        getFeeds\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        deleteFeed\n                                    \n                                \n                                \n                                    \n                                        deleteFeed:         function\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         function\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        getFeed\n                                    \n                                \n                                \n                                    \n                                        getFeed:         function\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         function\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        getFeeds\n                                    \n                                \n                                \n                                    \n                                        getFeeds:         function\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         function\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        export interface IFeedController {\n  getFeeds: () => Promise;\n  getFeed: () => Promise;\n  deleteFeed: () => Promise;\n}\n\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/IFeedService.html":{"url":"interfaces/IFeedService.html","title":"interface - IFeedService","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  IFeedService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/feed/interfaces/feed-service.interface.ts\n        \n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        deleteFeed\n                                \n                                \n                                        fetchFeed\n                                \n                                \n                                        fetchFeeds\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        deleteFeed\n                                    \n                                \n                                \n                                    \n                                        deleteFeed:         function\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         function\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        fetchFeed\n                                    \n                                \n                                \n                                    \n                                        fetchFeed:         function\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         function\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        fetchFeeds\n                                    \n                                \n                                \n                                    \n                                        fetchFeeds:         function\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         function\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        export interface IFeedService {\n  fetchFeeds: () => Promise;\n  fetchFeed: () => Promise;\n  deleteFeed: () => Promise;\n}\n\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/JoiValidationPipe.html":{"url":"classes/JoiValidationPipe.html","title":"class - JoiValidationPipe","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  JoiValidationPipe\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/shared/joiValidation.pipe.ts\n        \n\n\n\n            \n                Implements\n            \n            \n                            PipeTransform\n            \n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                transform\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(schema: ObjectSchema)\n                    \n                \n                        \n                            \n                                Defined in src/shared/joiValidation.pipe.ts:8\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        schema\n                                                  \n                                                        \n                                                                    ObjectSchema\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            transform\n                        \n                        \n                    \n                \n            \n            \n                \ntransform(value: any, metadata: ArgumentMetadata)\n                \n            \n\n\n            \n                \n                    Defined in src/shared/joiValidation.pipe.ts:11\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    value\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    metadata\n                                    \n                                            ArgumentMetadata\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import {\n  ArgumentMetadata,\n  BadRequestException,\n  PipeTransform,\n} from '@nestjs/common';\nimport { ObjectSchema } from 'joi';\n\nexport class JoiValidationPipe implements PipeTransform {\n  constructor(private schema: ObjectSchema) {}\n\n  transform(value: any, metadata: ArgumentMetadata) {\n    const { error } = this.schema.validate(value);\n    if (error) {\n      throw new BadRequestException(error.message);\n    }\n    return value;\n  }\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/JwtAuthGuard.html":{"url":"injectables/JwtAuthGuard.html","title":"injectable - JwtAuthGuard","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  JwtAuthGuard\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/auth/jwt-auth.guard.ts\n        \n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                canActivate\n                            \n                            \n                                handleRequest\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            canActivate\n                        \n                        \n                    \n                \n            \n            \n                \ncanActivate(context: ExecutionContext)\n                \n            \n\n\n            \n                \n                    Defined in src/auth/jwt-auth.guard.ts:11\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    context\n                                    \n                                            ExecutionContext\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            handleRequest\n                        \n                        \n                    \n                \n            \n            \n                \nhandleRequest(err, user, info)\n                \n            \n\n\n            \n                \n                    Defined in src/auth/jwt-auth.guard.ts:16\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    err\n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    user\n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    info\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import {\n  ExecutionContext,\n  HttpStatus,\n  Injectable,\n  UnauthorizedException,\n} from '@nestjs/common';\nimport { AuthGuard } from '@nestjs/passport';\n\n@Injectable()\nexport class JwtAuthGuard extends AuthGuard('jwt') {\n  canActivate(context: ExecutionContext) {\n    // console.log(context);\n    return super.canActivate(context);\n  }\n\n  handleRequest(err, user, info) {\n    if (err || !user) {\n      throw (\n        err ||\n        new UnauthorizedException(\n          {\n            statusCode: HttpStatus.UNAUTHORIZED,\n            message: 'Unauthorized',\n            info: info.message,\n          },\n          'An Error occured',\n        )\n      );\n    }\n    return user;\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/JwtConfigService.html":{"url":"injectables/JwtConfigService.html","title":"injectable - JwtConfigService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  JwtConfigService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/config/configuration.ts\n        \n\n\n\n            \n                Example\n            \n            \n            \n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                createJwtOptions\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(configService: ConfigService)\n                    \n                \n                        \n                            \n                                Defined in src/config/configuration.ts:74\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        configService\n                                                  \n                                                        \n                                                                    ConfigService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            createJwtOptions\n                        \n                        \n                    \n                \n            \n            \n                \ncreateJwtOptions()\n                \n            \n\n\n            \n                \n                    Defined in src/config/configuration.ts:76\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :     JwtModuleOptions\n\n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@nestjs/common';\nimport { ConfigService } from '@nestjs/config';\nimport {\n  MongooseModuleOptions,\n  MongooseOptionsFactory,\n} from '@nestjs/mongoose';\nimport {\n  MulterModuleOptions,\n  MulterOptionsFactory,\n} from '@nestjs/platform-express';\nimport { diskStorage } from 'multer';\nimport { extname } from 'path';\nimport * as _ from 'lodash';\nimport { JwtModuleOptions, JwtOptionsFactory } from '@nestjs/jwt';\n\n// config contants\nexport default () => ({\n  port: parseInt(process.env.PORT, 10) || 5000,\n  database:\n    process.env.ENVIRONMENT === 'development'\n      ? process.env.MONGODB_URI_DEV\n      : process.env.MONGODB_URI,\n  upload_path: './public/upload',\n  jwtSecret: process.env.JWTSECRET,\n  environment: process.env.ENVIRONMENT,\n});\n\n// get filename of file\nconst filename = (str: string) => _.split(str, '.')[0];\n\n/**\n * @class MongooseConfigService\n * @description Mongoose configuration service - Mongodb setup\n */\n@Injectable()\nexport class MongooseConfigService implements MongooseOptionsFactory {\n  constructor(private configService: ConfigService) {}\n  createMongooseOptions(): MongooseModuleOptions {\n    return {\n      uri: this.configService.get('database'),\n    };\n  }\n}\n\n/**\n * @class MulterConfigService\n * @description Multer configuration service -\n * Configuration for handling upload file\n *\n */\n@Injectable()\nexport class MulterConfigService implements MulterOptionsFactory {\n  constructor(private configService: ConfigService) {}\n  createMulterOptions(): MulterModuleOptions {\n    return {\n      storage: diskStorage({\n        destination: this.configService.get('upload_path'),\n        filename: (req, file, cb) => {\n          const name = filename(file.originalname);\n          return cb(null, `${name}${extname(file.originalname)}`);\n        },\n      }),\n    };\n  }\n}\n\n/**\n * @class JwtConfigService\n * @description Jwt configuration service -\n * Configuration for setting jwt options\n *\n */\n@Injectable()\nexport class JwtConfigService implements JwtOptionsFactory {\n  constructor(private configService: ConfigService) {}\n  createJwtOptions(): JwtModuleOptions {\n    return {\n      secret: this.configService.get('jwtSecret'),\n      signOptions: {\n        expiresIn: '1hr',\n      },\n    };\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/JwtStrategy.html":{"url":"injectables/JwtStrategy.html","title":"injectable - JwtStrategy","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  JwtStrategy\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/auth/jwt.strategy.ts\n        \n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                validate\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(configService: ConfigService)\n                    \n                \n                        \n                            \n                                Defined in src/auth/jwt.strategy.ts:7\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        configService\n                                                  \n                                                        \n                                                                    ConfigService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            validate\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    validate(payload: any)\n                \n            \n\n\n            \n                \n                    Defined in src/auth/jwt.strategy.ts:16\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    payload\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     {}\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@nestjs/common';\nimport { ConfigService } from '@nestjs/config';\nimport { PassportStrategy } from '@nestjs/passport';\nimport { ExtractJwt, Strategy } from 'passport-jwt';\n\n@Injectable()\nexport class JwtStrategy extends PassportStrategy(Strategy) {\n  constructor(private configService: ConfigService) {\n    super({\n      jwtFromRequest: ExtractJwt.fromAuthHeaderAsBearerToken(),\n      ignoreExpiration: false,\n      secretOrKey: process.env.JWTSECRET,\n    });\n  }\n\n  async validate(payload: any) {\n    return { id: payload.id, isStudent: payload.isStudent };\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/Learner.html":{"url":"interfaces/Learner.html","title":"interface - Learner","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  Learner\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/user/interfaces/user.interface.ts\n        \n\n\n            \n                Extends\n            \n            \n                        User\n            \n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                            Optional\n                                        learningStyle\n                                \n                                \n                                        level\n                                \n                                \n                                        studentNumber\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        learningStyle\n                                    \n                                \n                                \n                                    \n                                        learningStyle:     Array\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     Array\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        level\n                                    \n                                \n                                \n                                    \n                                        level:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        studentNumber\n                                    \n                                \n                                \n                                    \n                                        studentNumber:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { Course } from 'feed/interfaces/feed.interface';\n\nexport interface User {\n  _id?: string;\n  firstname: string;\n  lastname: string;\n  email: string;\n  password: string;\n  isStudent: boolean;\n}\n\nexport interface Author extends User {\n  title: string;\n  coursesCreated?: Array;\n}\n\nexport interface Learner extends User {\n  level: string;\n  studentNumber: string;\n  learningStyle?: Array;\n}\n\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/LocalAuthGuard.html":{"url":"injectables/LocalAuthGuard.html","title":"injectable - LocalAuthGuard","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  LocalAuthGuard\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/auth/local-auth.guard.ts\n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { Injectable } from '@nestjs/common';\nimport { AuthGuard } from '@nestjs/passport';\n\n@Injectable()\nexport class LocalAuthGuard extends AuthGuard('local') {}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/LocalStrategy.html":{"url":"injectables/LocalStrategy.html","title":"injectable - LocalStrategy","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  LocalStrategy\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/auth/local.strategy.ts\n        \n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                validate\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(authService: AuthService)\n                    \n                \n                        \n                            \n                                Defined in src/auth/local.strategy.ts:7\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        authService\n                                                  \n                                                        \n                                                                        AuthService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            validate\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    validate(username: string, password: string)\n                \n            \n\n\n            \n                \n                    Defined in src/auth/local.strategy.ts:12\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    username\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    password\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     {}\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable, UnauthorizedException } from '@nestjs/common';\nimport { PassportStrategy } from '@nestjs/passport';\nimport { Strategy } from 'passport-local';\nimport { AuthService } from './auth.service';\n\n@Injectable()\nexport class LocalStrategy extends PassportStrategy(Strategy) {\n  constructor(private authService: AuthService) {\n    super();\n  }\n\n  async validate(username: string, password: string) {\n    const user = await this.authService.validateUser(username, password);\n    if (!user) {\n      throw new UnauthorizedException('Incorrect username or password');\n    }\n    return user;\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/Material.html":{"url":"classes/Material.html","title":"class - Material","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  Material\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/user/schemas/files.schema.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                contentType\n                            \n                            \n                                data\n                            \n                            \n                                filename\n                            \n                            \n                                othernames\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            contentType\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Prop()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/user/schemas/files.schema.ts:18\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            data\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     Buffer\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Prop({type: 'Buffer'})\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/user/schemas/files.schema.ts:12\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            filename\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Prop()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/user/schemas/files.schema.ts:15\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            othernames\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Date\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Prop({type: Date, default: undefined})\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/user/schemas/files.schema.ts:21\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { Prop, Schema, SchemaFactory } from '@nestjs/mongoose';\nimport { Document } from 'mongoose';\nimport { Learner } from 'user/interfaces/user.interface';\n\nexport type MaterialDocument = Material & Document;\n\n// export interface CreateMaterialDto extends Material {}\n\n@Schema()\nexport class Material {\n  @Prop({ type: 'Buffer' })\n  data: Buffer;\n\n  @Prop()\n  filename: string;\n\n  @Prop()\n  contentType: string;\n\n  @Prop({ type: Date, default: Date.now() })\n  othernames: Date;\n}\n\nexport const MaterialSchema = SchemaFactory.createForClass(Material);\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/MongooseConfigService.html":{"url":"injectables/MongooseConfigService.html","title":"injectable - MongooseConfigService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  MongooseConfigService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/config/configuration.ts\n        \n\n\n\n            \n                Example\n            \n            \n            \n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                createMongooseOptions\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(configService: ConfigService)\n                    \n                \n                        \n                            \n                                Defined in src/config/configuration.ts:36\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        configService\n                                                  \n                                                        \n                                                                    ConfigService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            createMongooseOptions\n                        \n                        \n                    \n                \n            \n            \n                \ncreateMongooseOptions()\n                \n            \n\n\n            \n                \n                    Defined in src/config/configuration.ts:38\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :     MongooseModuleOptions\n\n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@nestjs/common';\nimport { ConfigService } from '@nestjs/config';\nimport {\n  MongooseModuleOptions,\n  MongooseOptionsFactory,\n} from '@nestjs/mongoose';\nimport {\n  MulterModuleOptions,\n  MulterOptionsFactory,\n} from '@nestjs/platform-express';\nimport { diskStorage } from 'multer';\nimport { extname } from 'path';\nimport * as _ from 'lodash';\nimport { JwtModuleOptions, JwtOptionsFactory } from '@nestjs/jwt';\n\n// config contants\nexport default () => ({\n  port: parseInt(process.env.PORT, 10) || 5000,\n  database:\n    process.env.ENVIRONMENT === 'development'\n      ? process.env.MONGODB_URI_DEV\n      : process.env.MONGODB_URI,\n  upload_path: './public/upload',\n  jwtSecret: process.env.JWTSECRET,\n  environment: process.env.ENVIRONMENT,\n});\n\n// get filename of file\nconst filename = (str: string) => _.split(str, '.')[0];\n\n/**\n * @class MongooseConfigService\n * @description Mongoose configuration service - Mongodb setup\n */\n@Injectable()\nexport class MongooseConfigService implements MongooseOptionsFactory {\n  constructor(private configService: ConfigService) {}\n  createMongooseOptions(): MongooseModuleOptions {\n    return {\n      uri: this.configService.get('database'),\n    };\n  }\n}\n\n/**\n * @class MulterConfigService\n * @description Multer configuration service -\n * Configuration for handling upload file\n *\n */\n@Injectable()\nexport class MulterConfigService implements MulterOptionsFactory {\n  constructor(private configService: ConfigService) {}\n  createMulterOptions(): MulterModuleOptions {\n    return {\n      storage: diskStorage({\n        destination: this.configService.get('upload_path'),\n        filename: (req, file, cb) => {\n          const name = filename(file.originalname);\n          return cb(null, `${name}${extname(file.originalname)}`);\n        },\n      }),\n    };\n  }\n}\n\n/**\n * @class JwtConfigService\n * @description Jwt configuration service -\n * Configuration for setting jwt options\n *\n */\n@Injectable()\nexport class JwtConfigService implements JwtOptionsFactory {\n  constructor(private configService: ConfigService) {}\n  createJwtOptions(): JwtModuleOptions {\n    return {\n      secret: this.configService.get('jwtSecret'),\n      signOptions: {\n        expiresIn: '1hr',\n      },\n    };\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/MulterConfigService.html":{"url":"injectables/MulterConfigService.html","title":"injectable - MulterConfigService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  MulterConfigService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/config/configuration.ts\n        \n\n\n\n            \n                Example\n            \n            \n            \n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                createMulterOptions\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(configService: ConfigService)\n                    \n                \n                        \n                            \n                                Defined in src/config/configuration.ts:52\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        configService\n                                                  \n                                                        \n                                                                    ConfigService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            createMulterOptions\n                        \n                        \n                    \n                \n            \n            \n                \ncreateMulterOptions()\n                \n            \n\n\n            \n                \n                    Defined in src/config/configuration.ts:54\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :     MulterModuleOptions\n\n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@nestjs/common';\nimport { ConfigService } from '@nestjs/config';\nimport {\n  MongooseModuleOptions,\n  MongooseOptionsFactory,\n} from '@nestjs/mongoose';\nimport {\n  MulterModuleOptions,\n  MulterOptionsFactory,\n} from '@nestjs/platform-express';\nimport { diskStorage } from 'multer';\nimport { extname } from 'path';\nimport * as _ from 'lodash';\nimport { JwtModuleOptions, JwtOptionsFactory } from '@nestjs/jwt';\n\n// config contants\nexport default () => ({\n  port: parseInt(process.env.PORT, 10) || 5000,\n  database:\n    process.env.ENVIRONMENT === 'development'\n      ? process.env.MONGODB_URI_DEV\n      : process.env.MONGODB_URI,\n  upload_path: './public/upload',\n  jwtSecret: process.env.JWTSECRET,\n  environment: process.env.ENVIRONMENT,\n});\n\n// get filename of file\nconst filename = (str: string) => _.split(str, '.')[0];\n\n/**\n * @class MongooseConfigService\n * @description Mongoose configuration service - Mongodb setup\n */\n@Injectable()\nexport class MongooseConfigService implements MongooseOptionsFactory {\n  constructor(private configService: ConfigService) {}\n  createMongooseOptions(): MongooseModuleOptions {\n    return {\n      uri: this.configService.get('database'),\n    };\n  }\n}\n\n/**\n * @class MulterConfigService\n * @description Multer configuration service -\n * Configuration for handling upload file\n *\n */\n@Injectable()\nexport class MulterConfigService implements MulterOptionsFactory {\n  constructor(private configService: ConfigService) {}\n  createMulterOptions(): MulterModuleOptions {\n    return {\n      storage: diskStorage({\n        destination: this.configService.get('upload_path'),\n        filename: (req, file, cb) => {\n          const name = filename(file.originalname);\n          return cb(null, `${name}${extname(file.originalname)}`);\n        },\n      }),\n    };\n  }\n}\n\n/**\n * @class JwtConfigService\n * @description Jwt configuration service -\n * Configuration for setting jwt options\n *\n */\n@Injectable()\nexport class JwtConfigService implements JwtOptionsFactory {\n  constructor(private configService: ConfigService) {}\n  createJwtOptions(): JwtModuleOptions {\n    return {\n      secret: this.configService.get('jwtSecret'),\n      signOptions: {\n        expiresIn: '1hr',\n      },\n    };\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/PaginateModel.html":{"url":"injectables/PaginateModel.html","title":"injectable - PaginateModel","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  PaginateModel\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/providers/PaginateModel.provider.ts\n        \n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                    Async\n                                paginate\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            Async\n                            paginate\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    paginate(model: Model, query:  | literal type, undefined: PaginateOptions)\n                \n            \n\n\n            \n                \n                    Defined in src/providers/PaginateModel.provider.ts:47\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    model\n                                    \n                                            Model\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    query\n                                    \n                                             | literal type\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    \n                                                PaginateOptions\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@nestjs/common';\nimport { FilterQuery, Document, Model } from 'mongoose';\n\nexport interface CollationDocument {\n  locale: string;\n  caseLevel: boolean;\n  caseFirst: string;\n  strength: number;\n  numericOrdering: boolean;\n  alternate: string;\n  maxVariable: string;\n  backwards: boolean;\n}\n\nexport interface PopulateOptions {\n  path: any;\n  select: any;\n  model: string | Model;\n  match: any;\n}\n\nexport interface PaginateOptions {\n  select?: Object | string;\n  sort?: Object | string;\n  page?: number;\n  limit?: number;\n  pagination?: boolean;\n  collation?: CollationDocument;\n  populate?: PopulateOptions;\n}\n\nexport interface PaginationResult {\n  docs: Array;\n  totalDocs: number;\n  limit: number;\n  hasPrevPage: boolean;\n  hasNextPage: boolean;\n  page: number;\n  totalPages: number;\n  prevPage: number | null;\n  nextPage: number | null;\n}\n\n@Injectable()\nexport class PaginateModel {\n  public async paginate(\n    model: Model,\n    query: (FilterQuery & Document) | {},\n    {\n      select = {},\n      sort = {},\n      page = 1,\n      limit = 10,\n      pagination = true,\n      collation,\n      populate,\n    }: PaginateOptions,\n  ): Promise {\n    const startIndex = (page - 1) * limit;\n    const endIndex = page * limit;\n    const dataLength = await model.countDocuments().exec();\n    const results: PaginationResult = {\n      docs: [],\n      totalDocs: null,\n      limit,\n      hasPrevPage: startIndex > 0,\n      hasNextPage: endIndex  0 ? page - 1 : null,\n      nextPage: endIndex \n    \n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/PaginateOptions.html":{"url":"interfaces/PaginateOptions.html","title":"interface - PaginateOptions","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  PaginateOptions\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/providers/PaginateModel.provider.ts\n        \n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                            Optional\n                                        collation\n                                \n                                \n                                            Optional\n                                        limit\n                                \n                                \n                                            Optional\n                                        page\n                                \n                                \n                                            Optional\n                                        pagination\n                                \n                                \n                                            Optional\n                                        populate\n                                \n                                \n                                            Optional\n                                        select\n                                \n                                \n                                            Optional\n                                        sort\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        collation\n                                    \n                                \n                                \n                                    \n                                        collation:         CollationDocument\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         CollationDocument\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        limit\n                                    \n                                \n                                \n                                    \n                                        limit:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        page\n                                    \n                                \n                                \n                                    \n                                        page:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        pagination\n                                    \n                                \n                                \n                                    \n                                        pagination:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        populate\n                                    \n                                \n                                \n                                    \n                                        populate:         PopulateOptions\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         PopulateOptions\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        select\n                                    \n                                \n                                \n                                    \n                                        select:     Object | string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     Object | string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        sort\n                                    \n                                \n                                \n                                    \n                                        sort:     Object | string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     Object | string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { Injectable } from '@nestjs/common';\nimport { FilterQuery, Document, Model } from 'mongoose';\n\nexport interface CollationDocument {\n  locale: string;\n  caseLevel: boolean;\n  caseFirst: string;\n  strength: number;\n  numericOrdering: boolean;\n  alternate: string;\n  maxVariable: string;\n  backwards: boolean;\n}\n\nexport interface PopulateOptions {\n  path: any;\n  select: any;\n  model: string | Model;\n  match: any;\n}\n\nexport interface PaginateOptions {\n  select?: Object | string;\n  sort?: Object | string;\n  page?: number;\n  limit?: number;\n  pagination?: boolean;\n  collation?: CollationDocument;\n  populate?: PopulateOptions;\n}\n\nexport interface PaginationResult {\n  docs: Array;\n  totalDocs: number;\n  limit: number;\n  hasPrevPage: boolean;\n  hasNextPage: boolean;\n  page: number;\n  totalPages: number;\n  prevPage: number | null;\n  nextPage: number | null;\n}\n\n@Injectable()\nexport class PaginateModel {\n  public async paginate(\n    model: Model,\n    query: (FilterQuery & Document) | {},\n    {\n      select = {},\n      sort = {},\n      page = 1,\n      limit = 10,\n      pagination = true,\n      collation,\n      populate,\n    }: PaginateOptions,\n  ): Promise {\n    const startIndex = (page - 1) * limit;\n    const endIndex = page * limit;\n    const dataLength = await model.countDocuments().exec();\n    const results: PaginationResult = {\n      docs: [],\n      totalDocs: null,\n      limit,\n      hasPrevPage: startIndex > 0,\n      hasNextPage: endIndex  0 ? page - 1 : null,\n      nextPage: endIndex \n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/PaginationResult.html":{"url":"interfaces/PaginationResult.html","title":"interface - PaginationResult","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  PaginationResult\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/providers/PaginateModel.provider.ts\n        \n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        docs\n                                \n                                \n                                        hasNextPage\n                                \n                                \n                                        hasPrevPage\n                                \n                                \n                                        limit\n                                \n                                \n                                        nextPage\n                                \n                                \n                                        page\n                                \n                                \n                                        prevPage\n                                \n                                \n                                        totalDocs\n                                \n                                \n                                        totalPages\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        docs\n                                    \n                                \n                                \n                                    \n                                        docs:     Array\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     Array\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        hasNextPage\n                                    \n                                \n                                \n                                    \n                                        hasNextPage:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        hasPrevPage\n                                    \n                                \n                                \n                                    \n                                        hasPrevPage:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        limit\n                                    \n                                \n                                \n                                    \n                                        limit:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        nextPage\n                                    \n                                \n                                \n                                    \n                                        nextPage:     number | null\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     number | null\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        page\n                                    \n                                \n                                \n                                    \n                                        page:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        prevPage\n                                    \n                                \n                                \n                                    \n                                        prevPage:     number | null\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     number | null\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        totalDocs\n                                    \n                                \n                                \n                                    \n                                        totalDocs:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        totalPages\n                                    \n                                \n                                \n                                    \n                                        totalPages:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { Injectable } from '@nestjs/common';\nimport { FilterQuery, Document, Model } from 'mongoose';\n\nexport interface CollationDocument {\n  locale: string;\n  caseLevel: boolean;\n  caseFirst: string;\n  strength: number;\n  numericOrdering: boolean;\n  alternate: string;\n  maxVariable: string;\n  backwards: boolean;\n}\n\nexport interface PopulateOptions {\n  path: any;\n  select: any;\n  model: string | Model;\n  match: any;\n}\n\nexport interface PaginateOptions {\n  select?: Object | string;\n  sort?: Object | string;\n  page?: number;\n  limit?: number;\n  pagination?: boolean;\n  collation?: CollationDocument;\n  populate?: PopulateOptions;\n}\n\nexport interface PaginationResult {\n  docs: Array;\n  totalDocs: number;\n  limit: number;\n  hasPrevPage: boolean;\n  hasNextPage: boolean;\n  page: number;\n  totalPages: number;\n  prevPage: number | null;\n  nextPage: number | null;\n}\n\n@Injectable()\nexport class PaginateModel {\n  public async paginate(\n    model: Model,\n    query: (FilterQuery & Document) | {},\n    {\n      select = {},\n      sort = {},\n      page = 1,\n      limit = 10,\n      pagination = true,\n      collation,\n      populate,\n    }: PaginateOptions,\n  ): Promise {\n    const startIndex = (page - 1) * limit;\n    const endIndex = page * limit;\n    const dataLength = await model.countDocuments().exec();\n    const results: PaginationResult = {\n      docs: [],\n      totalDocs: null,\n      limit,\n      hasPrevPage: startIndex > 0,\n      hasNextPage: endIndex  0 ? page - 1 : null,\n      nextPage: endIndex \n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/PopulateOptions.html":{"url":"interfaces/PopulateOptions.html","title":"interface - PopulateOptions","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  PopulateOptions\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/providers/PaginateModel.provider.ts\n        \n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        match\n                                \n                                \n                                        model\n                                \n                                \n                                        path\n                                \n                                \n                                        select\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        match\n                                    \n                                \n                                \n                                    \n                                        match:         any\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         any\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        model\n                                    \n                                \n                                \n                                    \n                                        model:     string | Model\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string | Model\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        path\n                                    \n                                \n                                \n                                    \n                                        path:         any\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         any\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        select\n                                    \n                                \n                                \n                                    \n                                        select:         any\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         any\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { Injectable } from '@nestjs/common';\nimport { FilterQuery, Document, Model } from 'mongoose';\n\nexport interface CollationDocument {\n  locale: string;\n  caseLevel: boolean;\n  caseFirst: string;\n  strength: number;\n  numericOrdering: boolean;\n  alternate: string;\n  maxVariable: string;\n  backwards: boolean;\n}\n\nexport interface PopulateOptions {\n  path: any;\n  select: any;\n  model: string | Model;\n  match: any;\n}\n\nexport interface PaginateOptions {\n  select?: Object | string;\n  sort?: Object | string;\n  page?: number;\n  limit?: number;\n  pagination?: boolean;\n  collation?: CollationDocument;\n  populate?: PopulateOptions;\n}\n\nexport interface PaginationResult {\n  docs: Array;\n  totalDocs: number;\n  limit: number;\n  hasPrevPage: boolean;\n  hasNextPage: boolean;\n  page: number;\n  totalPages: number;\n  prevPage: number | null;\n  nextPage: number | null;\n}\n\n@Injectable()\nexport class PaginateModel {\n  public async paginate(\n    model: Model,\n    query: (FilterQuery & Document) | {},\n    {\n      select = {},\n      sort = {},\n      page = 1,\n      limit = 10,\n      pagination = true,\n      collation,\n      populate,\n    }: PaginateOptions,\n  ): Promise {\n    const startIndex = (page - 1) * limit;\n    const endIndex = page * limit;\n    const dataLength = await model.countDocuments().exec();\n    const results: PaginationResult = {\n      docs: [],\n      totalDocs: null,\n      limit,\n      hasPrevPage: startIndex > 0,\n      hasNextPage: endIndex  0 ? page - 1 : null,\n      nextPage: endIndex \n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/QuestionnaireBody.html":{"url":"interfaces/QuestionnaireBody.html","title":"interface - QuestionnaireBody","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  QuestionnaireBody\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/user/user.service.ts\n        \n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        answers\n                                \n                                \n                                        user\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        answers\n                                    \n                                \n                                \n                                    \n                                        answers:     Array\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     Array\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        user\n                                    \n                                \n                                \n                                    \n                                        user:     literal type\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     literal type\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { Injectable } from '@nestjs/common';\nimport { InjectModel } from '@nestjs/mongoose';\nimport { Model } from 'mongoose';\nimport { hashPassword } from 'shared/hashing';\nimport { UserDetails } from './dto/create-user.dto';\nimport { Material, MaterialDocument } from './schemas/files.schema';\nimport { Student, StudentDocument } from './schemas/student.schema';\nimport { Tutor, TutorDocument } from './schemas/tutor.schema';\n\nexport type User = {\n  userId: number;\n  username: string;\n  password: string;\n};\n\nexport interface QuestionnaireBody {\n  answers: Array;\n  user: {\n    id: string;\n    studentNumber: string;\n  };\n}\n\n@Injectable()\nexport class UserService {\n  constructor(\n    @InjectModel(Material.name) private materialModel: Model,\n    @InjectModel(Student.name) private studentModel: Model,\n    @InjectModel(Tutor.name) private tutorModel: Model,\n  ) {}\n\n  async findOne(username: string): Promise {\n    const emailPattern = /^[a-zA-Z0-9._-]+@[a-zA-Z0-9.-]+\\.[a-zA-Z]{2,4}$/;\n    const isEmail = emailPattern.test(username);\n    let user = null;\n    if (isEmail) {\n      user = await this.tutorModel.findOne({ email: username }).exec();\n    } else {\n      user = await this.studentModel\n        .findOne({ studentNumber: username })\n        .exec();\n    }\n    return user;\n  }\n\n  async profile({ id, isStudent }: { id: string; isStudent: boolean }) {\n    try {\n      let user = null;\n      if (!isStudent) {\n        user = await this.tutorModel.findById(id);\n      } else {\n        user = await this.studentModel.findById(id);\n      }\n      return user;\n    } catch (error) {\n      console.log(error);\n    }\n  }\n\n  async createStudent(body: UserDetails): Promise {\n    const user = body;\n    try {\n      user.password = await hashPassword(user.password);\n      const existingUserByEmail = await this.studentModel\n        .findOne({ email: user.email })\n        .exec();\n      if (existingUserByEmail) {\n        throw new Error(`A user with this email (${user.email}) exist`);\n      }\n      const existingUserByStudentNumber = await this.studentModel\n        .findOne({ studentNumber: user.studentNumber })\n        .exec();\n      if (existingUserByStudentNumber) {\n        throw new Error(\n          `A user with this number (${user.studentNumber}) exist`,\n        );\n      }\n\n      const newUser = new this.studentModel(user);\n      const savedUser = await newUser.save();\n      // const { password, ...u } = newUser;\n      return savedUser;\n    } catch (error) {\n      throw new Error(error);\n    }\n  }\n\n  async createTutor(body: UserDetails): Promise {\n    const user = body;\n    try {\n      user.password = await hashPassword(user.password);\n      const existingUserByEmail = await this.tutorModel\n        .findOne({ email: user.email })\n        .exec();\n      if (existingUserByEmail) {\n        throw new Error(`A user with this email (${user.email}) exist`);\n      }\n      const newUser = new this.tutorModel(user);\n      const savedUser = await newUser.save();\n      // const { password, ...u } = newUser;\n      return savedUser;\n    } catch (error) {\n      throw new Error(error);\n    }\n  }\n\n  async uploadFile(body) {\n    const newFile = new this.materialModel(body);\n    return newFile;\n  }\n\n  async determine(body: QuestionnaireBody) {\n    const { answers, user } = body;\n\n    const learningStyle = [];\n\n    const formattedAnswers = answers.map((i) => Number(i));\n    const activistAnswers = formattedAnswers.slice(0, 8);\n    const pragmatistAnswers = formattedAnswers.slice(9, 17);\n    const reflectorAnswers = formattedAnswers.slice(18, 26);\n    const theoristAnswers = formattedAnswers.slice(27, 35);\n\n    const getSum = (ans: number[]) =>\n      ans.reduce((prev, current) => prev + current);\n\n    const activistSum = getSum(activistAnswers);\n\n    const pragmatistSum = getSum(pragmatistAnswers);\n\n    const reflectorSum = getSum(reflectorAnswers);\n\n    const theoristSum = getSum(theoristAnswers);\n\n    const _r = [activistSum, pragmatistSum, reflectorSum, theoristSum];\n    const learningStyles = ['activist', 'pragmatist', 'reflector', 'theorist'];\n\n    if (_r[0] > _r[1] && _r[0] > _r[2] && _r[0] > _r[3]) {\n      learningStyle.push('activist');\n    } else if (_r[1] > _r[0] && _r[1] > _r[2] && _r[1] > _r[3]) {\n      learningStyle.push('pragmatist');\n    } else if (_r[2] > _r[0] && _r[2] > _r[1] && _r[2] > _r[3]) {\n      learningStyle.push('reflector');\n    } else if (_r[3] > _r[0] && _r[3] > _r[1] && _r[3] > _r[2]) {\n      learningStyle.push('theorist');\n    } else {\n      _r.forEach((i, index) => {\n        if (_r[index] == _r[index + 1]) {\n          learningStyle.push(learningStyles[index], learningStyles[index + 1]);\n        }\n        return;\n      });\n    }\n\n    await this.studentModel.updateOne({ _id: user.id }, { learningStyle });\n    return await this.studentModel.findOne({ _id: user.id }).exec();\n  }\n}\n\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"guards/RolesGaurd.html":{"url":"guards/RolesGaurd.html","title":"guard - RolesGaurd","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n    Guards\n    RolesGaurd\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n        \n            \n            File\n            \n            \n                src/guards/roles.guard.ts\n            \n\n\n\n\n\n                \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                canActivate\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n                \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            canActivate\n                        \n                        \n                    \n                \n            \n            \n                \ncanActivate(context: ExecutionContext)\n                \n            \n\n\n            \n                \n                    Defined in src/guards/roles.guard.ts:6\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    context\n                                    \n                                            ExecutionContext\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     boolean | Promise | Observable\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n        \n\n\n        \n            import { CanActivate, ExecutionContext, Injectable } from '@nestjs/common';\nimport { Observable } from 'rxjs';\n\n@Injectable()\nexport class RolesGaurd implements CanActivate {\n  canActivate(\n    context: ExecutionContext,\n  ): boolean | Promise | Observable {\n    const request = context.switchToHttp().getRequest();\n    console.log(request.body);\n    return true;\n  }\n}\n\n        \n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/Student.html":{"url":"classes/Student.html","title":"class - Student","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  Student\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/user/schemas/student.schema.ts\n        \n\n\n\n            \n                Implements\n            \n            \n                            Learner\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                email\n                            \n                            \n                                firstname\n                            \n                            \n                                isStudent\n                            \n                            \n                                lastname\n                            \n                            \n                                learningStyle\n                            \n                            \n                                level\n                            \n                            \n                                password\n                            \n                            \n                                studentNumber\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            email\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Prop({unique: true})\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/user/schemas/student.schema.ts:19\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            firstname\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Prop()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/user/schemas/student.schema.ts:10\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            isStudent\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         boolean\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Prop()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/user/schemas/student.schema.ts:28\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            lastname\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Prop()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/user/schemas/student.schema.ts:13\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            learningStyle\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     Array\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Prop(undefined)\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/user/schemas/student.schema.ts:25\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            level\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Prop()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/user/schemas/student.schema.ts:16\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            password\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Prop()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/user/schemas/student.schema.ts:31\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            studentNumber\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Prop({unique: true})\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/user/schemas/student.schema.ts:22\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { Prop, Schema, SchemaFactory } from '@nestjs/mongoose';\nimport { Document } from 'mongoose';\nimport { Learner } from 'user/interfaces/user.interface';\n\nexport type StudentDocument = Student & Document;\n\n@Schema()\nexport class Student implements Learner {\n  @Prop()\n  firstname: string;\n\n  @Prop()\n  lastname: string;\n\n  @Prop()\n  level: string;\n\n  @Prop({ unique: true })\n  email: string;\n\n  @Prop({ unique: true })\n  studentNumber: string;\n\n  @Prop([String])\n  learningStyle: Array;\n\n  @Prop()\n  isStudent: boolean;\n\n  @Prop()\n  password: string;\n}\n\nconst StudentSchema = SchemaFactory.createForClass(Student);\n\nStudentSchema.virtual('fullName').get(function () {\n  return `${this.firstname} ${this.surname} ${this.othernames}`;\n});\n\nexport { StudentSchema };\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/Todo.html":{"url":"interfaces/Todo.html","title":"interface - Todo","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  Todo\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app.service.ts\n        \n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        Completed\n                                \n                                \n                                        Id\n                                \n                                \n                                        Title\n                                \n                                \n                                        UserId\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        Completed\n                                    \n                                \n                                \n                                    \n                                        Completed:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        Id\n                                    \n                                \n                                \n                                    \n                                        Id:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        Title\n                                    \n                                \n                                \n                                    \n                                        Title:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        UserId\n                                    \n                                \n                                \n                                    \n                                        UserId:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { HttpService, Injectable } from '@nestjs/common';\nimport { Observable } from 'rxjs';\nimport { AxiosResponse } from 'axios';\n\nexport interface Todo {\n  UserId: number;\n  Id: number;\n  Title: string;\n  Completed: boolean;\n}\n\n@Injectable()\nexport class AppService {\n  constructor(private httpService: HttpService) {}\n  getHello(): string {\n    return 'Hello World!';\n  }\n\n  getTodos(): Observable> {\n    return this.httpService.get('https://jsonplaceholder.typicode.com/todos');\n  }\n}\n\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/Tutor.html":{"url":"classes/Tutor.html","title":"class - Tutor","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  Tutor\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/user/schemas/tutor.schema.ts\n        \n\n\n\n            \n                Implements\n            \n            \n                            Author\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                coursesCreated\n                            \n                            \n                                email\n                            \n                            \n                                firstname\n                            \n                            \n                                isStudent\n                            \n                            \n                                lastname\n                            \n                            \n                                password\n                            \n                            \n                                title\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            coursesCreated\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Array\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Prop({type: undefined})\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/user/schemas/tutor.schema.ts:30\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            email\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Prop({unique: true})\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/user/schemas/tutor.schema.ts:21\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            firstname\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Prop()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/user/schemas/tutor.schema.ts:12\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            isStudent\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         boolean\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Prop()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/user/schemas/tutor.schema.ts:27\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            lastname\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Prop()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/user/schemas/tutor.schema.ts:15\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            password\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Prop()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/user/schemas/tutor.schema.ts:18\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            title\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Prop()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/user/schemas/tutor.schema.ts:24\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { Prop, Schema, SchemaFactory } from '@nestjs/mongoose';\nimport { Course } from 'feed/interfaces/feed.interface';\nimport * as mongoose from 'mongoose';\nimport { Document } from 'mongoose';\nimport { Author } from 'user/interfaces/user.interface';\n\nexport type TutorDocument = Tutor & Document;\n\n@Schema()\nexport class Tutor implements Author {\n  @Prop()\n  firstname: string;\n\n  @Prop()\n  lastname: string;\n\n  @Prop()\n  password: string;\n\n  @Prop({ unique: true })\n  email: string;\n\n  @Prop()\n  title: string;\n\n  @Prop()\n  isStudent: boolean;\n\n  @Prop({ type: [{ type: mongoose.Schema.Types.ObjectId, ref: 'Course' }] })\n  coursesCreated: Array;\n}\n\nexport const TutorSchema = SchemaFactory.createForClass(Tutor);\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/User.html":{"url":"interfaces/User.html","title":"interface - User","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  User\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/user/interfaces/user.interface.ts\n        \n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                            Optional\n                                        _id\n                                \n                                \n                                        email\n                                \n                                \n                                        firstname\n                                \n                                \n                                        isStudent\n                                \n                                \n                                        lastname\n                                \n                                \n                                        password\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        _id\n                                    \n                                \n                                \n                                    \n                                        _id:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        email\n                                    \n                                \n                                \n                                    \n                                        email:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        firstname\n                                    \n                                \n                                \n                                    \n                                        firstname:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        isStudent\n                                    \n                                \n                                \n                                    \n                                        isStudent:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        lastname\n                                    \n                                \n                                \n                                    \n                                        lastname:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        password\n                                    \n                                \n                                \n                                    \n                                        password:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { Course } from 'feed/interfaces/feed.interface';\n\nexport interface User {\n  _id?: string;\n  firstname: string;\n  lastname: string;\n  email: string;\n  password: string;\n  isStudent: boolean;\n}\n\nexport interface Author extends User {\n  title: string;\n  coursesCreated?: Array;\n}\n\nexport interface Learner extends User {\n  level: string;\n  studentNumber: string;\n  learningStyle?: Array;\n}\n\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"controllers/UserController.html":{"url":"controllers/UserController.html","title":"controller - UserController","body":"\n                   \n\n\n\n\n\n\n  Controllers\n  UserController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/user/user.controller.ts\n        \n\n            \n                Prefix\n            \n            \n                users\n            \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                determineLearningStyle\n                            \n                            \n                                    Async\n                                getProfile\n                            \n                            \n                                    Async\n                                registerStudent\n                            \n                            \n                                    Async\n                                registerTutor\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            determineLearningStyle\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    determineLearningStyle(body, user)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @UseGuards(JwtAuthGuard)@Post('learning-style')\n                \n            \n\n            \n                \n                    Defined in src/user/user.controller.ts:86\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    body\n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    user\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     {}\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            getProfile\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    getProfile(user)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @UseGuards(JwtAuthGuard)@Get('profile')\n                \n            \n\n            \n                \n                    Defined in src/user/user.controller.ts:46\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    user\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     {}\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            registerStudent\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    registerStudent(body: UserDetails)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Post('register/student')@UsePipes(new JoiValidationPipe())\n                \n            \n\n            \n                \n                    Defined in src/user/user.controller.ts:57\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    body\n                                    \n                                                UserDetails\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     {}\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            registerTutor\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    registerTutor(body: UserDetails)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Post('register/tutor')@UsePipes(new JoiValidationPipe())\n                \n            \n\n            \n                \n                    Defined in src/user/user.controller.ts:72\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    body\n                                    \n                                                UserDetails\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     {}\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n\n\n    \n        import {\n  BadRequestException,\n  Body,\n  Controller,\n  Get,\n  NotFoundException,\n  Post,\n  UnauthorizedException,\n  UseGuards,\n  UsePipes,\n} from '@nestjs/common';\nimport { JoiValidationPipe } from 'shared/joiValidation.pipe';\nimport { UserDetails } from './dto/create-user.dto';\nimport {\n  createTutorSchema,\n  createStudentSchema,\n} from './schemas/validation/create-user.schema';\nimport { UserService } from './user.service';\nimport { JwtAuthGuard } from 'auth/jwt-auth.guard';\nimport { User } from 'decotators/user.decorator';\n// import { RolesGaurd } from 'guards/roles.guard';\n\nfunction formatUserResponseData(data: any): Omit {\n  const user: Omit = {\n    firstname: data.firstname,\n    _id: data._id,\n    lastname: data.lastname,\n    email: data.email,\n    isStudent: data.isStudent,\n    title: data.title,\n    coursesCreated: data.coursesCreated,\n    level: data.level,\n    studentNumber: data.studentNumber,\n    learningStyle: data.learningStyle,\n  };\n\n  return user;\n}\n\n@Controller('users')\nexport class UserController {\n  constructor(private userService: UserService) {}\n\n  @UseGuards(JwtAuthGuard)\n  @Get('profile')\n  async getProfile(@User() user) {\n    try {\n      const u = await this.userService.profile(user);\n      return { success: true, data: { ...formatUserResponseData(u) } };\n    } catch (err) {\n      throw new NotFoundException(err.message);\n    }\n  }\n\n  @Post('register/student')\n  @UsePipes(new JoiValidationPipe(createStudentSchema))\n  async registerStudent(@Body() body: UserDetails) {\n    try {\n      const createdUser = await this.userService.createStudent(body);\n      return {\n        success: true,\n        data: { ...formatUserResponseData(createdUser) },\n      };\n    } catch (error) {\n      console.log(error.keyValue);\n      throw new BadRequestException(error.message);\n    }\n  }\n\n  @Post('register/tutor')\n  @UsePipes(new JoiValidationPipe(createTutorSchema))\n  async registerTutor(@Body() body: UserDetails) {\n    try {\n      const createdUser = await this.userService.createTutor(body);\n      return {\n        success: true,\n        data: { ...formatUserResponseData(createdUser) },\n      };\n    } catch (error) {\n      throw new BadRequestException(error.message);\n    }\n  }\n\n  @UseGuards(JwtAuthGuard)\n  @Post('learning-style')\n  async determineLearningStyle(@Body() body, @User() user) {\n    try {\n      if (!user.isStudent) {\n        throw new UnauthorizedException('Only student are allowed');\n      }\n      const updatedUser = await this.userService.determine({\n        answers: body.answers,\n        user,\n      });\n      return {\n        success: true,\n        data: { ...formatUserResponseData(updatedUser) },\n      };\n    } catch (error) {\n      throw new BadRequestException(error.message);\n    }\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/UserModule.html":{"url":"modules/UserModule.html","title":"module - UserModule","body":"\n                   \n\n\n\n\n    Modules\n    UserModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_UserModule\n\n\n\ncluster_UserModule_exports\n\n\n\ncluster_UserModule_providers\n\n\n\n\nUserService \n\nUserService \n\n\n\nUserModule\n\nUserModule\n\nUserService  -->\n\nUserModule->UserService \n\n\n\n\n\nUserService\n\nUserService\n\nUserModule -->\n\nUserService->UserModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/user/user.module.ts\n        \n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            UserService\n                        \n                    \n                \n                \n                    Controllers\n                    \n                        \n                            UserController\n                        \n                    \n                \n                \n                    Exports\n                    \n                        \n                            UserService\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Module } from '@nestjs/common';\nimport { ModelDefinition, MongooseModule } from '@nestjs/mongoose';\nimport { Material, MaterialSchema } from './schemas/files.schema';\nimport { Student, StudentSchema } from './schemas/student.schema';\nimport { Tutor, TutorSchema } from './schemas/tutor.schema';\nimport { UserController } from './user.controller';\nimport { UserService } from './user.service';\n\nconst models: ModelDefinition[] = [\n  {\n    name: Material.name,\n    schema: MaterialSchema,\n  },\n  {\n    name: Student.name,\n    schema: StudentSchema,\n  },\n  {\n    name: Tutor.name,\n    schema: TutorSchema,\n  },\n];\n\n@Module({\n  imports: [MongooseModule.forFeature(models)],\n  providers: [UserService],\n  controllers: [UserController],\n  exports: [UserService],\n})\nexport class UserModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/UserService.html":{"url":"injectables/UserService.html","title":"injectable - UserService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  UserService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/user/user.service.ts\n        \n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                createStudent\n                            \n                            \n                                    Async\n                                createTutor\n                            \n                            \n                                    Async\n                                determine\n                            \n                            \n                                    Async\n                                findOne\n                            \n                            \n                                    Async\n                                profile\n                            \n                            \n                                    Async\n                                uploadFile\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(materialModel: Model, studentModel: Model, tutorModel: Model)\n                    \n                \n                        \n                            \n                                Defined in src/user/user.service.ts:25\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        materialModel\n                                                  \n                                                        \n                                                                        Model\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        studentModel\n                                                  \n                                                        \n                                                                        Model\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        tutorModel\n                                                  \n                                                        \n                                                                        Model\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            createStudent\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    createStudent(body: UserDetails)\n                \n            \n\n\n            \n                \n                    Defined in src/user/user.service.ts:60\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    body\n                                    \n                                                UserDetails\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            createTutor\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    createTutor(body: UserDetails)\n                \n            \n\n\n            \n                \n                    Defined in src/user/user.service.ts:88\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    body\n                                    \n                                                UserDetails\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            determine\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    determine(body: QuestionnaireBody)\n                \n            \n\n\n            \n                \n                    Defined in src/user/user.service.ts:112\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    body\n                                    \n                                                QuestionnaireBody\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     {}\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            findOne\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    findOne(username: string)\n                \n            \n\n\n            \n                \n                    Defined in src/user/user.service.ts:32\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    username\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            profile\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    profile(undefined: literal type)\n                \n            \n\n\n            \n                \n                    Defined in src/user/user.service.ts:46\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    \n                                            literal type\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     {}\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            uploadFile\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    uploadFile(body)\n                \n            \n\n\n            \n                \n                    Defined in src/user/user.service.ts:107\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    body\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     {}\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@nestjs/common';\nimport { InjectModel } from '@nestjs/mongoose';\nimport { Model } from 'mongoose';\nimport { hashPassword } from 'shared/hashing';\nimport { UserDetails } from './dto/create-user.dto';\nimport { Material, MaterialDocument } from './schemas/files.schema';\nimport { Student, StudentDocument } from './schemas/student.schema';\nimport { Tutor, TutorDocument } from './schemas/tutor.schema';\n\nexport type User = {\n  userId: number;\n  username: string;\n  password: string;\n};\n\nexport interface QuestionnaireBody {\n  answers: Array;\n  user: {\n    id: string;\n    studentNumber: string;\n  };\n}\n\n@Injectable()\nexport class UserService {\n  constructor(\n    @InjectModel(Material.name) private materialModel: Model,\n    @InjectModel(Student.name) private studentModel: Model,\n    @InjectModel(Tutor.name) private tutorModel: Model,\n  ) {}\n\n  async findOne(username: string): Promise {\n    const emailPattern = /^[a-zA-Z0-9._-]+@[a-zA-Z0-9.-]+\\.[a-zA-Z]{2,4}$/;\n    const isEmail = emailPattern.test(username);\n    let user = null;\n    if (isEmail) {\n      user = await this.tutorModel.findOne({ email: username }).exec();\n    } else {\n      user = await this.studentModel\n        .findOne({ studentNumber: username })\n        .exec();\n    }\n    return user;\n  }\n\n  async profile({ id, isStudent }: { id: string; isStudent: boolean }) {\n    try {\n      let user = null;\n      if (!isStudent) {\n        user = await this.tutorModel.findById(id);\n      } else {\n        user = await this.studentModel.findById(id);\n      }\n      return user;\n    } catch (error) {\n      console.log(error);\n    }\n  }\n\n  async createStudent(body: UserDetails): Promise {\n    const user = body;\n    try {\n      user.password = await hashPassword(user.password);\n      const existingUserByEmail = await this.studentModel\n        .findOne({ email: user.email })\n        .exec();\n      if (existingUserByEmail) {\n        throw new Error(`A user with this email (${user.email}) exist`);\n      }\n      const existingUserByStudentNumber = await this.studentModel\n        .findOne({ studentNumber: user.studentNumber })\n        .exec();\n      if (existingUserByStudentNumber) {\n        throw new Error(\n          `A user with this number (${user.studentNumber}) exist`,\n        );\n      }\n\n      const newUser = new this.studentModel(user);\n      const savedUser = await newUser.save();\n      // const { password, ...u } = newUser;\n      return savedUser;\n    } catch (error) {\n      throw new Error(error);\n    }\n  }\n\n  async createTutor(body: UserDetails): Promise {\n    const user = body;\n    try {\n      user.password = await hashPassword(user.password);\n      const existingUserByEmail = await this.tutorModel\n        .findOne({ email: user.email })\n        .exec();\n      if (existingUserByEmail) {\n        throw new Error(`A user with this email (${user.email}) exist`);\n      }\n      const newUser = new this.tutorModel(user);\n      const savedUser = await newUser.save();\n      // const { password, ...u } = newUser;\n      return savedUser;\n    } catch (error) {\n      throw new Error(error);\n    }\n  }\n\n  async uploadFile(body) {\n    const newFile = new this.materialModel(body);\n    return newFile;\n  }\n\n  async determine(body: QuestionnaireBody) {\n    const { answers, user } = body;\n\n    const learningStyle = [];\n\n    const formattedAnswers = answers.map((i) => Number(i));\n    const activistAnswers = formattedAnswers.slice(0, 8);\n    const pragmatistAnswers = formattedAnswers.slice(9, 17);\n    const reflectorAnswers = formattedAnswers.slice(18, 26);\n    const theoristAnswers = formattedAnswers.slice(27, 35);\n\n    const getSum = (ans: number[]) =>\n      ans.reduce((prev, current) => prev + current);\n\n    const activistSum = getSum(activistAnswers);\n\n    const pragmatistSum = getSum(pragmatistAnswers);\n\n    const reflectorSum = getSum(reflectorAnswers);\n\n    const theoristSum = getSum(theoristAnswers);\n\n    const _r = [activistSum, pragmatistSum, reflectorSum, theoristSum];\n    const learningStyles = ['activist', 'pragmatist', 'reflector', 'theorist'];\n\n    if (_r[0] > _r[1] && _r[0] > _r[2] && _r[0] > _r[3]) {\n      learningStyle.push('activist');\n    } else if (_r[1] > _r[0] && _r[1] > _r[2] && _r[1] > _r[3]) {\n      learningStyle.push('pragmatist');\n    } else if (_r[2] > _r[0] && _r[2] > _r[1] && _r[2] > _r[3]) {\n      learningStyle.push('reflector');\n    } else if (_r[3] > _r[0] && _r[3] > _r[1] && _r[3] > _r[2]) {\n      learningStyle.push('theorist');\n    } else {\n      _r.forEach((i, index) => {\n        if (_r[index] == _r[index + 1]) {\n          learningStyle.push(learningStyles[index], learningStyles[index + 1]);\n        }\n        return;\n      });\n    }\n\n    await this.studentModel.updateOne({ _id: user.id }, { learningStyle });\n    return await this.studentModel.findOne({ _id: user.id }).exec();\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"coverage.html":{"url":"coverage.html","title":"coverage - coverage","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n    Documentation coverage\n\n\n\n    \n\n\n\n    \n        \n            File\n            Type\n            Identifier\n            Statements\n        \n    \n    \n        \n            \n                \n                src/app.controller.ts\n            \n            controller\n            AppController\n            \n                0 %\n                (0/5)\n            \n        \n        \n            \n                \n                src/app.service.ts\n            \n            injectable\n            AppService\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                src/app.service.ts\n            \n            interface\n            Todo\n            \n                0 %\n                (0/5)\n            \n        \n        \n            \n                \n                src/auth/auth.service.ts\n            \n            injectable\n            AuthService\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                src/auth/jwt-auth.guard.ts\n            \n            injectable\n            JwtAuthGuard\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/auth/jwt.strategy.ts\n            \n            injectable\n            JwtStrategy\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/auth/local-auth.guard.ts\n            \n            injectable\n            LocalAuthGuard\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/auth/local.strategy.ts\n            \n            injectable\n            LocalStrategy\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/config/configuration.ts\n            \n            injectable\n            JwtConfigService\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/config/configuration.ts\n            \n            injectable\n            MongooseConfigService\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/config/configuration.ts\n            \n            injectable\n            MulterConfigService\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/config/configuration.ts\n            \n            variable\n            filename\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/config/constants.ts\n            \n            variable\n            CONFIG_MODULE_OPTIONS\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/config/modules.ts\n            \n            variable\n            modules\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/config/mongooseModelFactories.ts\n            \n            variable\n            mongooseModelFactories\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/decotators/user.decorator.ts\n            \n            variable\n            User\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/feed/feed.controller.ts\n            \n            controller\n            FeedController\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                src/feed/feed.module.ts\n            \n            variable\n            models\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/feed/feed.service.ts\n            \n            injectable\n            FeedService\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                src/feed/interfaces/feed-controller.interface.ts\n            \n            interface\n            IFeedController\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                src/feed/interfaces/feed-service.interface.ts\n            \n            interface\n            IFeedService\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                src/feed/interfaces/feed.interface.ts\n            \n            interface\n            Course\n            \n                0 %\n                (0/12)\n            \n        \n        \n            \n                \n                src/feed/interfaces/feed.interface.ts\n            \n            interface\n            Feed\n            \n                0 %\n                (0/5)\n            \n        \n        \n            \n                \n                src/feed/schemas/feed.schema.ts\n            \n            class\n            Feed\n            \n                0 %\n                (0/12)\n            \n        \n        \n            \n                \n                src/feed/schemas/feed.schema.ts\n            \n            variable\n            FeedSchema\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/guards/roles.guard.ts\n            \n            guard\n            RolesGaurd\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/main.ts\n            \n            function\n            bootstrap\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/providers/PaginateModel.provider.ts\n            \n            injectable\n            PaginateModel\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/providers/PaginateModel.provider.ts\n            \n            interface\n            CollationDocument\n            \n                0 %\n                (0/9)\n            \n        \n        \n            \n                \n                src/providers/PaginateModel.provider.ts\n            \n            interface\n            PaginateOptions\n            \n                0 %\n                (0/8)\n            \n        \n        \n            \n                \n                src/providers/PaginateModel.provider.ts\n            \n            interface\n            PaginationResult\n            \n                0 %\n                (0/10)\n            \n        \n        \n            \n                \n                src/providers/PaginateModel.provider.ts\n            \n            interface\n            PopulateOptions\n            \n                0 %\n                (0/5)\n            \n        \n        \n            \n                \n                src/shared/hashing.ts\n            \n            variable\n            hashPassword\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/shared/hashing.ts\n            \n            variable\n            validatePassword\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/shared/joiValidation.pipe.ts\n            \n            class\n            JoiValidationPipe\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/user/dto/create-user.dto.ts\n            \n            interface\n            CreateStudentDto\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/user/dto/create-user.dto.ts\n            \n            interface\n            CreateTutorDto\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/user/dto/create-user.dto.ts\n            \n            interface\n            CreateUserDto\n            \n                0 %\n                (0/5)\n            \n        \n        \n            \n                \n                src/user/interfaces/user.interface.ts\n            \n            interface\n            Author\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/user/interfaces/user.interface.ts\n            \n            interface\n            Learner\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                src/user/interfaces/user.interface.ts\n            \n            interface\n            User\n            \n                0 %\n                (0/7)\n            \n        \n        \n            \n                \n                src/user/schemas/files.schema.ts\n            \n            class\n            Material\n            \n                0 %\n                (0/5)\n            \n        \n        \n            \n                \n                src/user/schemas/files.schema.ts\n            \n            variable\n            MaterialSchema\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/user/schemas/student.schema.ts\n            \n            class\n            Student\n            \n                0 %\n                (0/9)\n            \n        \n        \n            \n                \n                src/user/schemas/student.schema.ts\n            \n            variable\n            StudentSchema\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/user/schemas/tutor.schema.ts\n            \n            class\n            Tutor\n            \n                0 %\n                (0/8)\n            \n        \n        \n            \n                \n                src/user/schemas/tutor.schema.ts\n            \n            variable\n            TutorSchema\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/user/schemas/validation/create-user.schema.ts\n            \n            variable\n            createStudentSchema\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/user/schemas/validation/create-user.schema.ts\n            \n            variable\n            createTutorSchema\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/user/user.controller.ts\n            \n            controller\n            UserController\n            \n                0 %\n                (0/5)\n            \n        \n        \n            \n                \n                src/user/user.controller.ts\n            \n            function\n            formatUserResponseData\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/user/user.module.ts\n            \n            variable\n            models\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/user/user.service.ts\n            \n            injectable\n            UserService\n            \n                0 %\n                (0/8)\n            \n        \n        \n            \n                \n                src/user/user.service.ts\n            \n            interface\n            QuestionnaireBody\n            \n                0 %\n                (0/3)\n            \n        \n    \n\n\n\n\n\n    new Tablesort(document.getElementById('coverage-table'));\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"dependencies.html":{"url":"dependencies.html","title":"package-dependencies - dependencies","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n        Dependencies\n    \n    \n        \n            @nestjs/common : ^7.6.15\n        \n            @nestjs/config : ^0.6.3\n        \n            @nestjs/core : ^7.6.15\n        \n            @nestjs/jwt : ^7.2.0\n        \n            @nestjs/mongoose : ^7.2.4\n        \n            @nestjs/passport : ^7.1.5\n        \n            @nestjs/platform-express : ^7.6.15\n        \n            @nestjs/serve-static : ^2.1.4\n        \n            @nestjs/swagger : ^4.8.0\n        \n            bcrypt : ^5.0.1\n        \n            hbs : ^4.1.2\n        \n            joi : ^17.4.0\n        \n            lodash : ^4.17.21\n        \n            mongoose : ^5.12.7\n        \n            mongoose-autopopulate : ^0.14.0\n        \n            mongoose-beautiful-unique-validation : ^7.1.1\n        \n            passport : ^0.4.1\n        \n            passport-jwt : ^4.0.0\n        \n            passport-local : ^1.0.0\n        \n            reflect-metadata : ^0.1.13\n        \n            rimraf : ^3.0.2\n        \n            rxjs : ^6.6.6\n        \n            swagger-ui-express : ^4.1.6\n    \n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/functions.html":{"url":"miscellaneous/functions.html","title":"miscellaneous-functions - functions","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n  Miscellaneous\n  Functions\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            bootstrap   (src/.../main.ts)\n                        \n                        \n                            formatUserResponseData   (src/.../user.controller.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    src/main.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        \n                            bootstrap\n                        \n                        \n                    \n                \n            \n            \n                \nbootstrap()\n                \n            \n\n\n\n\n        \n    \n    src/user/user.controller.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        \n                            formatUserResponseData\n                        \n                        \n                    \n                \n            \n            \n                \nformatUserResponseData(data: any)\n                \n            \n\n\n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    data\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Omit\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"index.html":{"url":"index.html","title":"getting-started - index","body":"\n                   \n\n\n  \n\n\n  A progressive Node.js framework for building efficient and scalable server-side applications.\n    \n\n\n\n\n\n\n\n\n  \n    \n  \n\n  \n\nDescription\nNest framework TypeScript starter repository.\nInstallation\n$ npm installRunning the app\n# development\n$ npm run start\n\n# watch mode\n$ npm run start:dev\n\n# production mode\n$ npm run start:prodTest\n# unit tests\n$ npm run test\n\n# e2e tests\n$ npm run test:e2e\n\n# test coverage\n$ npm run test:covSupport\nNest is an MIT-licensed open source project. It can grow thanks to the sponsors and support by the amazing backers. If you'd like to join them, please read more here.\nStay in touch\n\nAuthor - Kamil Myśliwiec\nWebsite - https://nestjs.com\nTwitter - @nestframework\n\nLicense\nNest is MIT licensed.\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules.html":{"url":"modules.html","title":"modules - modules","body":"\n                   \n\n\n\n\n    Modules\n\n\n    \n            \n                \n                    \n                        AppModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        AuthModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        FeedModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        UserModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n    \n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"overview.html":{"url":"overview.html","title":"overview - overview","body":"\n                   \n\n\n\n    Overview\n\n  \n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_AppModule\n\n\n\ncluster_AppModule_imports\n\n\n\ncluster_AppModule_providers\n\n\n\ncluster_AuthModule\n\n\n\ncluster_AuthModule_exports\n\n\n\ncluster_AuthModule_providers\n\n\n\ncluster_FeedModule\n\n\n\ncluster_FeedModule_providers\n\n\n\ncluster_UserModule\n\n\n\ncluster_UserModule_exports\n\n\n\ncluster_UserModule_providers\n\n\n\n\nAuthModule\n\nAuthModule\n\n\n\nAppModule\n\nAppModule\n\nAppModule -->\n\nAuthModule->AppModule\n\n\n\n\n\nAuthService \n\nAuthService \n\nAuthService  -->\n\nAuthModule->AuthService \n\n\n\n\n\nFeedModule\n\nFeedModule\n\nAppModule -->\n\nFeedModule->AppModule\n\n\n\n\n\nUserModule\n\nUserModule\n\nAuthModule -->\n\nUserModule->AuthModule\n\n\n\nAppModule -->\n\nUserModule->AppModule\n\n\n\n\n\nUserService \n\nUserService \n\nUserService  -->\n\nUserModule->UserService \n\n\n\n\n\nAppService\n\nAppService\n\nAppModule -->\n\nAppService->AppModule\n\n\n\n\n\nAuthService\n\nAuthService\n\nAuthModule -->\n\nAuthService->AuthModule\n\n\n\n\n\nJwtStrategy\n\nJwtStrategy\n\nAuthModule -->\n\nJwtStrategy->AuthModule\n\n\n\n\n\nLocalStrategy\n\nLocalStrategy\n\nAuthModule -->\n\nLocalStrategy->AuthModule\n\n\n\n\n\nFeedService\n\nFeedService\n\nFeedModule -->\n\nFeedService->FeedModule\n\n\n\n\n\nPaginateModel\n\nPaginateModel\n\nFeedModule -->\n\nPaginateModel->FeedModule\n\n\n\n\n\nUserService\n\nUserService\n\nUserModule -->\n\nUserService->UserModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n  \n\n    \n        \n            \n                \n                    \n                    \n                        4 Modules\n                    \n                \n            \n        \n        \n            \n                \n                    \n                    3 Controllers\n                \n            \n        \n        \n            \n                \n                    \n                    12 Injectables\n                \n            \n        \n        \n            \n                \n                    \n                    5 Classes\n                \n            \n        \n        \n            \n                \n                    \n                    1 Guard\n                \n            \n        \n        \n            \n                \n                    \n                    16 Interfaces\n                \n            \n        \n    \n\n\n \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/typealiases.html":{"url":"miscellaneous/typealiases.html","title":"miscellaneous-typealiases - typealiases","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n  Miscellaneous\n  Type aliases\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            FeedDocument   (src/.../feed.schema.ts)\n                        \n                        \n                            MaterialDocument   (src/.../files.schema.ts)\n                        \n                        \n                            StudentDocument   (src/.../student.schema.ts)\n                        \n                        \n                            TutorDocument   (src/.../tutor.schema.ts)\n                        \n                        \n                            User   (src/.../user.service.ts)\n                        \n                        \n                            UserDetails   (src/.../create-user.dto.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    src/feed/schemas/feed.schema.ts\n    \n    \n        \n            \n                \n                    \n                    FeedDocument\n                \n            \n            \n                \n                        \n\n                \n            \n        \n    \n    src/user/schemas/files.schema.ts\n    \n    \n        \n            \n                \n                    \n                    MaterialDocument\n                \n            \n            \n                \n                        \n\n                \n            \n        \n    \n    src/user/schemas/student.schema.ts\n    \n    \n        \n            \n                \n                    \n                    StudentDocument\n                \n            \n            \n                \n                        \n\n                \n            \n        \n    \n    src/user/schemas/tutor.schema.ts\n    \n    \n        \n            \n                \n                    \n                    TutorDocument\n                \n            \n            \n                \n                        \n\n                \n            \n        \n    \n    src/user/user.service.ts\n    \n    \n        \n            \n                \n                    \n                    User\n                \n            \n            \n                \n                        literal type\n\n                \n            \n        \n    \n    src/user/dto/create-user.dto.ts\n    \n    \n        \n            \n                \n                    \n                    UserDetails\n                \n            \n            \n                \n                        \n\n                \n            \n        \n    \n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/variables.html":{"url":"miscellaneous/variables.html","title":"miscellaneous-variables - variables","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n  Miscellaneous\n  Variables\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            CONFIG_MODULE_OPTIONS   (src/.../constants.ts)\n                        \n                        \n                            createStudentSchema   (src/.../create-user.schema.ts)\n                        \n                        \n                            createTutorSchema   (src/.../create-user.schema.ts)\n                        \n                        \n                            FeedSchema   (src/.../feed.schema.ts)\n                        \n                        \n                            filename   (src/.../configuration.ts)\n                        \n                        \n                            hashPassword   (src/.../hashing.ts)\n                        \n                        \n                            MaterialSchema   (src/.../files.schema.ts)\n                        \n                        \n                            models   (src/.../feed.module.ts)\n                        \n                        \n                            models   (src/.../user.module.ts)\n                        \n                        \n                            modules   (src/.../modules.ts)\n                        \n                        \n                            mongooseModelFactories   (src/.../mongooseModelFactories.ts)\n                        \n                        \n                            StudentSchema   (src/.../student.schema.ts)\n                        \n                        \n                            TutorSchema   (src/.../tutor.schema.ts)\n                        \n                        \n                            User   (src/.../user.decorator.ts)\n                        \n                        \n                            validatePassword   (src/.../hashing.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    src/config/constants.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            CONFIG_MODULE_OPTIONS\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     ConfigModuleOptions\n\n                        \n                    \n                    \n                        \n                            Default value : {\n  isGlobal: true,\n  load: [configuration],\n}\n                        \n                    \n\n\n            \n        \n\n    src/user/schemas/validation/create-user.schema.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            createStudentSchema\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : Joi.object().keys({\n  email: Joi.string().email().required(),\n  firstname: Joi.string().required(),\n  lastname: Joi.string().required(),\n  level: Joi.string().required(),\n  password: Joi.string().min(6).required(),\n  learningStyle: Joi.string().allow(''),\n  isStudent: Joi.boolean().required(),\n  studentNumber: Joi.string().required(),\n})\n                        \n                    \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            createTutorSchema\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : Joi.object().keys({\n  email: Joi.string().email().required(),\n  firstname: Joi.string().required(),\n  lastname: Joi.string().required(),\n  password: Joi.string().min(6).required(),\n  isStudent: Joi.boolean().required().only().allow(false),\n  coursesCreated: Joi.array().allow(null),\n  title: Joi.string().required(),\n})\n                        \n                    \n\n\n            \n        \n\n    src/feed/schemas/feed.schema.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            FeedSchema\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : SchemaFactory.createForClass(Feed)\n                        \n                    \n\n\n            \n        \n\n    src/config/configuration.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            filename\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : (str: string) => _.split(str, '.')[0]\n                        \n                    \n\n\n            \n        \n\n    src/shared/hashing.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            hashPassword\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : async (password: string): Promise => {\n  const saltRounds = 10;\n  const salt = await bcrypt.genSalt(saltRounds);\n  const hash = await bcrypt.hash(password, salt);\n  return hash;\n}\n                        \n                    \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            validatePassword\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : async (\n  password: string,\n  hashed: string,\n): Promise => {\n  const match = await bcrypt.compare(password, hashed);\n  return match;\n}\n                        \n                    \n\n\n            \n        \n\n    src/user/schemas/files.schema.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            MaterialSchema\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : SchemaFactory.createForClass(Material)\n                        \n                    \n\n\n            \n        \n\n    src/feed/feed.module.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            models\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     ModelDefinition[]\n\n                        \n                    \n                    \n                        \n                            Default value : [\n  {\n    name: Feed.name,\n    schema: FeedSchema,\n  },\n]\n                        \n                    \n\n\n            \n        \n\n    src/user/user.module.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            models\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     ModelDefinition[]\n\n                        \n                    \n                    \n                        \n                            Default value : [\n  {\n    name: Material.name,\n    schema: MaterialSchema,\n  },\n  {\n    name: Student.name,\n    schema: StudentSchema,\n  },\n  {\n    name: Tutor.name,\n    schema: TutorSchema,\n  },\n]\n                        \n                    \n\n\n            \n        \n\n    src/config/modules.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            modules\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     any[]\n\n                        \n                    \n                    \n                        \n                            Default value : [\n  ConfigModule.forRoot(CONFIG_MODULE_OPTIONS),\n  MongooseModule.forRootAsync({\n    imports: [ConfigModule],\n    useClass: MongooseConfigService,\n  }),\n  MongooseModule.forFeatureAsync(mongooseModelFactories),\n  MulterModule.registerAsync({\n    imports: [ConfigModule],\n    useClass: MulterConfigService,\n  }),\n  FeedModule,\n  AuthModule,\n  UserModule,\n  HttpModule,\n]\n                        \n                    \n\n\n            \n        \n\n    src/config/mongooseModelFactories.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            mongooseModelFactories\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     AsyncModelFactory[]\n\n                        \n                    \n                    \n                        \n                            Default value : [\n  {\n    name: Student.name,\n    useFactory: () => {\n      const schema = StudentSchema;\n      schema.plugin(require('mongoose-beautiful-unique-validation'));\n      return schema;\n    },\n  },\n]\n                        \n                    \n\n\n            \n        \n\n    src/user/schemas/student.schema.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            StudentSchema\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : SchemaFactory.createForClass(Student)\n                        \n                    \n\n\n            \n        \n\n    src/user/schemas/tutor.schema.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            TutorSchema\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : SchemaFactory.createForClass(Tutor)\n                        \n                    \n\n\n            \n        \n\n    src/decotators/user.decorator.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            User\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : createParamDecorator(\n  (data: unknown, ctx: ExecutionContext) => {\n    const request = ctx.switchToHttp().getRequest();\n    return request.user;\n  },\n)\n                        \n                    \n\n\n            \n        \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"}}
}
