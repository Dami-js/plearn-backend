var COMPODOC_SEARCH_INDEX = {
    "index": {"version":"2.3.9","fields":["title","body"],"fieldVectors":[["title/controllers/AppController.html",[0,1.691,1,2.215]],["body/controllers/AppController.html",[0,1.672,1,2.19,2,1.004,3,0.162,4,0.141,5,0.32,6,1.811,7,0.23,8,1.154,9,3.347,10,3.305,11,2.879,12,3.347,13,2.786,14,2.67,15,2.686,16,0.027,17,2.147,18,1.289,19,2.147,20,1.706,21,2.786,22,0.457,23,2.147,24,2.147,25,2.147,26,1.51,27,1.223,28,1.407,29,1.58,30,3.305,31,2.147,32,2.147,33,2.147,34,2.147,35,2.19,36,2.147,37,4.028,38,2.147,39,2.147,40,0.255,41,4.118,42,0.578,43,2.147,44,2.147,45,1.811,46,3.305,47,2.147,48,2.147,49,0.424,50,1.589,51,1.087,52,2.147,53,1.291,54,2.422,55,2.038,56,2.147,57,1.423,58,2.147,59,3.305,60,1.423,61,2.147,62,2.147,63,2.038,64,1.811,65,2.038,66,1.589,67,1.987,68,2.147,69,1.423,70,1.423,71,0.162,72,0.184,73,0.865,74,2.67,75,2.981,76,2.147,77,1.483,78,1.589,79,1.589,80,2.147,81,2.147,82,2.147,83,2.147,84,2.147,85,2.147,86,2.147,87,2.147,88,1.194,89,0.016,90,2.147,91,2.147,92,2.147,93,2.147,94,2.147,95,2.147,96,1.423,97,2.147,98,1.423,99,2.147,100,0.013,101,0.009]],["title/modules/AppModule.html",[102,1.449,103,2.215]],["body/modules/AppModule.html",[1,3.565,2,2.236,3,0.271,4,0.235,5,0.235,16,0.026,42,0.552,49,0.708,63,3.11,64,3.026,71,0.271,72,0.307,89,0.014,100,0.019,101,0.014,102,2.332,103,4.386,104,2.332,105,1.816,106,2.157,107,2.157,108,1.816,109,3.234,110,2.157,111,3.026,112,3.026,113,3.026,114,3.155,115,3.155,116,2.903,117,2.875,118,2.157,119,2.157,120,3.588,121,2.875,122,3.588,123,3.588]],["title/injectables/AppService.html",[63,1.691,124,0.477]],["body/injectables/AppService.html",[3,0.266,4,0.231,5,0.231,7,0.377,8,1.649,9,4.212,12,4.212,16,0.027,18,1.407,20,1.649,22,1.133,26,1.319,27,1.069,28,1.229,40,0.417,42,0.513,49,0.695,63,2.389,71,0.356,72,0.302,73,1.418,77,1.434,78,2.605,79,2.605,89,0.014,100,0.019,101,0.014,124,0.674,125,1.229,126,2.605,127,3.52,128,5.154,129,3.52,130,3.52,131,3.52,132,4.492,133,2.605,134,2.968,135,2.968,136,0.749,137,2.333,138,2.333,139,3.494,140,2.333,141,1.646,142,2.968,143,2.968,144,1.646,145,2.968]],["title/modules/AuthModule.html",[102,1.449,114,1.838]],["body/modules/AuthModule.html",[2,1.41,3,0.228,4,0.198,5,0.198,16,0.027,42,0.598,49,0.595,51,1.526,55,3.254,71,0.228,72,0.258,89,0.012,100,0.017,101,0.012,102,2.129,104,1.307,105,1.526,106,1.813,107,1.813,108,1.526,109,2.954,110,2.954,114,3.564,116,2.95,117,2.552,118,1.813,119,1.813,121,2.954,146,2.542,147,3.015,148,2.542,149,2.542,150,3.505,151,3.505,152,3.015,153,4.142,154,1.658,155,4.245,156,1.658,157,4.245,158,2.334,159,3.015,160,3.015,161,2.542,162,3.015,163,3.015,164,3.015,165,2.542]],["title/injectables/AuthService.html",[55,1.691,124,0.477]],["body/injectables/AuthService.html",[3,0.218,4,0.19,5,0.19,7,0.31,8,1.439,11,2.91,13,3.476,16,0.027,18,1.268,20,1.439,22,1.224,26,1.8,27,1.458,28,1.677,29,2.113,40,0.57,42,0.462,49,0.571,55,2.086,65,2.91,66,2.14,71,0.218,72,0.248,73,1.66,74,2.732,77,1.458,88,1.268,89,0.019,96,1.917,100,0.016,101,0.011,124,0.588,125,1.01,156,1.591,166,2.439,167,4.122,168,2.893,169,5.918,170,2.893,171,4.122,172,2.893,173,4.122,174,5.234,175,2.893,176,2.732,177,2.267,178,2.893,179,2.893,180,2.14,181,2.893,182,2.439,183,2.439,184,2.893,185,2.893,186,2.893,187,2.893]],["title/interfaces/Author.html",[136,0.711,188,1.563]],["body/interfaces/Author.html",[3,0.29,4,0.252,5,0.252,7,0.412,16,0.026,22,1.403,29,2.058,40,0.593,42,0.37,71,0.42,89,0.015,100,0.02,101,0.015,136,1.183,141,2.755,188,2.339,189,1.665,190,2.546,191,2.411,192,1.747,193,3.906,194,3.687,195,1.796,196,2.31,197,2.843,198,2.31,199,2.31,200,1.944,201,2.113,202,1.796,203,2.546,204,2.113]],["title/interfaces/Course.html",[136,0.711,195,1.563]],["body/interfaces/Course.html",[3,0.227,4,0.197,5,0.197,7,0.322,16,0.027,22,1.464,40,0.755,42,0.289,71,0.32,89,0.012,100,0.017,101,0.012,136,0.901,140,3.529,141,2.625,188,2.723,189,1.303,192,1.479,195,1.98,204,3.087,205,2.534,206,4.49,207,4.49,208,2.928,209,4.49,210,4.49,211,4.49,212,4.49,213,4.49,214,1.807,215,1.521,216,3.005]],["title/interfaces/CreateMaterialDto.html",[67,2.01,136,0.711]],["body/interfaces/CreateMaterialDto.html",[3,0.287,4,0.25,5,0.25,16,0.027,22,1.059,40,0.657,42,0.533,67,2.991,71,0.443,72,0.326,88,1.006,89,0.015,98,2.525,100,0.02,101,0.015,136,0.811,189,1.652,191,2.157,200,1.928,202,1.782,214,2.291,217,2.291,218,3.23,219,3.664,220,2.327,221,2.291,222,1.241,223,2.991,224,1.428,225,2.525,226,4.195,227,1.928,228,3.213,229,4.195,230,1.928,231,3.213,232,2.291,233,2.819]],["title/classes/Feed.html",[72,0.286,215,1.691]],["body/classes/Feed.html",[3,0.191,4,0.166,5,0.166,7,0.272,15,3.38,16,0.027,18,1.623,22,1.408,40,0.738,42,0.429,71,0.336,72,0.217,88,0.669,89,0.01,100,0.015,101,0.01,140,2.953,141,2.083,192,1.308,195,2.083,196,1.525,204,2.45,206,3.757,207,3.757,208,2.45,209,3.757,210,3.757,211,3.757,212,3.757,213,3.757,215,2.254,219,3.992,220,1.752,221,1.525,222,0.826,223,2.252,224,0.95,234,1.525,235,1.681,236,1.752,237,2.536,238,2.536,239,2.536,240,2.536,241,2.536,242,2.536,243,2.536,244,2.536,245,2.536,246,2.536,247,2.536,248,1.876,249,1.681,250,2.138]],["title/controllers/FeedController.html",[0,1.691,251,2.215]],["body/controllers/FeedController.html",[0,1.679,2,1.552,3,0.25,4,0.218,5,0.218,7,0.356,8,1.584,11,3.213,15,2.843,16,0.027,18,1.365,20,1.805,42,0.498,49,0.655,71,0.25,72,0.284,75,2.455,77,1.57,88,0.876,89,0.013,96,2.199,100,0.018,101,0.013,144,1.552,177,2.495,215,1.679,236,1.552,251,3.007,252,2.798,253,3.318,254,5.169,255,4.111,256,4.685,257,4.685,258,5.169,259,3.318,260,3.318,261,3.318,262,2.843,263,2.798,264,3.007,265,2.798,266,3.318,267,3.318,268,3.318,269,3.318,270,3.318,271,2.798]],["title/modules/FeedModule.html",[102,1.449,115,1.838]],["body/modules/FeedModule.html",[2,2.236,3,0.271,4,0.235,5,0.235,16,0.027,27,1.09,42,0.575,49,0.708,71,0.271,72,0.307,88,0.947,89,0.014,100,0.019,101,0.014,102,2.332,104,1.555,105,1.816,106,2.157,107,2.157,108,1.816,109,3.234,110,2.875,115,3.38,117,2.875,118,2.157,119,2.157,121,2.157,215,1.816,220,1.678,222,1.168,249,3.17,251,3.565,262,3.38,263,3.026,272,3.026,273,3.026,274,2.655,275,3.539,276,3.026,277,3.588,278,3.026,279,2.378,280,3.026,281,3.026]],["title/injectables/FeedService.html",[124,0.477,262,1.838]],["body/injectables/FeedService.html",[3,0.278,4,0.242,5,0.242,7,0.396,8,1.701,11,2.759,16,0.027,18,1.286,20,1.288,26,1.383,27,1.12,28,1.288,40,0.437,42,0.581,49,0.728,71,0.278,72,0.316,73,1.486,74,2.445,77,1.12,89,0.015,100,0.019,101,0.015,124,0.695,125,1.288,215,1.866,222,1.201,224,1.383,236,1.725,248,2.729,262,2.679,265,3.11,278,3.11,282,3.11,283,4.891,284,3.689,285,4.891,286,3.689,287,4.871,288,3.689,289,3.11,290,2.445,291,3.689,292,3.689,293,3.689,294,3.689]],["title/interfaces/IFeedController.html",[136,0.711,264,2.215]],["body/interfaces/IFeedController.html",[3,0.315,4,0.273,5,0.273,7,0.447,16,0.027,40,0.686,71,0.315,89,0.017,100,0.021,101,0.017,136,0.887,177,3.18,189,1.808,192,1.842,255,4.496,256,5.124,257,5.124,264,3.495,295,3.086,296,3.517,297,4.737]],["title/interfaces/IFeedService.html",[136,0.711,290,2.215]],["body/interfaces/IFeedService.html",[3,0.315,4,0.273,5,0.273,7,0.447,16,0.027,40,0.686,71,0.315,89,0.017,100,0.021,101,0.017,136,0.887,177,3.18,189,1.808,192,1.842,255,4.496,283,5.124,290,3.495,295,3.086,297,4.737,298,3.517,299,6.076]],["title/injectables/JwtAuthGuard.html",[57,2.215,124,0.477]],["body/injectables/JwtAuthGuard.html",[3,0.441,4,0.22,5,0.22,7,0.36,8,1.596,16,0.027,18,1.207,20,1.596,21,2.828,26,1.713,27,1.388,28,1.596,29,2.039,40,0.398,42,0.44,49,0.662,50,2.482,51,1.697,57,3.029,71,0.253,72,0.287,77,1.388,89,0.013,100,0.018,101,0.013,124,0.652,125,1.171,191,1.454,300,4.383,301,2.482,302,4.57,303,4.57,304,4.57,305,4.706,306,3.354,307,3.354,308,4.57,309,3.354,310,5.198,311,3.354,312,3.853,313,3.354,314,3.354,315,3.354,316,2.828,317,2.223,318,3.354,319,3.354,320,3.354,321,3.354,322,3.354,323,3.354]],["title/injectables/JwtConfigService.html",[124,0.477,158,1.838]],["body/injectables/JwtConfigService.html",[3,0.172,4,0.149,5,0.305,7,0.244,8,1.206,14,1.507,16,0.028,18,0.912,20,0.794,22,0.484,26,0.852,27,1.048,28,0.794,35,1.507,40,0.27,42,0.544,49,0.449,53,1.367,54,1.367,69,2.288,70,2.288,71,0.352,72,0.452,73,0.916,77,1.415,88,0.912,89,0.009,100,0.014,101,0.009,124,0.665,125,0.794,144,1.952,154,1.251,156,1.251,158,2.295,208,2.295,222,0.74,224,0.852,227,2.112,230,1.151,236,1.952,324,1.367,325,1.683,326,3.448,327,1.507,328,3.909,329,2.274,330,2.274,331,3.088,332,2.555,333,2.555,334,2.555,335,2.555,336,1.683,337,1.683,338,1.683,339,1.507,340,2.555,341,1.683,342,1.683,343,1.683,344,1.683,345,1.683,346,1.683,347,1.683,348,1.683,349,1.683,350,1.683,351,1.683,352,1.507,353,1.507,354,1.507,355,1.367,356,1.899,357,3.321,358,3.088,359,1.683,360,1.683,361,1.683,362,1.683,363,1.683,364,1.899,365,1.683,366,1.683,367,1.683,368,1.683,369,1.683,370,1.683,371,1.683,372,1.683,373,1.683,374,2.076,375,1.683,376,1.683,377,1.683,378,1.683,379,1.683,380,1.683,381,1.683]],["title/injectables/JwtStrategy.html",[124,0.477,150,2.01]],["body/injectables/JwtStrategy.html",[3,0.264,4,0.229,5,0.229,7,0.375,8,1.641,11,2.686,16,0.027,18,1.24,20,1.22,26,1.761,27,1.427,28,1.641,40,0.557,42,0.546,49,0.69,51,1.768,71,0.264,72,0.299,73,1.407,77,1.061,89,0.014,100,0.019,101,0.014,124,0.67,125,1.22,138,2.316,144,1.634,150,2.824,154,1.921,176,2.316,182,2.946,191,1.514,327,2.316,328,4.042,352,2.316,374,2.1,382,2.946,383,3.961,384,3.494,385,4.698,386,3.494,387,2.946,388,3.494,389,2.946,390,2.585,391,2.946,392,2.946,393,3.494,394,3.494,395,3.494,396,3.494,397,3.494,398,3.494,399,3.494]],["title/interfaces/Learner.html",[136,0.711,202,1.563]],["body/interfaces/Learner.html",[3,0.29,4,0.252,5,0.252,7,0.412,16,0.026,22,1.422,29,2.058,40,0.593,42,0.37,71,0.42,89,0.015,100,0.02,101,0.015,136,1.183,141,1.796,188,1.796,189,1.665,190,2.546,191,2.411,192,1.747,193,2.546,194,2.546,195,1.796,196,2.31,197,2.843,198,2.31,199,2.31,200,1.944,201,2.113,202,2.339,203,3.906,204,3.241]],["title/injectables/LocalAuthGuard.html",[60,2.215,124,0.477]],["body/injectables/LocalAuthGuard.html",[3,0.353,4,0.307,5,0.307,16,0.026,42,0.545,49,0.923,50,3.461,51,2.367,60,3.752,71,0.353,72,0.401,89,0.019,100,0.022,101,0.019,124,0.808,125,1.633,191,2.027,301,3.461,400,3.944,401,4.677]],["title/injectables/LocalStrategy.html",[124,0.477,151,2.01]],["body/injectables/LocalStrategy.html",[3,0.247,4,0.214,5,0.214,7,0.351,8,1.569,11,2.596,16,0.027,18,1.186,20,1.142,22,1.272,26,1.684,27,1.364,28,1.569,29,1.929,40,0.533,42,0.557,49,0.646,51,1.655,55,3.026,66,2.42,71,0.247,72,0.28,73,1.317,77,0.993,88,0.864,89,0.013,96,2.168,100,0.018,101,0.013,124,0.641,125,1.142,144,1.53,151,2.701,161,2.758,176,2.168,177,2.47,180,4.087,191,1.418,201,1.799,312,3.788,316,2.758,317,2.168,383,3.788,387,2.758,389,2.758,390,2.42,391,2.758,392,2.758,402,2.758,403,3.271,404,3.271,405,4.492,406,3.271,407,2.758,408,3.271,409,3.271]],["title/classes/Material.html",[72,0.286,218,1.838]],["body/classes/Material.html",[3,0.243,4,0.211,5,0.211,7,0.345,15,3.015,16,0.027,18,1.447,22,1.166,40,0.723,42,0.489,67,1.932,71,0.414,72,0.275,88,0.849,89,0.013,98,3.369,100,0.018,101,0.013,136,0.684,191,1.393,192,1.55,200,2.572,202,1.503,214,1.932,217,1.932,218,3.015,219,3.665,220,2.075,221,1.932,222,1.047,223,2.668,224,1.205,225,2.13,226,4.623,227,2.572,228,4.287,229,4.623,230,2.246,231,2.71,232,1.932,233,2.378,234,1.932,410,3.214,411,3.742,412,3.214,413,3.214,414,2.71,415,3.214]],["title/injectables/MongooseConfigService.html",[124,0.477,356,1.838]],["body/injectables/MongooseConfigService.html",[3,0.172,4,0.149,5,0.305,7,0.244,8,1.206,14,1.507,16,0.028,18,0.912,20,0.794,22,0.484,26,0.852,27,1.048,28,0.794,35,1.507,40,0.27,42,0.544,49,0.449,53,1.367,54,1.367,69,2.288,70,2.288,71,0.352,72,0.452,73,0.916,77,1.415,88,0.912,89,0.009,100,0.014,101,0.009,124,0.665,125,0.794,144,1.952,154,1.251,156,1.251,158,1.899,208,2.295,222,0.74,224,0.852,227,2.112,230,1.151,236,1.952,324,1.367,325,1.683,326,1.683,327,1.507,328,3.909,331,2.555,332,3.088,333,2.555,334,2.555,335,2.555,336,1.683,337,1.683,338,1.683,339,1.507,340,2.555,341,1.683,342,1.683,343,1.683,344,1.683,345,1.683,346,1.683,347,1.683,348,1.683,349,1.683,350,1.683,351,1.683,352,1.507,353,1.507,354,1.507,355,1.367,356,2.295,357,3.321,358,3.088,359,1.683,360,1.683,361,3.448,362,1.683,363,1.683,364,1.899,365,1.683,366,1.683,367,1.683,368,1.683,369,1.683,370,1.683,371,1.683,372,1.683,373,1.683,374,2.076,375,1.683,376,1.683,377,1.683,378,1.683,379,1.683,380,1.683,381,1.683,416,2.274,417,2.274]],["title/injectables/MulterConfigService.html",[124,0.477,364,1.838]],["body/injectables/MulterConfigService.html",[3,0.172,4,0.149,5,0.305,7,0.244,8,1.206,14,1.507,16,0.028,18,0.912,20,0.794,22,0.484,26,0.852,27,1.048,28,0.794,35,1.507,40,0.27,42,0.544,49,0.449,53,1.367,54,1.367,69,2.288,70,2.288,71,0.352,72,0.452,73,0.916,77,1.415,88,0.912,89,0.009,100,0.014,101,0.009,124,0.665,125,0.794,144,1.952,154,1.251,156,1.251,158,1.899,208,2.295,222,0.74,224,0.852,227,2.112,230,1.151,236,1.952,324,1.367,325,1.683,326,1.683,327,1.507,328,3.909,331,2.555,332,2.555,333,2.555,334,3.088,335,2.555,336,1.683,337,1.683,338,1.683,339,1.507,340,2.555,341,1.683,342,1.683,343,1.683,344,1.683,345,1.683,346,1.683,347,1.683,348,1.683,349,1.683,350,1.683,351,1.683,352,1.507,353,1.507,354,1.507,355,1.367,356,1.899,357,3.321,358,3.088,359,1.683,360,1.683,361,1.683,362,1.683,363,1.683,364,2.295,365,1.683,366,3.448,367,1.683,368,1.683,369,1.683,370,1.683,371,1.683,372,1.683,373,1.683,374,2.076,375,1.683,376,1.683,377,1.683,378,1.683,379,1.683,380,1.683,381,1.683,418,2.274,419,2.274]],["title/classes/Student.html",[72,0.286,420,2.215]],["body/classes/Student.html",[3,0.233,4,0.202,5,0.202,7,0.331,15,3.23,16,0.027,18,1.551,22,1.373,40,0.715,42,0.479,71,0.375,72,0.264,88,0.815,89,0.012,100,0.017,101,0.012,192,1.507,198,2.991,199,2.991,200,2.517,201,2.736,202,2.326,203,3.297,204,2.736,214,1.855,219,3.911,220,2.017,221,1.855,222,1.005,223,2.594,224,1.157,234,1.855,236,2.017,420,3.297,421,2.045,422,3.086,423,3.086,424,3.086,425,3.086,426,3.086,427,3.086,428,2.602,429,2.045,430,2.602]],["title/interfaces/Todo.html",[136,0.711,137,2.215]],["body/interfaces/Todo.html",[3,0.266,4,0.231,5,0.231,7,0.377,9,2.605,12,2.605,16,0.027,22,1.211,40,0.675,42,0.513,49,0.695,63,1.781,71,0.356,72,0.302,77,1.434,78,2.605,79,2.605,89,0.014,100,0.019,101,0.014,124,0.674,126,2.605,128,4.492,132,3.981,133,2.605,134,2.968,135,2.968,136,0.749,137,3.129,138,3.773,139,4.523,140,3.773,141,2.662,142,4.8,143,4.492,144,1.646,145,2.968,189,1.526,192,1.649]],["title/classes/Tutor.html",[72,0.286,431,2.215]],["body/classes/Tutor.html",[3,0.22,4,0.191,5,0.191,7,0.312,15,3.169,16,0.027,18,1.522,22,1.33,40,0.731,42,0.534,71,0.364,72,0.249,88,0.769,89,0.012,100,0.016,101,0.012,141,2.253,188,2.253,192,1.446,193,3.194,194,2.744,195,1.936,196,1.75,198,2.897,199,2.897,200,2.438,201,2.65,214,1.75,219,3.841,220,1.936,221,1.75,222,0.948,223,2.489,224,1.806,234,1.75,236,1.936,411,2.454,414,2.454,431,3.194,432,1.929,433,2.911,434,2.911,435,2.911,436,2.911,437,2.911,438,2.911,439,2.454,440,2.911,441,2.911,442,1.929,443,2.454]],["title/interfaces/User.html",[29,1.167,136,0.711]],["body/interfaces/User.html",[3,0.267,4,0.232,5,0.232,7,0.379,16,0.027,22,1.443,28,1.653,29,1.991,40,0.705,42,0.34,71,0.403,89,0.014,100,0.019,101,0.014,136,1.136,141,1.652,188,1.652,189,1.532,190,2.342,191,2.052,192,1.653,193,2.342,194,2.342,195,1.652,196,2.124,197,4.219,198,3.428,199,3.428,200,2.885,201,3.136,202,1.652,203,2.342,204,1.943]],["title/controllers/UserController.html",[0,1.691,444,2.215]],["body/controllers/UserController.html",[0,2.936,2,2.279,3,0.368,4,0.32,5,0.32,16,0.026,42,0.469,49,0.962,71,0.368,72,0.418,89,0.019,100,0.023,101,0.019,444,3.846,445,4.11]],["title/modules/UserModule.html",[102,1.449,116,1.691]],["body/modules/UserModule.html",[2,2.121,3,0.25,4,0.218,5,0.218,16,0.027,27,1.008,42,0.592,49,0.655,65,3.307,71,0.25,72,0.284,88,0.876,89,0.013,100,0.018,101,0.013,102,2.24,104,1.438,105,1.679,106,1.995,107,1.995,108,1.679,109,3.108,110,3.108,116,3.111,117,2.727,118,1.995,119,1.995,121,1.995,218,1.825,220,1.552,222,1.08,232,2.727,275,3.357,276,2.798,279,2.199,281,2.798,420,2.199,429,2.199,431,2.199,442,2.199,444,3.426,446,2.798,447,2.798,448,2.798,449,2.455,450,2.798,451,3.318,452,3.318,453,3.318,454,3.318,455,2.798]],["title/injectables/UserService.html",[65,1.691,124,0.477]],["body/injectables/UserService.html",[3,0.197,4,0.171,5,0.171,7,0.28,8,1.338,11,2.811,16,0.027,18,1.318,20,1.338,22,1.131,26,1.7,27,1.377,28,1.584,29,0.913,40,0.592,41,2.205,42,0.481,49,0.516,65,1.939,71,0.289,72,0.224,73,1.543,74,3.31,75,3.356,77,1.164,88,0.69,89,0.01,100,0.015,101,0.01,124,0.547,125,0.913,138,3.524,139,1.935,176,3.804,177,2.107,180,3.934,183,2.205,192,1.338,218,1.438,222,0.851,224,0.98,225,1.733,230,1.323,285,4.211,289,2.205,317,1.733,450,2.205,456,1.935,457,4.535,458,3.832,459,3.832,460,2.615,461,2.615,462,3.832,463,3.832,464,2.615,465,3.832,466,2.615,467,2.205,468,3.832,469,3.832,470,3.832,471,3.832,472,3.832,473,3.832,474,2.615,475,2.615,476,2.615,477,2.615,478,3.832,479,2.615]],["title/coverage.html",[480,3.373]],["body/coverage.html",[0,2.087,1,1.478,5,0.146,6,1.88,16,0.027,29,1.188,40,0.264,55,1.128,57,1.478,60,1.478,63,1.128,65,1.128,67,1.341,72,0.395,89,0.009,100,0.013,101,0.009,104,0.967,108,1.128,124,0.851,126,2.517,136,1.224,137,1.478,150,1.341,151,1.341,158,1.226,166,1.88,188,1.043,190,2.733,195,1.043,202,1.043,205,2.868,215,1.721,217,2.479,218,1.226,227,1.128,232,1.341,235,2.255,249,1.478,251,1.478,252,1.88,262,1.226,264,1.478,274,1.65,279,2.255,282,1.88,290,1.478,295,2.517,296,1.88,297,1.65,298,1.88,300,1.88,301,2.517,317,1.478,324,2.774,355,4.072,356,1.226,364,1.226,382,1.88,400,1.88,402,1.88,420,1.478,421,2.255,429,1.478,431,1.478,432,2.255,442,1.478,444,1.478,445,1.88,449,1.65,456,1.65,480,1.65,481,2.23,482,2.23,483,2.23,484,3.402,485,4.968,486,4.614,487,5.753,488,6.189,489,5.868,490,1.88,491,1.88,492,1.88,493,1.88,494,3.402,495,1.88,496,3.402,497,2.23,498,2.23]],["title/dependencies.html",[105,2.034,499,2.793]],["body/dependencies.html",[16,0.027,49,0.791,51,2.028,53,2.41,54,2.41,89,0.016,100,0.02,101,0.016,105,2.028,133,2.966,154,2.204,156,2.204,222,1.305,224,1.502,339,2.657,374,2.41,390,4.2,407,3.38,500,5.676,501,4.008,502,4.008,503,4.008,504,4.008,505,4.008,506,4.008,507,4.008,508,4.008,509,4.008,510,4.008,511,4.008,512,4.008,513,4.008,514,4.008,515,4.008,516,4.008,517,4.008,518,4.008,519,4.008,520,4.008,521,4.008]],["title/miscellaneous/functions.html",[522,1.536,523,3.389]],["body/miscellaneous/functions.html",[7,0.546,16,0.024,89,0.02,100,0.024,101,0.02,108,3.192,495,4.291,522,2.799,523,4.291,524,5.089]],["title/index.html",[7,0.299,525,2.793,526,2.793]],["body/index.html",[4,0.228,16,0.027,89,0.014,100,0.019,101,0.014,188,1.627,208,1.914,480,2.575,527,3.48,528,3.48,529,4.686,530,3.48,531,3.48,532,3.48,533,3.48,534,3.48,535,3.48,536,5.297,537,3.48,538,3.48,539,3.48,540,3.48,541,6.226,542,3.48,543,3.48,544,3.48,545,6.092,546,3.48,547,3.48,548,4.686,549,3.48,550,3.48,551,3.48,552,3.48,553,4.686,554,4.686,555,3.48,556,3.48,557,3.48,558,4.686,559,4.686,560,3.48,561,3.48,562,3.48,563,3.48,564,3.48,565,2.935,566,3.48,567,3.48,568,3.48,569,3.48,570,3.48,571,3.48,572,3.48,573,3.48,574,3.48,575,3.48,576,3.48,577,3.48,578,3.48,579,3.48,580,3.48,581,3.48,582,3.48]],["title/modules.html",[104,1.976]],["body/modules.html",[16,0.023,89,0.019,100,0.023,101,0.019,103,3.148,104,2.059,114,2.612,115,2.612,116,2.403,565,5.361,583,6.358,584,6.358,585,6.358]],["title/overview.html",[586,3.844]],["body/overview.html",[2,1.552,16,0.026,55,3.111,63,2.616,65,3.111,89,0.013,100,0.018,101,0.013,102,1.438,103,4.257,104,1.438,105,1.679,106,1.995,107,1.995,108,1.679,109,1.995,110,1.995,111,2.798,112,2.798,113,2.798,114,3.594,115,3.199,116,3.111,117,2.727,118,1.995,119,1.995,125,1.159,146,2.798,148,2.798,149,2.798,150,3.108,151,3.108,189,1.438,234,1.995,262,2.843,272,2.798,273,2.798,446,2.798,447,2.798,448,2.798,586,2.798,587,4.536,588,3.318,589,3.318,590,3.318]],["title/miscellaneous/typealiases.html",[522,1.536,591,4.019]],["body/miscellaneous/typealiases.html",[7,0.497,16,0.022,29,1.965,40,0.667,89,0.018,100,0.022,101,0.018,217,2.784,225,3.729,235,3.069,248,4.163,421,3.069,428,4.744,432,3.069,439,4.744,456,3.426,522,2.546,592,4.63,593,3.904,594,3.904,595,3.904,596,3.904,597,4.63,598,4.63]],["title/miscellaneous/variables.html",[522,1.536,599,3.389]],["body/miscellaneous/variables.html",[7,0.307,16,0.027,22,0.61,27,1.243,29,1.43,40,0.618,45,2.416,77,0.87,88,0.757,89,0.011,98,1.899,100,0.016,101,0.011,104,1.775,114,1.576,115,1.576,116,1.45,121,2.462,153,3.453,165,3.453,217,1.723,220,1.915,227,2.072,230,3.154,232,2.872,233,2.12,235,1.899,249,3.166,250,2.416,271,2.416,274,2.12,275,3.03,279,3.454,280,2.416,305,2.416,324,1.723,353,1.899,354,1.899,355,1.723,356,1.576,357,1.899,364,1.576,421,1.899,429,2.714,430,2.416,432,1.899,442,2.714,443,2.416,449,2.12,455,2.416,467,5.255,490,2.416,491,3.453,492,2.416,493,2.416,522,1.576,593,2.416,594,2.416,595,2.416,596,2.416,599,2.416,600,2.866,601,2.866,602,2.866,603,2.866,604,2.866,605,2.866,606,2.866,607,2.866,608,2.866,609,2.866,610,2.866,611,2.866,612,2.866,613,2.866,614,2.866,615,2.866,616,2.866,617,2.866]]],"invertedIndex":[["",{"_index":16,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"interfaces/Author.html":{},"interfaces/Course.html":{},"interfaces/CreateMaterialDto.html":{},"classes/Feed.html":{},"controllers/FeedController.html":{},"modules/FeedModule.html":{},"injectables/FeedService.html":{},"interfaces/IFeedController.html":{},"interfaces/IFeedService.html":{},"injectables/JwtAuthGuard.html":{},"injectables/JwtConfigService.html":{},"injectables/JwtStrategy.html":{},"interfaces/Learner.html":{},"injectables/LocalAuthGuard.html":{},"injectables/LocalStrategy.html":{},"classes/Material.html":{},"injectables/MongooseConfigService.html":{},"injectables/MulterConfigService.html":{},"classes/Student.html":{},"interfaces/Todo.html":{},"classes/Tutor.html":{},"interfaces/User.html":{},"controllers/UserController.html":{},"modules/UserModule.html":{},"injectables/UserService.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/functions.html":{},"index.html":{},"modules.html":{},"overview.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["0",{"_index":355,"title":{},"body":{"injectables/JwtConfigService.html":{},"injectables/MongooseConfigService.html":{},"injectables/MulterConfigService.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["0.1.13",{"_index":518,"title":{},"body":{"dependencies.html":{}}}],["0.4.1",{"_index":513,"title":{},"body":{"dependencies.html":{}}}],["0.6.3",{"_index":501,"title":{},"body":{"dependencies.html":{}}}],["0/1",{"_index":488,"title":{},"body":{"coverage.html":{}}}],["0/12",{"_index":494,"title":{},"body":{"coverage.html":{}}}],["0/3",{"_index":487,"title":{},"body":{"coverage.html":{}}}],["0/4",{"_index":485,"title":{},"body":{"coverage.html":{}}}],["0/5",{"_index":486,"title":{},"body":{"coverage.html":{}}}],["0/6",{"_index":484,"title":{},"body":{"coverage.html":{}}}],["0/7",{"_index":496,"title":{},"body":{"coverage.html":{}}}],["1",{"_index":468,"title":{},"body":{"injectables/UserService.html":{}}}],["1.0.0",{"_index":515,"title":{},"body":{"dependencies.html":{}}}],["10",{"_index":345,"title":{},"body":{"injectables/JwtConfigService.html":{},"injectables/MongooseConfigService.html":{},"injectables/MulterConfigService.html":{}}}],["11",{"_index":589,"title":{},"body":{"overview.html":{}}}],["2",{"_index":471,"title":{},"body":{"injectables/UserService.html":{}}}],["2.1.4",{"_index":508,"title":{},"body":{"dependencies.html":{}}}],["3",{"_index":588,"title":{},"body":{"overview.html":{}}}],["3.0.2",{"_index":520,"title":{},"body":{"dependencies.html":{}}}],["4",{"_index":587,"title":{},"body":{"overview.html":{}}}],["4.0.0",{"_index":514,"title":{},"body":{"dependencies.html":{}}}],["4.1.2",{"_index":510,"title":{},"body":{"dependencies.html":{}}}],["4.17.21",{"_index":511,"title":{},"body":{"dependencies.html":{}}}],["5.12.7",{"_index":512,"title":{},"body":{"dependencies.html":{}}}],["5000",{"_index":346,"title":{},"body":{"injectables/JwtConfigService.html":{},"injectables/MongooseConfigService.html":{},"injectables/MulterConfigService.html":{}}}],["6.6.6",{"_index":521,"title":{},"body":{"dependencies.html":{}}}],["60s",{"_index":381,"title":{},"body":{"injectables/JwtConfigService.html":{},"injectables/MongooseConfigService.html":{},"injectables/MulterConfigService.html":{}}}],["7.1.5",{"_index":505,"title":{},"body":{"dependencies.html":{}}}],["7.2.0",{"_index":503,"title":{},"body":{"dependencies.html":{}}}],["7.2.4",{"_index":504,"title":{},"body":{"dependencies.html":{}}}],["7.6.15",{"_index":500,"title":{},"body":{"dependencies.html":{}}}],["9",{"_index":590,"title":{},"body":{"overview.html":{}}}],["_",{"_index":338,"title":{},"body":{"injectables/JwtConfigService.html":{},"injectables/MongooseConfigService.html":{},"injectables/MulterConfigService.html":{}}}],["_.split(str",{"_index":354,"title":{},"body":{"injectables/JwtConfigService.html":{},"injectables/MongooseConfigService.html":{},"injectables/MulterConfigService.html":{},"miscellaneous/variables.html":{}}}],["_id",{"_index":197,"title":{},"body":{"interfaces/Author.html":{},"interfaces/Learner.html":{},"interfaces/User.html":{}}}],["access_token",{"_index":186,"title":{},"body":{"injectables/AuthService.html":{}}}],["aliases",{"_index":592,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["amazing",{"_index":566,"title":{},"body":{"index.html":{}}}],["app",{"_index":543,"title":{},"body":{"index.html":{}}}],["app.controller",{"_index":122,"title":{},"body":{"modules/AppModule.html":{}}}],["app.service",{"_index":64,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{}}}],["appcontroller",{"_index":1,"title":{"controllers/AppController.html":{}},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"coverage.html":{}}}],["applications",{"_index":535,"title":{},"body":{"index.html":{}}}],["appmodule",{"_index":103,"title":{"modules/AppModule.html":{}},"body":{"modules/AppModule.html":{},"modules.html":{},"overview.html":{}}}],["appservice",{"_index":63,"title":{"injectables/AppService.html":{}},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"interfaces/Todo.html":{},"coverage.html":{},"overview.html":{}}}],["array",{"_index":194,"title":{},"body":{"interfaces/Author.html":{},"interfaces/Learner.html":{},"classes/Tutor.html":{},"interfaces/User.html":{}}}],["async",{"_index":11,"title":{},"body":{"controllers/AppController.html":{},"injectables/AuthService.html":{},"controllers/FeedController.html":{},"injectables/FeedService.html":{},"injectables/JwtStrategy.html":{},"injectables/LocalStrategy.html":{},"injectables/UserService.html":{}}}],["auth.guard",{"_index":59,"title":{},"body":{"controllers/AppController.html":{}}}],["auth.guard.ts",{"_index":301,"title":{},"body":{"injectables/JwtAuthGuard.html":{},"injectables/LocalAuthGuard.html":{},"coverage.html":{}}}],["auth.guard.ts:11",{"_index":306,"title":{},"body":{"injectables/JwtAuthGuard.html":{}}}],["auth.guard.ts:16",{"_index":309,"title":{},"body":{"injectables/JwtAuthGuard.html":{}}}],["auth.service",{"_index":161,"title":{},"body":{"modules/AuthModule.html":{},"injectables/LocalStrategy.html":{}}}],["auth/auth.service",{"_index":56,"title":{},"body":{"controllers/AppController.html":{}}}],["auth/jwt",{"_index":58,"title":{},"body":{"controllers/AppController.html":{}}}],["auth/local",{"_index":61,"title":{},"body":{"controllers/AppController.html":{}}}],["authguard",{"_index":50,"title":{},"body":{"controllers/AppController.html":{},"injectables/JwtAuthGuard.html":{},"injectables/LocalAuthGuard.html":{}}}],["authguard('jwt",{"_index":313,"title":{},"body":{"injectables/JwtAuthGuard.html":{}}}],["authguard('local",{"_index":401,"title":{},"body":{"injectables/LocalAuthGuard.html":{}}}],["authmodule",{"_index":114,"title":{"modules/AuthModule.html":{}},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules.html":{},"overview.html":{},"miscellaneous/variables.html":{}}}],["author",{"_index":188,"title":{"interfaces/Author.html":{}},"body":{"interfaces/Author.html":{},"interfaces/Course.html":{},"interfaces/Learner.html":{},"classes/Tutor.html":{},"interfaces/User.html":{},"coverage.html":{},"index.html":{}}}],["authservice",{"_index":55,"title":{"injectables/AuthService.html":{}},"body":{"controllers/AppController.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"injectables/LocalStrategy.html":{},"coverage.html":{},"overview.html":{}}}],["await",{"_index":96,"title":{},"body":{"controllers/AppController.html":{},"injectables/AuthService.html":{},"controllers/FeedController.html":{},"injectables/LocalStrategy.html":{}}}],["axios",{"_index":135,"title":{},"body":{"injectables/AppService.html":{},"interfaces/Todo.html":{}}}],["axiosresponse",{"_index":134,"title":{},"body":{"injectables/AppService.html":{},"interfaces/Todo.html":{}}}],["backers",{"_index":567,"title":{},"body":{"index.html":{}}}],["body",{"_index":41,"title":{},"body":{"controllers/AppController.html":{},"injectables/UserService.html":{}}}],["boolean",{"_index":143,"title":{},"body":{"injectables/AppService.html":{},"interfaces/Todo.html":{}}}],["bootstrap",{"_index":108,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/FeedModule.html":{},"modules/UserModule.html":{},"coverage.html":{},"miscellaneous/functions.html":{},"overview.html":{}}}],["browse",{"_index":585,"title":{},"body":{"modules.html":{}}}],["browser",{"_index":583,"title":{},"body":{"modules.html":{}}}],["buffer",{"_index":226,"title":{},"body":{"interfaces/CreateMaterialDto.html":{},"classes/Material.html":{}}}],["building",{"_index":530,"title":{},"body":{"index.html":{}}}],["canactivate",{"_index":302,"title":{},"body":{"injectables/JwtAuthGuard.html":{}}}],["canactivate(context",{"_index":304,"title":{},"body":{"injectables/JwtAuthGuard.html":{}}}],["cb",{"_index":370,"title":{},"body":{"injectables/JwtConfigService.html":{},"injectables/MongooseConfigService.html":{},"injectables/MulterConfigService.html":{}}}],["cb(null",{"_index":372,"title":{},"body":{"injectables/JwtConfigService.html":{},"injectables/MongooseConfigService.html":{},"injectables/MulterConfigService.html":{}}}],["changeme",{"_index":470,"title":{},"body":{"injectables/UserService.html":{}}}],["class",{"_index":72,"title":{"classes/Feed.html":{},"classes/Material.html":{},"classes/Student.html":{},"classes/Tutor.html":{}},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"interfaces/CreateMaterialDto.html":{},"classes/Feed.html":{},"controllers/FeedController.html":{},"modules/FeedModule.html":{},"injectables/FeedService.html":{},"injectables/JwtAuthGuard.html":{},"injectables/JwtConfigService.html":{},"injectables/JwtStrategy.html":{},"injectables/LocalAuthGuard.html":{},"injectables/LocalStrategy.html":{},"classes/Material.html":{},"injectables/MongooseConfigService.html":{},"injectables/MulterConfigService.html":{},"classes/Student.html":{},"interfaces/Todo.html":{},"classes/Tutor.html":{},"controllers/UserController.html":{},"modules/UserModule.html":{},"injectables/UserService.html":{},"coverage.html":{}}}],["classes",{"_index":234,"title":{},"body":{"classes/Feed.html":{},"classes/Material.html":{},"classes/Student.html":{},"classes/Tutor.html":{},"overview.html":{}}}],["cluster_appmodule",{"_index":111,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_appmodule_imports",{"_index":113,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_appmodule_providers",{"_index":112,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_authmodule",{"_index":146,"title":{},"body":{"modules/AuthModule.html":{},"overview.html":{}}}],["cluster_authmodule_exports",{"_index":148,"title":{},"body":{"modules/AuthModule.html":{},"overview.html":{}}}],["cluster_authmodule_imports",{"_index":147,"title":{},"body":{"modules/AuthModule.html":{}}}],["cluster_authmodule_providers",{"_index":149,"title":{},"body":{"modules/AuthModule.html":{},"overview.html":{}}}],["cluster_feedmodule",{"_index":272,"title":{},"body":{"modules/FeedModule.html":{},"overview.html":{}}}],["cluster_feedmodule_providers",{"_index":273,"title":{},"body":{"modules/FeedModule.html":{},"overview.html":{}}}],["cluster_usermodule",{"_index":446,"title":{},"body":{"modules/UserModule.html":{},"overview.html":{}}}],["cluster_usermodule_exports",{"_index":448,"title":{},"body":{"modules/UserModule.html":{},"overview.html":{}}}],["cluster_usermodule_providers",{"_index":447,"title":{},"body":{"modules/UserModule.html":{},"overview.html":{}}}],["completed",{"_index":142,"title":{},"body":{"injectables/AppService.html":{},"interfaces/Todo.html":{}}}],["config",{"_index":341,"title":{},"body":{"injectables/JwtConfigService.html":{},"injectables/MongooseConfigService.html":{},"injectables/MulterConfigService.html":{}}}],["config/configuration",{"_index":159,"title":{},"body":{"modules/AuthModule.html":{}}}],["config/modules",{"_index":123,"title":{},"body":{"modules/AppModule.html":{}}}],["config_module_options",{"_index":491,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["configmodule",{"_index":153,"title":{},"body":{"modules/AuthModule.html":{},"miscellaneous/variables.html":{}}}],["configmodule.forroot(config_module_options",{"_index":609,"title":{},"body":{"miscellaneous/variables.html":{}}}],["configmoduleoptions",{"_index":606,"title":{},"body":{"miscellaneous/variables.html":{}}}],["configservice",{"_index":328,"title":{},"body":{"injectables/JwtConfigService.html":{},"injectables/JwtStrategy.html":{},"injectables/MongooseConfigService.html":{},"injectables/MulterConfigService.html":{}}}],["configuration",{"_index":357,"title":{},"body":{"injectables/JwtConfigService.html":{},"injectables/MongooseConfigService.html":{},"injectables/MulterConfigService.html":{},"miscellaneous/variables.html":{}}}],["console.log(context",{"_index":314,"title":{},"body":{"injectables/JwtAuthGuard.html":{}}}],["console.log(file",{"_index":87,"title":{},"body":{"controllers/AppController.html":{}}}],["const",{"_index":88,"title":{},"body":{"controllers/AppController.html":{},"injectables/AuthService.html":{},"interfaces/CreateMaterialDto.html":{},"classes/Feed.html":{},"controllers/FeedController.html":{},"modules/FeedModule.html":{},"injectables/JwtConfigService.html":{},"injectables/LocalStrategy.html":{},"classes/Material.html":{},"injectables/MongooseConfigService.html":{},"injectables/MulterConfigService.html":{},"classes/Student.html":{},"classes/Tutor.html":{},"modules/UserModule.html":{},"injectables/UserService.html":{},"miscellaneous/variables.html":{}}}],["constructor",{"_index":73,"title":{},"body":{"controllers/AppController.html":{},"injectables/AppService.html":{},"injectables/AuthService.html":{},"injectables/FeedService.html":{},"injectables/JwtConfigService.html":{},"injectables/JwtStrategy.html":{},"injectables/LocalStrategy.html":{},"injectables/MongooseConfigService.html":{},"injectables/MulterConfigService.html":{},"injectables/UserService.html":{}}}],["constructor(@injectmodel(feed.name",{"_index":293,"title":{},"body":{"injectables/FeedService.html":{}}}],["constructor(authservice",{"_index":403,"title":{},"body":{"injectables/LocalStrategy.html":{}}}],["constructor(configservice",{"_index":327,"title":{},"body":{"injectables/JwtConfigService.html":{},"injectables/JwtStrategy.html":{},"injectables/MongooseConfigService.html":{},"injectables/MulterConfigService.html":{}}}],["constructor(feedmodel",{"_index":284,"title":{},"body":{"injectables/FeedService.html":{}}}],["constructor(httpservice",{"_index":127,"title":{},"body":{"injectables/AppService.html":{}}}],["constructor(materialmodel",{"_index":460,"title":{},"body":{"injectables/UserService.html":{}}}],["constructor(private",{"_index":144,"title":{},"body":{"injectables/AppService.html":{},"controllers/FeedController.html":{},"injectables/JwtConfigService.html":{},"injectables/JwtStrategy.html":{},"injectables/LocalStrategy.html":{},"injectables/MongooseConfigService.html":{},"injectables/MulterConfigService.html":{},"interfaces/Todo.html":{}}}],["constructor(userservice",{"_index":168,"title":{},"body":{"injectables/AuthService.html":{}}}],["contants",{"_index":342,"title":{},"body":{"injectables/JwtConfigService.html":{},"injectables/MongooseConfigService.html":{},"injectables/MulterConfigService.html":{}}}],["contenttype",{"_index":228,"title":{},"body":{"interfaces/CreateMaterialDto.html":{},"classes/Material.html":{}}}],["context",{"_index":307,"title":{},"body":{"injectables/JwtAuthGuard.html":{}}}],["controller",{"_index":0,"title":{"controllers/AppController.html":{},"controllers/FeedController.html":{},"controllers/UserController.html":{}},"body":{"controllers/AppController.html":{},"controllers/FeedController.html":{},"controllers/UserController.html":{},"coverage.html":{}}}],["controller('/feeds",{"_index":267,"title":{},"body":{"controllers/FeedController.html":{}}}],["controller.interface",{"_index":266,"title":{},"body":{"controllers/FeedController.html":{}}}],["controller.interface.ts",{"_index":296,"title":{},"body":{"interfaces/IFeedController.html":{},"coverage.html":{}}}],["controllers",{"_index":2,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"modules/AuthModule.html":{},"controllers/FeedController.html":{},"modules/FeedModule.html":{},"controllers/UserController.html":{},"modules/UserModule.html":{},"overview.html":{}}}],["course",{"_index":195,"title":{"interfaces/Course.html":{}},"body":{"interfaces/Author.html":{},"interfaces/Course.html":{},"classes/Feed.html":{},"interfaces/Learner.html":{},"classes/Tutor.html":{},"interfaces/User.html":{},"coverage.html":{}}}],["coursescreated",{"_index":193,"title":{},"body":{"interfaces/Author.html":{},"interfaces/Learner.html":{},"classes/Tutor.html":{},"interfaces/User.html":{}}}],["coverage",{"_index":480,"title":{"coverage.html":{}},"body":{"coverage.html":{},"index.html":{}}}],["createdat",{"_index":206,"title":{},"body":{"interfaces/Course.html":{},"classes/Feed.html":{}}}],["createdby",{"_index":207,"title":{},"body":{"interfaces/Course.html":{},"classes/Feed.html":{}}}],["createjwtoptions",{"_index":326,"title":{},"body":{"injectables/JwtConfigService.html":{},"injectables/MongooseConfigService.html":{},"injectables/MulterConfigService.html":{}}}],["creatematerialdto",{"_index":67,"title":{"interfaces/CreateMaterialDto.html":{}},"body":{"controllers/AppController.html":{},"interfaces/CreateMaterialDto.html":{},"classes/Material.html":{},"coverage.html":{}}}],["createmongooseoptions",{"_index":361,"title":{},"body":{"injectables/JwtConfigService.html":{},"injectables/MongooseConfigService.html":{},"injectables/MulterConfigService.html":{}}}],["createmulteroptions",{"_index":366,"title":{},"body":{"injectables/JwtConfigService.html":{},"injectables/MongooseConfigService.html":{},"injectables/MulterConfigService.html":{}}}],["createparamdecorator",{"_index":613,"title":{},"body":{"miscellaneous/variables.html":{}}}],["ctx",{"_index":615,"title":{},"body":{"miscellaneous/variables.html":{}}}],["ctx.switchtohttp().getrequest",{"_index":616,"title":{},"body":{"miscellaneous/variables.html":{}}}],["data",{"_index":98,"title":{},"body":{"controllers/AppController.html":{},"interfaces/CreateMaterialDto.html":{},"classes/Material.html":{},"miscellaneous/variables.html":{}}}],["database",{"_index":347,"title":{},"body":{"injectables/JwtConfigService.html":{},"injectables/MongooseConfigService.html":{},"injectables/MulterConfigService.html":{}}}],["date",{"_index":229,"title":{},"body":{"interfaces/CreateMaterialDto.html":{},"classes/Material.html":{}}}],["date.now",{"_index":231,"title":{},"body":{"interfaces/CreateMaterialDto.html":{},"classes/Material.html":{}}}],["declarations",{"_index":107,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/FeedModule.html":{},"modules/UserModule.html":{},"overview.html":{}}}],["decorators",{"_index":15,"title":{},"body":{"controllers/AppController.html":{},"classes/Feed.html":{},"controllers/FeedController.html":{},"classes/Material.html":{},"classes/Student.html":{},"classes/Tutor.html":{}}}],["decotators/user.decorator",{"_index":62,"title":{},"body":{"controllers/AppController.html":{}}}],["default",{"_index":230,"title":{},"body":{"interfaces/CreateMaterialDto.html":{},"injectables/JwtConfigService.html":{},"classes/Material.html":{},"injectables/MongooseConfigService.html":{},"injectables/MulterConfigService.html":{},"injectables/UserService.html":{},"miscellaneous/variables.html":{}}}],["defined",{"_index":18,"title":{},"body":{"controllers/AppController.html":{},"injectables/AppService.html":{},"injectables/AuthService.html":{},"classes/Feed.html":{},"controllers/FeedController.html":{},"injectables/FeedService.html":{},"injectables/JwtAuthGuard.html":{},"injectables/JwtConfigService.html":{},"injectables/JwtStrategy.html":{},"injectables/LocalStrategy.html":{},"classes/Material.html":{},"injectables/MongooseConfigService.html":{},"injectables/MulterConfigService.html":{},"classes/Student.html":{},"classes/Tutor.html":{},"injectables/UserService.html":{}}}],["delete",{"_index":258,"title":{},"body":{"controllers/FeedController.html":{}}}],["deletefeed",{"_index":255,"title":{},"body":{"controllers/FeedController.html":{},"interfaces/IFeedController.html":{},"interfaces/IFeedService.html":{}}}],["dependencies",{"_index":105,"title":{"dependencies.html":{}},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/FeedModule.html":{},"modules/UserModule.html":{},"dependencies.html":{},"overview.html":{}}}],["description",{"_index":208,"title":{},"body":{"interfaces/Course.html":{},"classes/Feed.html":{},"injectables/JwtConfigService.html":{},"injectables/MongooseConfigService.html":{},"injectables/MulterConfigService.html":{},"index.html":{}}}],["destination",{"_index":368,"title":{},"body":{"injectables/JwtConfigService.html":{},"injectables/MongooseConfigService.html":{},"injectables/MulterConfigService.html":{}}}],["development",{"_index":544,"title":{},"body":{"index.html":{}}}],["diskstorage",{"_index":69,"title":{},"body":{"controllers/AppController.html":{},"injectables/JwtConfigService.html":{},"injectables/MongooseConfigService.html":{},"injectables/MulterConfigService.html":{}}}],["document",{"_index":223,"title":{},"body":{"interfaces/CreateMaterialDto.html":{},"classes/Feed.html":{},"classes/Material.html":{},"classes/Student.html":{},"classes/Tutor.html":{}}}],["documentation",{"_index":481,"title":{},"body":{"coverage.html":{}}}],["e2e",{"_index":555,"title":{},"body":{"index.html":{}}}],["efficient",{"_index":531,"title":{},"body":{"index.html":{}}}],["email",{"_index":201,"title":{},"body":{"interfaces/Author.html":{},"interfaces/Learner.html":{},"injectables/LocalStrategy.html":{},"classes/Student.html":{},"classes/Tutor.html":{},"interfaces/User.html":{}}}],["err",{"_index":310,"title":{},"body":{"injectables/JwtAuthGuard.html":{}}}],["error",{"_index":322,"title":{},"body":{"injectables/JwtAuthGuard.html":{}}}],["example",{"_index":325,"title":{},"body":{"injectables/JwtConfigService.html":{},"injectables/MongooseConfigService.html":{},"injectables/MulterConfigService.html":{}}}],["executioncontext",{"_index":305,"title":{},"body":{"injectables/JwtAuthGuard.html":{},"miscellaneous/variables.html":{}}}],["expiresin",{"_index":380,"title":{},"body":{"injectables/JwtConfigService.html":{},"injectables/MongooseConfigService.html":{},"injectables/MulterConfigService.html":{}}}],["export",{"_index":71,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"interfaces/Author.html":{},"interfaces/Course.html":{},"interfaces/CreateMaterialDto.html":{},"classes/Feed.html":{},"controllers/FeedController.html":{},"modules/FeedModule.html":{},"injectables/FeedService.html":{},"interfaces/IFeedController.html":{},"interfaces/IFeedService.html":{},"injectables/JwtAuthGuard.html":{},"injectables/JwtConfigService.html":{},"injectables/JwtStrategy.html":{},"interfaces/Learner.html":{},"injectables/LocalAuthGuard.html":{},"injectables/LocalStrategy.html":{},"classes/Material.html":{},"injectables/MongooseConfigService.html":{},"injectables/MulterConfigService.html":{},"classes/Student.html":{},"interfaces/Todo.html":{},"classes/Tutor.html":{},"interfaces/User.html":{},"controllers/UserController.html":{},"modules/UserModule.html":{},"injectables/UserService.html":{}}}],["exports",{"_index":110,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/FeedModule.html":{},"modules/UserModule.html":{},"overview.html":{}}}],["express",{"_index":54,"title":{},"body":{"controllers/AppController.html":{},"injectables/JwtConfigService.html":{},"injectables/MongooseConfigService.html":{},"injectables/MulterConfigService.html":{},"dependencies.html":{}}}],["express.multer.file",{"_index":37,"title":{},"body":{"controllers/AppController.html":{}}}],["extends",{"_index":191,"title":{},"body":{"interfaces/Author.html":{},"interfaces/CreateMaterialDto.html":{},"injectables/JwtAuthGuard.html":{},"injectables/JwtStrategy.html":{},"interfaces/Learner.html":{},"injectables/LocalAuthGuard.html":{},"injectables/LocalStrategy.html":{},"classes/Material.html":{},"interfaces/User.html":{}}}],["extname",{"_index":336,"title":{},"body":{"injectables/JwtConfigService.html":{},"injectables/MongooseConfigService.html":{},"injectables/MulterConfigService.html":{}}}],["extractjwt",{"_index":388,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["extractjwt.fromauthheaderasbearertoken",{"_index":394,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["false",{"_index":396,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["feed",{"_index":215,"title":{"classes/Feed.html":{}},"body":{"interfaces/Course.html":{},"classes/Feed.html":{},"controllers/FeedController.html":{},"modules/FeedModule.html":{},"injectables/FeedService.html":{},"coverage.html":{}}}],["feed.controller",{"_index":277,"title":{},"body":{"modules/FeedModule.html":{}}}],["feed.name",{"_index":280,"title":{},"body":{"modules/FeedModule.html":{},"miscellaneous/variables.html":{}}}],["feed.service",{"_index":263,"title":{},"body":{"controllers/FeedController.html":{},"modules/FeedModule.html":{}}}],["feed/interfaces/feed.interface",{"_index":196,"title":{},"body":{"interfaces/Author.html":{},"classes/Feed.html":{},"interfaces/Learner.html":{},"classes/Tutor.html":{},"interfaces/User.html":{}}}],["feedcontroller",{"_index":251,"title":{"controllers/FeedController.html":{}},"body":{"controllers/FeedController.html":{},"modules/FeedModule.html":{},"coverage.html":{}}}],["feeddocument",{"_index":248,"title":{},"body":{"classes/Feed.html":{},"injectables/FeedService.html":{},"miscellaneous/typealiases.html":{}}}],["feedmodel",{"_index":287,"title":{},"body":{"injectables/FeedService.html":{}}}],["feedmodule",{"_index":115,"title":{"modules/FeedModule.html":{}},"body":{"modules/AppModule.html":{},"modules/FeedModule.html":{},"modules.html":{},"overview.html":{},"miscellaneous/variables.html":{}}}],["feeds",{"_index":254,"title":{},"body":{"controllers/FeedController.html":{}}}],["feedschema",{"_index":249,"title":{},"body":{"classes/Feed.html":{},"modules/FeedModule.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["feedservice",{"_index":262,"title":{"injectables/FeedService.html":{}},"body":{"controllers/FeedController.html":{},"modules/FeedModule.html":{},"injectables/FeedService.html":{},"coverage.html":{},"overview.html":{}}}],["fetchfeed",{"_index":299,"title":{},"body":{"interfaces/IFeedService.html":{}}}],["fetchfeeds",{"_index":283,"title":{},"body":{"injectables/FeedService.html":{},"interfaces/IFeedService.html":{}}}],["file",{"_index":5,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"interfaces/Author.html":{},"interfaces/Course.html":{},"interfaces/CreateMaterialDto.html":{},"classes/Feed.html":{},"controllers/FeedController.html":{},"modules/FeedModule.html":{},"injectables/FeedService.html":{},"interfaces/IFeedController.html":{},"interfaces/IFeedService.html":{},"injectables/JwtAuthGuard.html":{},"injectables/JwtConfigService.html":{},"injectables/JwtStrategy.html":{},"interfaces/Learner.html":{},"injectables/LocalAuthGuard.html":{},"injectables/LocalStrategy.html":{},"classes/Material.html":{},"injectables/MongooseConfigService.html":{},"injectables/MulterConfigService.html":{},"classes/Student.html":{},"interfaces/Todo.html":{},"classes/Tutor.html":{},"interfaces/User.html":{},"controllers/UserController.html":{},"modules/UserModule.html":{},"injectables/UserService.html":{},"coverage.html":{}}}],["fileinterceptor",{"_index":52,"title":{},"body":{"controllers/AppController.html":{}}}],["filename",{"_index":227,"title":{},"body":{"interfaces/CreateMaterialDto.html":{},"injectables/JwtConfigService.html":{},"classes/Material.html":{},"injectables/MongooseConfigService.html":{},"injectables/MulterConfigService.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["filename(file.originalname",{"_index":371,"title":{},"body":{"injectables/JwtConfigService.html":{},"injectables/MongooseConfigService.html":{},"injectables/MulterConfigService.html":{}}}],["files",{"_index":209,"title":{},"body":{"interfaces/Course.html":{},"classes/Feed.html":{}}}],["findone",{"_index":458,"title":{},"body":{"injectables/UserService.html":{}}}],["findone(username",{"_index":463,"title":{},"body":{"injectables/UserService.html":{}}}],["firstname",{"_index":199,"title":{},"body":{"interfaces/Author.html":{},"interfaces/Learner.html":{},"classes/Student.html":{},"classes/Tutor.html":{},"interfaces/User.html":{}}}],["framework",{"_index":529,"title":{},"body":{"index.html":{}}}],["function",{"_index":297,"title":{},"body":{"interfaces/IFeedController.html":{},"interfaces/IFeedService.html":{},"coverage.html":{}}}],["functions",{"_index":523,"title":{"miscellaneous/functions.html":{}},"body":{"miscellaneous/functions.html":{}}}],["get('profile",{"_index":92,"title":{},"body":{"controllers/AppController.html":{}}}],["get('todos",{"_index":30,"title":{},"body":{"controllers/AppController.html":{}}}],["get()@render('index",{"_index":17,"title":{},"body":{"controllers/AppController.html":{}}}],["getfeed",{"_index":256,"title":{},"body":{"controllers/FeedController.html":{},"interfaces/IFeedController.html":{}}}],["getfeeds",{"_index":257,"title":{},"body":{"controllers/FeedController.html":{},"interfaces/IFeedController.html":{}}}],["gethello",{"_index":9,"title":{},"body":{"controllers/AppController.html":{},"injectables/AppService.html":{},"interfaces/Todo.html":{}}}],["getprofile",{"_index":10,"title":{},"body":{"controllers/AppController.html":{}}}],["getprofile(@user",{"_index":93,"title":{},"body":{"controllers/AppController.html":{}}}],["getprofile(user",{"_index":23,"title":{},"body":{"controllers/AppController.html":{}}}],["getting",{"_index":525,"title":{"index.html":{}},"body":{}}],["gettodos",{"_index":12,"title":{},"body":{"controllers/AppController.html":{},"injectables/AppService.html":{},"interfaces/Todo.html":{}}}],["grow",{"_index":562,"title":{},"body":{"index.html":{}}}],["guess",{"_index":473,"title":{},"body":{"injectables/UserService.html":{}}}],["handlerequest",{"_index":303,"title":{},"body":{"injectables/JwtAuthGuard.html":{}}}],["handlerequest(err",{"_index":308,"title":{},"body":{"injectables/JwtAuthGuard.html":{}}}],["handling",{"_index":365,"title":{},"body":{"injectables/JwtConfigService.html":{},"injectables/MongooseConfigService.html":{},"injectables/MulterConfigService.html":{}}}],["hbs",{"_index":509,"title":{},"body":{"dependencies.html":{}}}],["hello",{"_index":78,"title":{},"body":{"controllers/AppController.html":{},"injectables/AppService.html":{},"interfaces/Todo.html":{}}}],["here",{"_index":573,"title":{},"body":{"index.html":{}}}],["httpmodule",{"_index":612,"title":{},"body":{"miscellaneous/variables.html":{}}}],["https://nestjs.com",{"_index":579,"title":{},"body":{"index.html":{}}}],["httpservice",{"_index":128,"title":{},"body":{"injectables/AppService.html":{},"interfaces/Todo.html":{}}}],["httpstatus",{"_index":311,"title":{},"body":{"injectables/JwtAuthGuard.html":{}}}],["httpstatus.unauthorized",{"_index":319,"title":{},"body":{"injectables/JwtAuthGuard.html":{}}}],["id",{"_index":140,"title":{},"body":{"injectables/AppService.html":{},"interfaces/Course.html":{},"classes/Feed.html":{},"interfaces/Todo.html":{}}}],["identifier",{"_index":482,"title":{},"body":{"coverage.html":{}}}],["ifeedcontroller",{"_index":264,"title":{"interfaces/IFeedController.html":{}},"body":{"controllers/FeedController.html":{},"interfaces/IFeedController.html":{},"coverage.html":{}}}],["ifeedservice",{"_index":290,"title":{"interfaces/IFeedService.html":{}},"body":{"injectables/FeedService.html":{},"interfaces/IFeedService.html":{},"coverage.html":{}}}],["ignoreexpiration",{"_index":395,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["image",{"_index":216,"title":{},"body":{"interfaces/Course.html":{}}}],["implements",{"_index":236,"title":{},"body":{"classes/Feed.html":{},"controllers/FeedController.html":{},"injectables/FeedService.html":{},"injectables/JwtConfigService.html":{},"injectables/MongooseConfigService.html":{},"injectables/MulterConfigService.html":{},"classes/Student.html":{},"classes/Tutor.html":{}}}],["import",{"_index":42,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"interfaces/Author.html":{},"interfaces/Course.html":{},"interfaces/CreateMaterialDto.html":{},"classes/Feed.html":{},"controllers/FeedController.html":{},"modules/FeedModule.html":{},"injectables/FeedService.html":{},"injectables/JwtAuthGuard.html":{},"injectables/JwtConfigService.html":{},"injectables/JwtStrategy.html":{},"interfaces/Learner.html":{},"injectables/LocalAuthGuard.html":{},"injectables/LocalStrategy.html":{},"classes/Material.html":{},"injectables/MongooseConfigService.html":{},"injectables/MulterConfigService.html":{},"classes/Student.html":{},"interfaces/Todo.html":{},"classes/Tutor.html":{},"interfaces/User.html":{},"controllers/UserController.html":{},"modules/UserModule.html":{},"injectables/UserService.html":{}}}],["imports",{"_index":121,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/FeedModule.html":{},"modules/UserModule.html":{},"miscellaneous/variables.html":{}}}],["index",{"_index":7,"title":{"index.html":{}},"body":{"controllers/AppController.html":{},"injectables/AppService.html":{},"injectables/AuthService.html":{},"interfaces/Author.html":{},"interfaces/Course.html":{},"classes/Feed.html":{},"controllers/FeedController.html":{},"injectables/FeedService.html":{},"interfaces/IFeedController.html":{},"interfaces/IFeedService.html":{},"injectables/JwtAuthGuard.html":{},"injectables/JwtConfigService.html":{},"injectables/JwtStrategy.html":{},"interfaces/Learner.html":{},"injectables/LocalStrategy.html":{},"classes/Material.html":{},"injectables/MongooseConfigService.html":{},"injectables/MulterConfigService.html":{},"classes/Student.html":{},"interfaces/Todo.html":{},"classes/Tutor.html":{},"interfaces/User.html":{},"injectables/UserService.html":{},"miscellaneous/functions.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["info",{"_index":3,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"interfaces/Author.html":{},"interfaces/Course.html":{},"interfaces/CreateMaterialDto.html":{},"classes/Feed.html":{},"controllers/FeedController.html":{},"modules/FeedModule.html":{},"injectables/FeedService.html":{},"interfaces/IFeedController.html":{},"interfaces/IFeedService.html":{},"injectables/JwtAuthGuard.html":{},"injectables/JwtConfigService.html":{},"injectables/JwtStrategy.html":{},"interfaces/Learner.html":{},"injectables/LocalAuthGuard.html":{},"injectables/LocalStrategy.html":{},"classes/Material.html":{},"injectables/MongooseConfigService.html":{},"injectables/MulterConfigService.html":{},"classes/Student.html":{},"interfaces/Todo.html":{},"classes/Tutor.html":{},"interfaces/User.html":{},"controllers/UserController.html":{},"modules/UserModule.html":{},"injectables/UserService.html":{}}}],["info.message",{"_index":321,"title":{},"body":{"injectables/JwtAuthGuard.html":{}}}],["inject",{"_index":475,"title":{},"body":{"injectables/UserService.html":{}}}],["injectable",{"_index":124,"title":{"injectables/AppService.html":{},"injectables/AuthService.html":{},"injectables/FeedService.html":{},"injectables/JwtAuthGuard.html":{},"injectables/JwtConfigService.html":{},"injectables/JwtStrategy.html":{},"injectables/LocalAuthGuard.html":{},"injectables/LocalStrategy.html":{},"injectables/MongooseConfigService.html":{},"injectables/MulterConfigService.html":{},"injectables/UserService.html":{}},"body":{"injectables/AppService.html":{},"injectables/AuthService.html":{},"injectables/FeedService.html":{},"injectables/JwtAuthGuard.html":{},"injectables/JwtConfigService.html":{},"injectables/JwtStrategy.html":{},"injectables/LocalAuthGuard.html":{},"injectables/LocalStrategy.html":{},"injectables/MongooseConfigService.html":{},"injectables/MulterConfigService.html":{},"interfaces/Todo.html":{},"injectables/UserService.html":{},"coverage.html":{}}}],["injectables",{"_index":125,"title":{},"body":{"injectables/AppService.html":{},"injectables/AuthService.html":{},"injectables/FeedService.html":{},"injectables/JwtAuthGuard.html":{},"injectables/JwtConfigService.html":{},"injectables/JwtStrategy.html":{},"injectables/LocalAuthGuard.html":{},"injectables/LocalStrategy.html":{},"injectables/MongooseConfigService.html":{},"injectables/MulterConfigService.html":{},"injectables/UserService.html":{},"overview.html":{}}}],["injectmodel",{"_index":289,"title":{},"body":{"injectables/FeedService.html":{},"injectables/UserService.html":{}}}],["injectmodel(material.name",{"_index":476,"title":{},"body":{"injectables/UserService.html":{}}}],["installation",{"_index":540,"title":{},"body":{"index.html":{}}}],["installrunning",{"_index":542,"title":{},"body":{"index.html":{}}}],["interface",{"_index":136,"title":{"interfaces/Author.html":{},"interfaces/Course.html":{},"interfaces/CreateMaterialDto.html":{},"interfaces/IFeedController.html":{},"interfaces/IFeedService.html":{},"interfaces/Learner.html":{},"interfaces/Todo.html":{},"interfaces/User.html":{}},"body":{"injectables/AppService.html":{},"interfaces/Author.html":{},"interfaces/Course.html":{},"interfaces/CreateMaterialDto.html":{},"interfaces/IFeedController.html":{},"interfaces/IFeedService.html":{},"interfaces/Learner.html":{},"classes/Material.html":{},"interfaces/Todo.html":{},"interfaces/User.html":{},"coverage.html":{}}}],["interfaces",{"_index":189,"title":{},"body":{"interfaces/Author.html":{},"interfaces/Course.html":{},"interfaces/CreateMaterialDto.html":{},"interfaces/IFeedController.html":{},"interfaces/IFeedService.html":{},"interfaces/Learner.html":{},"interfaces/Todo.html":{},"interfaces/User.html":{},"overview.html":{}}}],["interfaces/feed",{"_index":265,"title":{},"body":{"controllers/FeedController.html":{},"injectables/FeedService.html":{}}}],["intro",{"_index":210,"title":{},"body":{"interfaces/Course.html":{},"classes/Feed.html":{}}}],["isglobal",{"_index":607,"title":{},"body":{"miscellaneous/variables.html":{}}}],["john",{"_index":469,"title":{},"body":{"injectables/UserService.html":{}}}],["join",{"_index":569,"title":{},"body":{"index.html":{}}}],["jwt",{"_index":374,"title":{},"body":{"injectables/JwtConfigService.html":{},"injectables/JwtStrategy.html":{},"injectables/MongooseConfigService.html":{},"injectables/MulterConfigService.html":{},"dependencies.html":{}}}],["jwt.strategy",{"_index":162,"title":{},"body":{"modules/AuthModule.html":{}}}],["jwtauthguard",{"_index":57,"title":{"injectables/JwtAuthGuard.html":{}},"body":{"controllers/AppController.html":{},"injectables/JwtAuthGuard.html":{},"coverage.html":{}}}],["jwtconfigservice",{"_index":158,"title":{"injectables/JwtConfigService.html":{}},"body":{"modules/AuthModule.html":{},"injectables/JwtConfigService.html":{},"injectables/MongooseConfigService.html":{},"injectables/MulterConfigService.html":{},"coverage.html":{}}}],["jwtfromrequest",{"_index":393,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["jwtmodule",{"_index":155,"title":{},"body":{"modules/AuthModule.html":{}}}],["jwtmodule.registerasync",{"_index":164,"title":{},"body":{"modules/AuthModule.html":{}}}],["jwtmoduleoptions",{"_index":331,"title":{},"body":{"injectables/JwtConfigService.html":{},"injectables/MongooseConfigService.html":{},"injectables/MulterConfigService.html":{}}}],["jwtoptionsfactory",{"_index":340,"title":{},"body":{"injectables/JwtConfigService.html":{},"injectables/MongooseConfigService.html":{},"injectables/MulterConfigService.html":{}}}],["jwtsecret",{"_index":351,"title":{},"body":{"injectables/JwtConfigService.html":{},"injectables/MongooseConfigService.html":{},"injectables/MulterConfigService.html":{}}}],["jwtservice",{"_index":169,"title":{},"body":{"injectables/AuthService.html":{}}}],["jwtstrategy",{"_index":150,"title":{"injectables/JwtStrategy.html":{}},"body":{"modules/AuthModule.html":{},"injectables/JwtStrategy.html":{},"coverage.html":{},"overview.html":{}}}],["kamil",{"_index":576,"title":{},"body":{"index.html":{}}}],["learner",{"_index":202,"title":{"interfaces/Learner.html":{}},"body":{"interfaces/Author.html":{},"interfaces/CreateMaterialDto.html":{},"interfaces/Learner.html":{},"classes/Material.html":{},"classes/Student.html":{},"interfaces/User.html":{},"coverage.html":{}}}],["learningstyle",{"_index":204,"title":{},"body":{"interfaces/Author.html":{},"interfaces/Course.html":{},"classes/Feed.html":{},"interfaces/Learner.html":{},"classes/Student.html":{},"interfaces/User.html":{}}}],["legend",{"_index":106,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/FeedModule.html":{},"modules/UserModule.html":{},"overview.html":{}}}],["license",{"_index":582,"title":{},"body":{"index.html":{}}}],["licensed",{"_index":559,"title":{},"body":{"index.html":{}}}],["literal",{"_index":598,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["load",{"_index":608,"title":{},"body":{"miscellaneous/variables.html":{}}}],["local",{"_index":407,"title":{},"body":{"injectables/LocalStrategy.html":{},"dependencies.html":{}}}],["local.strategy",{"_index":163,"title":{},"body":{"modules/AuthModule.html":{}}}],["localauthguard",{"_index":60,"title":{"injectables/LocalAuthGuard.html":{}},"body":{"controllers/AppController.html":{},"injectables/LocalAuthGuard.html":{},"coverage.html":{}}}],["localstrategy",{"_index":151,"title":{"injectables/LocalStrategy.html":{}},"body":{"modules/AuthModule.html":{},"injectables/LocalStrategy.html":{},"coverage.html":{},"overview.html":{}}}],["lodash",{"_index":339,"title":{},"body":{"injectables/JwtConfigService.html":{},"injectables/MongooseConfigService.html":{},"injectables/MulterConfigService.html":{},"dependencies.html":{}}}],["login",{"_index":13,"title":{},"body":{"controllers/AppController.html":{},"injectables/AuthService.html":{}}}],["login(@request",{"_index":82,"title":{},"body":{"controllers/AppController.html":{}}}],["login(req",{"_index":32,"title":{},"body":{"controllers/AppController.html":{}}}],["login(user",{"_index":171,"title":{},"body":{"injectables/AuthService.html":{}}}],["maria",{"_index":472,"title":{},"body":{"injectables/UserService.html":{}}}],["matching",{"_index":100,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"interfaces/Author.html":{},"interfaces/Course.html":{},"interfaces/CreateMaterialDto.html":{},"classes/Feed.html":{},"controllers/FeedController.html":{},"modules/FeedModule.html":{},"injectables/FeedService.html":{},"interfaces/IFeedController.html":{},"interfaces/IFeedService.html":{},"injectables/JwtAuthGuard.html":{},"injectables/JwtConfigService.html":{},"injectables/JwtStrategy.html":{},"interfaces/Learner.html":{},"injectables/LocalAuthGuard.html":{},"injectables/LocalStrategy.html":{},"classes/Material.html":{},"injectables/MongooseConfigService.html":{},"injectables/MulterConfigService.html":{},"classes/Student.html":{},"interfaces/Todo.html":{},"classes/Tutor.html":{},"interfaces/User.html":{},"controllers/UserController.html":{},"modules/UserModule.html":{},"injectables/UserService.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/functions.html":{},"index.html":{},"modules.html":{},"overview.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["material",{"_index":218,"title":{"classes/Material.html":{}},"body":{"interfaces/CreateMaterialDto.html":{},"classes/Material.html":{},"modules/UserModule.html":{},"injectables/UserService.html":{},"coverage.html":{}}}],["material.name",{"_index":455,"title":{},"body":{"modules/UserModule.html":{},"miscellaneous/variables.html":{}}}],["materialdocument",{"_index":225,"title":{},"body":{"interfaces/CreateMaterialDto.html":{},"classes/Material.html":{},"injectables/UserService.html":{},"miscellaneous/typealiases.html":{}}}],["materialmodel",{"_index":462,"title":{},"body":{"injectables/UserService.html":{}}}],["materialschema",{"_index":232,"title":{},"body":{"interfaces/CreateMaterialDto.html":{},"classes/Material.html":{},"modules/UserModule.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["message",{"_index":21,"title":{},"body":{"controllers/AppController.html":{},"injectables/JwtAuthGuard.html":{}}}],["metadata",{"_index":517,"title":{},"body":{"dependencies.html":{}}}],["methods",{"_index":8,"title":{},"body":{"controllers/AppController.html":{},"injectables/AppService.html":{},"injectables/AuthService.html":{},"controllers/FeedController.html":{},"injectables/FeedService.html":{},"injectables/JwtAuthGuard.html":{},"injectables/JwtConfigService.html":{},"injectables/JwtStrategy.html":{},"injectables/LocalStrategy.html":{},"injectables/MongooseConfigService.html":{},"injectables/MulterConfigService.html":{},"injectables/UserService.html":{}}}],["miscellaneous",{"_index":522,"title":{"miscellaneous/functions.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}},"body":{"miscellaneous/functions.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["mit",{"_index":558,"title":{},"body":{"index.html":{}}}],["mode",{"_index":548,"title":{},"body":{"index.html":{}}}],["model",{"_index":285,"title":{},"body":{"injectables/FeedService.html":{},"injectables/UserService.html":{}}}],["modeldefinition",{"_index":275,"title":{},"body":{"modules/FeedModule.html":{},"modules/UserModule.html":{},"miscellaneous/variables.html":{}}}],["models",{"_index":279,"title":{},"body":{"modules/FeedModule.html":{},"modules/UserModule.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["module",{"_index":102,"title":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/FeedModule.html":{},"modules/UserModule.html":{}},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/FeedModule.html":{},"modules/UserModule.html":{},"overview.html":{}}}],["modules",{"_index":104,"title":{"modules.html":{}},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/FeedModule.html":{},"modules/UserModule.html":{},"coverage.html":{},"modules.html":{},"overview.html":{},"miscellaneous/variables.html":{}}}],["mongodb",{"_index":359,"title":{},"body":{"injectables/JwtConfigService.html":{},"injectables/MongooseConfigService.html":{},"injectables/MulterConfigService.html":{}}}],["mongoose",{"_index":224,"title":{},"body":{"interfaces/CreateMaterialDto.html":{},"classes/Feed.html":{},"injectables/FeedService.html":{},"injectables/JwtConfigService.html":{},"classes/Material.html":{},"injectables/MongooseConfigService.html":{},"injectables/MulterConfigService.html":{},"classes/Student.html":{},"classes/Tutor.html":{},"injectables/UserService.html":{},"dependencies.html":{}}}],["mongoose.schema.types.objectid",{"_index":440,"title":{},"body":{"classes/Tutor.html":{}}}],["mongooseconfigservice",{"_index":356,"title":{"injectables/MongooseConfigService.html":{}},"body":{"injectables/JwtConfigService.html":{},"injectables/MongooseConfigService.html":{},"injectables/MulterConfigService.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["mongoosemodule",{"_index":276,"title":{},"body":{"modules/FeedModule.html":{},"modules/UserModule.html":{}}}],["mongoosemodule.forfeature(models",{"_index":281,"title":{},"body":{"modules/FeedModule.html":{},"modules/UserModule.html":{}}}],["mongoosemodule.forrootasync",{"_index":610,"title":{},"body":{"miscellaneous/variables.html":{}}}],["mongoosemoduleoptions",{"_index":332,"title":{},"body":{"injectables/JwtConfigService.html":{},"injectables/MongooseConfigService.html":{},"injectables/MulterConfigService.html":{}}}],["mongooseoptionsfactory",{"_index":333,"title":{},"body":{"injectables/JwtConfigService.html":{},"injectables/MongooseConfigService.html":{},"injectables/MulterConfigService.html":{}}}],["more",{"_index":572,"title":{},"body":{"index.html":{}}}],["multer",{"_index":70,"title":{},"body":{"controllers/AppController.html":{},"injectables/JwtConfigService.html":{},"injectables/MongooseConfigService.html":{},"injectables/MulterConfigService.html":{}}}],["multerconfigservice",{"_index":364,"title":{"injectables/MulterConfigService.html":{}},"body":{"injectables/JwtConfigService.html":{},"injectables/MongooseConfigService.html":{},"injectables/MulterConfigService.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["multermodule.registerasync",{"_index":611,"title":{},"body":{"miscellaneous/variables.html":{}}}],["multermoduleoptions",{"_index":334,"title":{},"body":{"injectables/JwtConfigService.html":{},"injectables/MongooseConfigService.html":{},"injectables/MulterConfigService.html":{}}}],["multeroptionsfactory",{"_index":335,"title":{},"body":{"injectables/JwtConfigService.html":{},"injectables/MongooseConfigService.html":{},"injectables/MulterConfigService.html":{}}}],["myśliwiec",{"_index":577,"title":{},"body":{"index.html":{}}}],["name",{"_index":27,"title":{},"body":{"controllers/AppController.html":{},"injectables/AppService.html":{},"injectables/AuthService.html":{},"modules/FeedModule.html":{},"injectables/FeedService.html":{},"injectables/JwtAuthGuard.html":{},"injectables/JwtConfigService.html":{},"injectables/JwtStrategy.html":{},"injectables/LocalStrategy.html":{},"injectables/MongooseConfigService.html":{},"injectables/MulterConfigService.html":{},"modules/UserModule.html":{},"injectables/UserService.html":{},"miscellaneous/variables.html":{}}}],["name}${extname(file.originalname",{"_index":373,"title":{},"body":{"injectables/JwtConfigService.html":{},"injectables/MongooseConfigService.html":{},"injectables/MulterConfigService.html":{}}}],["nest",{"_index":536,"title":{},"body":{"index.html":{}}}],["nestframework",{"_index":581,"title":{},"body":{"index.html":{}}}],["nestjs/common",{"_index":49,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"controllers/FeedController.html":{},"modules/FeedModule.html":{},"injectables/FeedService.html":{},"injectables/JwtAuthGuard.html":{},"injectables/JwtConfigService.html":{},"injectables/JwtStrategy.html":{},"injectables/LocalAuthGuard.html":{},"injectables/LocalStrategy.html":{},"injectables/MongooseConfigService.html":{},"injectables/MulterConfigService.html":{},"interfaces/Todo.html":{},"controllers/UserController.html":{},"modules/UserModule.html":{},"injectables/UserService.html":{},"dependencies.html":{}}}],["nestjs/config",{"_index":154,"title":{},"body":{"modules/AuthModule.html":{},"injectables/JwtConfigService.html":{},"injectables/JwtStrategy.html":{},"injectables/MongooseConfigService.html":{},"injectables/MulterConfigService.html":{},"dependencies.html":{}}}],["nestjs/core",{"_index":502,"title":{},"body":{"dependencies.html":{}}}],["nestjs/jwt",{"_index":156,"title":{},"body":{"modules/AuthModule.html":{},"injectables/AuthService.html":{},"injectables/JwtConfigService.html":{},"injectables/MongooseConfigService.html":{},"injectables/MulterConfigService.html":{},"dependencies.html":{}}}],["nestjs/mongoose",{"_index":222,"title":{},"body":{"interfaces/CreateMaterialDto.html":{},"classes/Feed.html":{},"modules/FeedModule.html":{},"injectables/FeedService.html":{},"injectables/JwtConfigService.html":{},"classes/Material.html":{},"injectables/MongooseConfigService.html":{},"injectables/MulterConfigService.html":{},"classes/Student.html":{},"classes/Tutor.html":{},"modules/UserModule.html":{},"injectables/UserService.html":{},"dependencies.html":{}}}],["nestjs/passport",{"_index":51,"title":{},"body":{"controllers/AppController.html":{},"modules/AuthModule.html":{},"injectables/JwtAuthGuard.html":{},"injectables/JwtStrategy.html":{},"injectables/LocalAuthGuard.html":{},"injectables/LocalStrategy.html":{},"dependencies.html":{}}}],["nestjs/platform",{"_index":53,"title":{},"body":{"controllers/AppController.html":{},"injectables/JwtConfigService.html":{},"injectables/MongooseConfigService.html":{},"injectables/MulterConfigService.html":{},"dependencies.html":{}}}],["nestjs/serve",{"_index":506,"title":{},"body":{"dependencies.html":{}}}],["new",{"_index":317,"title":{},"body":{"injectables/JwtAuthGuard.html":{},"injectables/LocalStrategy.html":{},"injectables/UserService.html":{},"coverage.html":{}}}],["newfile",{"_index":478,"title":{},"body":{"injectables/UserService.html":{}}}],["node.js",{"_index":528,"title":{},"body":{"index.html":{}}}],["npm",{"_index":541,"title":{},"body":{"index.html":{}}}],["null",{"_index":181,"title":{},"body":{"injectables/AuthService.html":{}}}],["number",{"_index":139,"title":{},"body":{"injectables/AppService.html":{},"interfaces/Todo.html":{},"injectables/UserService.html":{}}}],["objectives",{"_index":211,"title":{},"body":{"interfaces/Course.html":{},"classes/Feed.html":{}}}],["observable",{"_index":132,"title":{},"body":{"injectables/AppService.html":{},"interfaces/Todo.html":{}}}],["occured",{"_index":323,"title":{},"body":{"injectables/JwtAuthGuard.html":{}}}],["open",{"_index":560,"title":{},"body":{"index.html":{}}}],["optional",{"_index":28,"title":{},"body":{"controllers/AppController.html":{},"injectables/AppService.html":{},"injectables/AuthService.html":{},"injectables/FeedService.html":{},"injectables/JwtAuthGuard.html":{},"injectables/JwtConfigService.html":{},"injectables/JwtStrategy.html":{},"injectables/LocalStrategy.html":{},"injectables/MongooseConfigService.html":{},"injectables/MulterConfigService.html":{},"interfaces/User.html":{},"injectables/UserService.html":{}}}],["options",{"_index":376,"title":{},"body":{"injectables/JwtConfigService.html":{},"injectables/MongooseConfigService.html":{},"injectables/MulterConfigService.html":{}}}],["othernames",{"_index":200,"title":{},"body":{"interfaces/Author.html":{},"interfaces/CreateMaterialDto.html":{},"interfaces/Learner.html":{},"classes/Material.html":{},"classes/Student.html":{},"classes/Tutor.html":{},"interfaces/User.html":{}}}],["out",{"_index":119,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/FeedModule.html":{},"modules/UserModule.html":{},"overview.html":{}}}],["overview",{"_index":586,"title":{"overview.html":{}},"body":{"overview.html":{}}}],["package",{"_index":499,"title":{"dependencies.html":{}},"body":{}}],["parameters",{"_index":26,"title":{},"body":{"controllers/AppController.html":{},"injectables/AppService.html":{},"injectables/AuthService.html":{},"injectables/FeedService.html":{},"injectables/JwtAuthGuard.html":{},"injectables/JwtConfigService.html":{},"injectables/JwtStrategy.html":{},"injectables/LocalStrategy.html":{},"injectables/MongooseConfigService.html":{},"injectables/MulterConfigService.html":{},"injectables/UserService.html":{}}}],["parseint(process.env.port",{"_index":344,"title":{},"body":{"injectables/JwtConfigService.html":{},"injectables/MongooseConfigService.html":{},"injectables/MulterConfigService.html":{}}}],["partial",{"_index":292,"title":{},"body":{"injectables/FeedService.html":{}}}],["pass",{"_index":174,"title":{},"body":{"injectables/AuthService.html":{}}}],["passport",{"_index":390,"title":{},"body":{"injectables/JwtStrategy.html":{},"injectables/LocalStrategy.html":{},"dependencies.html":{}}}],["passportmodule",{"_index":157,"title":{},"body":{"modules/AuthModule.html":{}}}],["passportstrategy",{"_index":387,"title":{},"body":{"injectables/JwtStrategy.html":{},"injectables/LocalStrategy.html":{}}}],["passportstrategy(strategy",{"_index":391,"title":{},"body":{"injectables/JwtStrategy.html":{},"injectables/LocalStrategy.html":{}}}],["password",{"_index":180,"title":{},"body":{"injectables/AuthService.html":{},"injectables/LocalStrategy.html":{},"injectables/UserService.html":{}}}],["path",{"_index":337,"title":{},"body":{"injectables/JwtConfigService.html":{},"injectables/MongooseConfigService.html":{},"injectables/MulterConfigService.html":{}}}],["payload",{"_index":182,"title":{},"body":{"injectables/AuthService.html":{},"injectables/JwtStrategy.html":{}}}],["payload.sub",{"_index":398,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["payload.username",{"_index":399,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["please",{"_index":570,"title":{},"body":{"index.html":{}}}],["port",{"_index":343,"title":{},"body":{"injectables/JwtConfigService.html":{},"injectables/MongooseConfigService.html":{},"injectables/MulterConfigService.html":{}}}],["post",{"_index":43,"title":{},"body":{"controllers/AppController.html":{}}}],["post('auth/login",{"_index":81,"title":{},"body":{"controllers/AppController.html":{}}}],["post('upload",{"_index":84,"title":{},"body":{"controllers/AppController.html":{}}}],["post('upload')@useinterceptors(undefined",{"_index":38,"title":{},"body":{"controllers/AppController.html":{}}}],["prefix",{"_index":253,"title":{},"body":{"controllers/FeedController.html":{}}}],["private",{"_index":74,"title":{},"body":{"controllers/AppController.html":{},"injectables/AuthService.html":{},"injectables/FeedService.html":{},"injectables/UserService.html":{}}}],["process.env.jwtsecret",{"_index":352,"title":{},"body":{"injectables/JwtConfigService.html":{},"injectables/JwtStrategy.html":{},"injectables/MongooseConfigService.html":{},"injectables/MulterConfigService.html":{}}}],["process.env.mongodb_uri",{"_index":348,"title":{},"body":{"injectables/JwtConfigService.html":{},"injectables/MongooseConfigService.html":{},"injectables/MulterConfigService.html":{}}}],["production",{"_index":550,"title":{},"body":{"index.html":{}}}],["progressive",{"_index":527,"title":{},"body":{"index.html":{}}}],["project",{"_index":561,"title":{},"body":{"index.html":{}}}],["promise",{"_index":177,"title":{},"body":{"injectables/AuthService.html":{},"controllers/FeedController.html":{},"interfaces/IFeedController.html":{},"interfaces/IFeedService.html":{},"injectables/LocalStrategy.html":{},"injectables/UserService.html":{}}}],["prop",{"_index":219,"title":{},"body":{"interfaces/CreateMaterialDto.html":{},"classes/Feed.html":{},"classes/Material.html":{},"classes/Student.html":{},"classes/Tutor.html":{}}}],["prop({type",{"_index":411,"title":{},"body":{"classes/Material.html":{},"classes/Tutor.html":{}}}],["properties",{"_index":192,"title":{},"body":{"interfaces/Author.html":{},"interfaces/Course.html":{},"classes/Feed.html":{},"interfaces/IFeedController.html":{},"interfaces/IFeedService.html":{},"interfaces/Learner.html":{},"classes/Material.html":{},"classes/Student.html":{},"interfaces/Todo.html":{},"classes/Tutor.html":{},"interfaces/User.html":{},"injectables/UserService.html":{}}}],["providers",{"_index":109,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/FeedModule.html":{},"modules/UserModule.html":{},"overview.html":{}}}],["public/upload",{"_index":350,"title":{},"body":{"injectables/JwtConfigService.html":{},"injectables/MongooseConfigService.html":{},"injectables/MulterConfigService.html":{}}}],["read",{"_index":571,"title":{},"body":{"index.html":{}}}],["readonly",{"_index":75,"title":{},"body":{"controllers/AppController.html":{},"controllers/FeedController.html":{},"injectables/UserService.html":{}}}],["ref",{"_index":441,"title":{},"body":{"classes/Tutor.html":{}}}],["reflect",{"_index":516,"title":{},"body":{"dependencies.html":{}}}],["render",{"_index":44,"title":{},"body":{"controllers/AppController.html":{}}}],["render('index",{"_index":76,"title":{},"body":{"controllers/AppController.html":{}}}],["repository",{"_index":539,"title":{},"body":{"index.html":{}}}],["req",{"_index":35,"title":{},"body":{"controllers/AppController.html":{},"injectables/JwtConfigService.html":{},"injectables/MongooseConfigService.html":{},"injectables/MulterConfigService.html":{}}}],["request",{"_index":45,"title":{},"body":{"controllers/AppController.html":{},"miscellaneous/variables.html":{}}}],["request.user",{"_index":617,"title":{},"body":{"miscellaneous/variables.html":{}}}],["requirements",{"_index":212,"title":{},"body":{"interfaces/Course.html":{},"classes/Feed.html":{}}}],["reset",{"_index":118,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/FeedModule.html":{},"modules/UserModule.html":{},"overview.html":{}}}],["result",{"_index":89,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"interfaces/Author.html":{},"interfaces/Course.html":{},"interfaces/CreateMaterialDto.html":{},"classes/Feed.html":{},"controllers/FeedController.html":{},"modules/FeedModule.html":{},"injectables/FeedService.html":{},"interfaces/IFeedController.html":{},"interfaces/IFeedService.html":{},"injectables/JwtAuthGuard.html":{},"injectables/JwtConfigService.html":{},"injectables/JwtStrategy.html":{},"interfaces/Learner.html":{},"injectables/LocalAuthGuard.html":{},"injectables/LocalStrategy.html":{},"classes/Material.html":{},"injectables/MongooseConfigService.html":{},"injectables/MulterConfigService.html":{},"classes/Student.html":{},"interfaces/Todo.html":{},"classes/Tutor.html":{},"interfaces/User.html":{},"controllers/UserController.html":{},"modules/UserModule.html":{},"injectables/UserService.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/functions.html":{},"index.html":{},"modules.html":{},"overview.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["result.topromise",{"_index":97,"title":{},"body":{"controllers/AppController.html":{}}}],["results",{"_index":101,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"interfaces/Author.html":{},"interfaces/Course.html":{},"interfaces/CreateMaterialDto.html":{},"classes/Feed.html":{},"controllers/FeedController.html":{},"modules/FeedModule.html":{},"injectables/FeedService.html":{},"interfaces/IFeedController.html":{},"interfaces/IFeedService.html":{},"injectables/JwtAuthGuard.html":{},"injectables/JwtConfigService.html":{},"injectables/JwtStrategy.html":{},"interfaces/Learner.html":{},"injectables/LocalAuthGuard.html":{},"injectables/LocalStrategy.html":{},"classes/Material.html":{},"injectables/MongooseConfigService.html":{},"injectables/MulterConfigService.html":{},"classes/Student.html":{},"interfaces/Todo.html":{},"classes/Tutor.html":{},"interfaces/User.html":{},"controllers/UserController.html":{},"modules/UserModule.html":{},"injectables/UserService.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/functions.html":{},"index.html":{},"modules.html":{},"overview.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["return",{"_index":77,"title":{},"body":{"controllers/AppController.html":{},"injectables/AppService.html":{},"injectables/AuthService.html":{},"controllers/FeedController.html":{},"injectables/FeedService.html":{},"injectables/JwtAuthGuard.html":{},"injectables/JwtConfigService.html":{},"injectables/JwtStrategy.html":{},"injectables/LocalStrategy.html":{},"injectables/MongooseConfigService.html":{},"injectables/MulterConfigService.html":{},"interfaces/Todo.html":{},"injectables/UserService.html":{},"miscellaneous/variables.html":{}}}],["returns",{"_index":20,"title":{},"body":{"controllers/AppController.html":{},"injectables/AppService.html":{},"injectables/AuthService.html":{},"controllers/FeedController.html":{},"injectables/FeedService.html":{},"injectables/JwtAuthGuard.html":{},"injectables/JwtConfigService.html":{},"injectables/JwtStrategy.html":{},"injectables/LocalStrategy.html":{},"injectables/MongooseConfigService.html":{},"injectables/MulterConfigService.html":{},"injectables/UserService.html":{}}}],["rimraf",{"_index":519,"title":{},"body":{"dependencies.html":{}}}],["route",{"_index":270,"title":{},"body":{"controllers/FeedController.html":{}}}],["run",{"_index":545,"title":{},"body":{"index.html":{}}}],["rxjs",{"_index":133,"title":{},"body":{"injectables/AppService.html":{},"interfaces/Todo.html":{},"dependencies.html":{}}}],["scalable",{"_index":532,"title":{},"body":{"index.html":{}}}],["schema",{"_index":220,"title":{},"body":{"interfaces/CreateMaterialDto.html":{},"classes/Feed.html":{},"modules/FeedModule.html":{},"classes/Material.html":{},"classes/Student.html":{},"classes/Tutor.html":{},"modules/UserModule.html":{},"miscellaneous/variables.html":{}}}],["schemafactory",{"_index":221,"title":{},"body":{"interfaces/CreateMaterialDto.html":{},"classes/Feed.html":{},"classes/Material.html":{},"classes/Student.html":{},"classes/Tutor.html":{}}}],["schemafactory.createforclass(feed",{"_index":250,"title":{},"body":{"classes/Feed.html":{},"miscellaneous/variables.html":{}}}],["schemafactory.createforclass(material",{"_index":233,"title":{},"body":{"interfaces/CreateMaterialDto.html":{},"classes/Material.html":{},"miscellaneous/variables.html":{}}}],["schemafactory.createforclass(student",{"_index":430,"title":{},"body":{"classes/Student.html":{},"miscellaneous/variables.html":{}}}],["schemafactory.createforclass(tutor",{"_index":443,"title":{},"body":{"classes/Tutor.html":{},"miscellaneous/variables.html":{}}}],["schemas/feed.schema",{"_index":278,"title":{},"body":{"modules/FeedModule.html":{},"injectables/FeedService.html":{}}}],["schemas/files.schema",{"_index":450,"title":{},"body":{"modules/UserModule.html":{},"injectables/UserService.html":{}}}],["schemas/student.schema",{"_index":451,"title":{},"body":{"modules/UserModule.html":{}}}],["schemas/tutor.schema",{"_index":452,"title":{},"body":{"modules/UserModule.html":{}}}],["secret",{"_index":377,"title":{},"body":{"injectables/JwtConfigService.html":{},"injectables/MongooseConfigService.html":{},"injectables/MulterConfigService.html":{}}}],["secretorkey",{"_index":397,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["server",{"_index":533,"title":{},"body":{"index.html":{}}}],["service",{"_index":358,"title":{},"body":{"injectables/JwtConfigService.html":{},"injectables/MongooseConfigService.html":{},"injectables/MulterConfigService.html":{}}}],["service.interface",{"_index":291,"title":{},"body":{"injectables/FeedService.html":{}}}],["service.interface.ts",{"_index":298,"title":{},"body":{"interfaces/IFeedService.html":{},"coverage.html":{}}}],["setting",{"_index":375,"title":{},"body":{"injectables/JwtConfigService.html":{},"injectables/MongooseConfigService.html":{},"injectables/MulterConfigService.html":{}}}],["setup",{"_index":360,"title":{},"body":{"injectables/JwtConfigService.html":{},"injectables/MongooseConfigService.html":{},"injectables/MulterConfigService.html":{}}}],["side",{"_index":534,"title":{},"body":{"index.html":{}}}],["signoptions",{"_index":379,"title":{},"body":{"injectables/JwtConfigService.html":{},"injectables/MongooseConfigService.html":{},"injectables/MulterConfigService.html":{}}}],["single",{"_index":269,"title":{},"body":{"controllers/FeedController.html":{}}}],["source",{"_index":4,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"interfaces/Author.html":{},"interfaces/Course.html":{},"interfaces/CreateMaterialDto.html":{},"classes/Feed.html":{},"controllers/FeedController.html":{},"modules/FeedModule.html":{},"injectables/FeedService.html":{},"interfaces/IFeedController.html":{},"interfaces/IFeedService.html":{},"injectables/JwtAuthGuard.html":{},"injectables/JwtConfigService.html":{},"injectables/JwtStrategy.html":{},"interfaces/Learner.html":{},"injectables/LocalAuthGuard.html":{},"injectables/LocalStrategy.html":{},"classes/Material.html":{},"injectables/MongooseConfigService.html":{},"injectables/MulterConfigService.html":{},"classes/Student.html":{},"interfaces/Todo.html":{},"classes/Tutor.html":{},"interfaces/User.html":{},"controllers/UserController.html":{},"modules/UserModule.html":{},"injectables/UserService.html":{},"index.html":{}}}],["sponsors",{"_index":564,"title":{},"body":{"index.html":{}}}],["src/.../configuration.ts",{"_index":601,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../constants.ts",{"_index":600,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../feed.module.ts",{"_index":602,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../feed.schema.ts",{"_index":593,"title":{},"body":{"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["src/.../files.schema.ts",{"_index":594,"title":{},"body":{"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["src/.../main.ts",{"_index":524,"title":{},"body":{"miscellaneous/functions.html":{}}}],["src/.../modules.ts",{"_index":604,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../student.schema.ts",{"_index":595,"title":{},"body":{"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["src/.../tutor.schema.ts",{"_index":596,"title":{},"body":{"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["src/.../user.decorator.ts",{"_index":605,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../user.module.ts",{"_index":603,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../user.service.ts",{"_index":597,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["src/app.controller.ts",{"_index":6,"title":{},"body":{"controllers/AppController.html":{},"coverage.html":{}}}],["src/app.controller.ts:34",{"_index":19,"title":{},"body":{"controllers/AppController.html":{}}}],["src/app.controller.ts:40",{"_index":34,"title":{},"body":{"controllers/AppController.html":{}}}],["src/app.controller.ts:46",{"_index":39,"title":{},"body":{"controllers/AppController.html":{}}}],["src/app.controller.ts:58",{"_index":25,"title":{},"body":{"controllers/AppController.html":{}}}],["src/app.controller.ts:63",{"_index":31,"title":{},"body":{"controllers/AppController.html":{}}}],["src/app.module.ts",{"_index":120,"title":{},"body":{"modules/AppModule.html":{}}}],["src/app.service.ts",{"_index":126,"title":{},"body":{"injectables/AppService.html":{},"interfaces/Todo.html":{},"coverage.html":{}}}],["src/app.service.ts:13",{"_index":129,"title":{},"body":{"injectables/AppService.html":{}}}],["src/app.service.ts:15",{"_index":130,"title":{},"body":{"injectables/AppService.html":{}}}],["src/app.service.ts:19",{"_index":131,"title":{},"body":{"injectables/AppService.html":{}}}],["src/auth/auth.module.ts",{"_index":152,"title":{},"body":{"modules/AuthModule.html":{}}}],["src/auth/auth.service.ts",{"_index":166,"title":{},"body":{"injectables/AuthService.html":{},"coverage.html":{}}}],["src/auth/auth.service.ts:12",{"_index":175,"title":{},"body":{"injectables/AuthService.html":{}}}],["src/auth/auth.service.ts:21",{"_index":172,"title":{},"body":{"injectables/AuthService.html":{}}}],["src/auth/auth.service.ts:6",{"_index":170,"title":{},"body":{"injectables/AuthService.html":{}}}],["src/auth/jwt",{"_index":300,"title":{},"body":{"injectables/JwtAuthGuard.html":{},"coverage.html":{}}}],["src/auth/jwt.strategy.ts",{"_index":382,"title":{},"body":{"injectables/JwtStrategy.html":{},"coverage.html":{}}}],["src/auth/jwt.strategy.ts:16",{"_index":386,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["src/auth/jwt.strategy.ts:7",{"_index":384,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["src/auth/local",{"_index":400,"title":{},"body":{"injectables/LocalAuthGuard.html":{},"coverage.html":{}}}],["src/auth/local.strategy.ts",{"_index":402,"title":{},"body":{"injectables/LocalStrategy.html":{},"coverage.html":{}}}],["src/auth/local.strategy.ts:15",{"_index":406,"title":{},"body":{"injectables/LocalStrategy.html":{}}}],["src/auth/local.strategy.ts:8",{"_index":404,"title":{},"body":{"injectables/LocalStrategy.html":{}}}],["src/config/configuration.ts",{"_index":324,"title":{},"body":{"injectables/JwtConfigService.html":{},"injectables/MongooseConfigService.html":{},"injectables/MulterConfigService.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/config/configuration.ts:32",{"_index":416,"title":{},"body":{"injectables/MongooseConfigService.html":{}}}],["src/config/configuration.ts:34",{"_index":417,"title":{},"body":{"injectables/MongooseConfigService.html":{}}}],["src/config/configuration.ts:48",{"_index":418,"title":{},"body":{"injectables/MulterConfigService.html":{}}}],["src/config/configuration.ts:50",{"_index":419,"title":{},"body":{"injectables/MulterConfigService.html":{}}}],["src/config/configuration.ts:70",{"_index":329,"title":{},"body":{"injectables/JwtConfigService.html":{}}}],["src/config/configuration.ts:72",{"_index":330,"title":{},"body":{"injectables/JwtConfigService.html":{}}}],["src/config/constants.ts",{"_index":490,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/config/modules.ts",{"_index":492,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/decotators/user.decorator.ts",{"_index":493,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/feed/feed.controller.ts",{"_index":252,"title":{},"body":{"controllers/FeedController.html":{},"coverage.html":{}}}],["src/feed/feed.controller.ts:10",{"_index":261,"title":{},"body":{"controllers/FeedController.html":{}}}],["src/feed/feed.controller.ts:16",{"_index":260,"title":{},"body":{"controllers/FeedController.html":{}}}],["src/feed/feed.controller.ts:21",{"_index":259,"title":{},"body":{"controllers/FeedController.html":{}}}],["src/feed/feed.module.ts",{"_index":274,"title":{},"body":{"modules/FeedModule.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/feed/feed.service.ts",{"_index":282,"title":{},"body":{"injectables/FeedService.html":{},"coverage.html":{}}}],["src/feed/feed.service.ts:11",{"_index":288,"title":{},"body":{"injectables/FeedService.html":{}}}],["src/feed/feed.service.ts:8",{"_index":286,"title":{},"body":{"injectables/FeedService.html":{}}}],["src/feed/interfaces/feed",{"_index":295,"title":{},"body":{"interfaces/IFeedController.html":{},"interfaces/IFeedService.html":{},"coverage.html":{}}}],["src/feed/interfaces/feed.interface.ts",{"_index":205,"title":{},"body":{"interfaces/Course.html":{},"coverage.html":{}}}],["src/feed/schemas/feed.schema.ts",{"_index":235,"title":{},"body":{"classes/Feed.html":{},"coverage.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["src/feed/schemas/feed.schema.ts:10",{"_index":241,"title":{},"body":{"classes/Feed.html":{}}}],["src/feed/schemas/feed.schema.ts:13",{"_index":247,"title":{},"body":{"classes/Feed.html":{}}}],["src/feed/schemas/feed.schema.ts:16",{"_index":246,"title":{},"body":{"classes/Feed.html":{}}}],["src/feed/schemas/feed.schema.ts:19",{"_index":242,"title":{},"body":{"classes/Feed.html":{}}}],["src/feed/schemas/feed.schema.ts:22",{"_index":239,"title":{},"body":{"classes/Feed.html":{}}}],["src/feed/schemas/feed.schema.ts:25",{"_index":243,"title":{},"body":{"classes/Feed.html":{}}}],["src/feed/schemas/feed.schema.ts:28",{"_index":238,"title":{},"body":{"classes/Feed.html":{}}}],["src/feed/schemas/feed.schema.ts:31",{"_index":237,"title":{},"body":{"classes/Feed.html":{}}}],["src/feed/schemas/feed.schema.ts:34",{"_index":244,"title":{},"body":{"classes/Feed.html":{}}}],["src/feed/schemas/feed.schema.ts:37",{"_index":245,"title":{},"body":{"classes/Feed.html":{}}}],["src/feed/schemas/feed.schema.ts:40",{"_index":240,"title":{},"body":{"classes/Feed.html":{}}}],["src/main.ts",{"_index":495,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["src/user/interfaces/user.interface.ts",{"_index":190,"title":{},"body":{"interfaces/Author.html":{},"interfaces/Learner.html":{},"interfaces/User.html":{},"coverage.html":{}}}],["src/user/schemas/files.schema.ts",{"_index":217,"title":{},"body":{"interfaces/CreateMaterialDto.html":{},"classes/Material.html":{},"coverage.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["src/user/schemas/files.schema.ts:12",{"_index":412,"title":{},"body":{"classes/Material.html":{}}}],["src/user/schemas/files.schema.ts:15",{"_index":413,"title":{},"body":{"classes/Material.html":{}}}],["src/user/schemas/files.schema.ts:18",{"_index":410,"title":{},"body":{"classes/Material.html":{}}}],["src/user/schemas/files.schema.ts:21",{"_index":415,"title":{},"body":{"classes/Material.html":{}}}],["src/user/schemas/student.schema.ts",{"_index":421,"title":{},"body":{"classes/Student.html":{},"coverage.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["src/user/schemas/student.schema.ts:10",{"_index":427,"title":{},"body":{"classes/Student.html":{}}}],["src/user/schemas/student.schema.ts:13",{"_index":423,"title":{},"body":{"classes/Student.html":{}}}],["src/user/schemas/student.schema.ts:16",{"_index":425,"title":{},"body":{"classes/Student.html":{}}}],["src/user/schemas/student.schema.ts:19",{"_index":422,"title":{},"body":{"classes/Student.html":{}}}],["src/user/schemas/student.schema.ts:22",{"_index":426,"title":{},"body":{"classes/Student.html":{}}}],["src/user/schemas/student.schema.ts:25",{"_index":424,"title":{},"body":{"classes/Student.html":{}}}],["src/user/schemas/tutor.schema.ts",{"_index":432,"title":{},"body":{"classes/Tutor.html":{},"coverage.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["src/user/schemas/tutor.schema.ts:12",{"_index":437,"title":{},"body":{"classes/Tutor.html":{}}}],["src/user/schemas/tutor.schema.ts:15",{"_index":435,"title":{},"body":{"classes/Tutor.html":{}}}],["src/user/schemas/tutor.schema.ts:18",{"_index":436,"title":{},"body":{"classes/Tutor.html":{}}}],["src/user/schemas/tutor.schema.ts:21",{"_index":434,"title":{},"body":{"classes/Tutor.html":{}}}],["src/user/schemas/tutor.schema.ts:24",{"_index":438,"title":{},"body":{"classes/Tutor.html":{}}}],["src/user/schemas/tutor.schema.ts:27",{"_index":433,"title":{},"body":{"classes/Tutor.html":{}}}],["src/user/user.controller.ts",{"_index":445,"title":{},"body":{"controllers/UserController.html":{},"coverage.html":{}}}],["src/user/user.module.ts",{"_index":449,"title":{},"body":{"modules/UserModule.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/user/user.service.ts",{"_index":456,"title":{},"body":{"injectables/UserService.html":{},"coverage.html":{},"miscellaneous/typealiases.html":{}}}],["src/user/user.service.ts:14",{"_index":474,"title":{},"body":{"injectables/UserService.html":{}}}],["src/user/user.service.ts:25",{"_index":461,"title":{},"body":{"injectables/UserService.html":{}}}],["src/user/user.service.ts:31",{"_index":464,"title":{},"body":{"injectables/UserService.html":{}}}],["src/user/user.service.ts:35",{"_index":466,"title":{},"body":{"injectables/UserService.html":{}}}],["start",{"_index":546,"title":{},"body":{"index.html":{}}}],["start:dev",{"_index":549,"title":{},"body":{"index.html":{}}}],["start:prodtest",{"_index":551,"title":{},"body":{"index.html":{}}}],["started",{"_index":526,"title":{"index.html":{}},"body":{}}],["starter",{"_index":538,"title":{},"body":{"index.html":{}}}],["statements",{"_index":483,"title":{},"body":{"coverage.html":{}}}],["static",{"_index":507,"title":{},"body":{"dependencies.html":{}}}],["statuscode",{"_index":318,"title":{},"body":{"injectables/JwtAuthGuard.html":{}}}],["stay",{"_index":574,"title":{},"body":{"index.html":{}}}],["storage",{"_index":367,"title":{},"body":{"injectables/JwtConfigService.html":{},"injectables/MongooseConfigService.html":{},"injectables/MulterConfigService.html":{}}}],["str",{"_index":353,"title":{},"body":{"injectables/JwtConfigService.html":{},"injectables/MongooseConfigService.html":{},"injectables/MulterConfigService.html":{},"miscellaneous/variables.html":{}}}],["strategy",{"_index":389,"title":{},"body":{"injectables/JwtStrategy.html":{},"injectables/LocalStrategy.html":{}}}],["string",{"_index":22,"title":{},"body":{"controllers/AppController.html":{},"injectables/AppService.html":{},"injectables/AuthService.html":{},"interfaces/Author.html":{},"interfaces/Course.html":{},"interfaces/CreateMaterialDto.html":{},"classes/Feed.html":{},"injectables/JwtConfigService.html":{},"interfaces/Learner.html":{},"injectables/LocalStrategy.html":{},"classes/Material.html":{},"injectables/MongooseConfigService.html":{},"injectables/MulterConfigService.html":{},"classes/Student.html":{},"interfaces/Todo.html":{},"classes/Tutor.html":{},"interfaces/User.html":{},"injectables/UserService.html":{},"miscellaneous/variables.html":{}}}],["student",{"_index":420,"title":{"classes/Student.html":{}},"body":{"classes/Student.html":{},"modules/UserModule.html":{},"coverage.html":{}}}],["studentdocument",{"_index":428,"title":{},"body":{"classes/Student.html":{},"miscellaneous/typealiases.html":{}}}],["studentnumber",{"_index":203,"title":{},"body":{"interfaces/Author.html":{},"interfaces/Learner.html":{},"classes/Student.html":{},"interfaces/User.html":{}}}],["studentschema",{"_index":429,"title":{},"body":{"classes/Student.html":{},"modules/UserModule.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["sub",{"_index":184,"title":{},"body":{"injectables/AuthService.html":{}}}],["super",{"_index":392,"title":{},"body":{"injectables/JwtStrategy.html":{},"injectables/LocalStrategy.html":{}}}],["super.canactivate(context",{"_index":315,"title":{},"body":{"injectables/JwtAuthGuard.html":{}}}],["support",{"_index":565,"title":{},"body":{"index.html":{},"modules.html":{}}}],["surname",{"_index":198,"title":{},"body":{"interfaces/Author.html":{},"interfaces/Learner.html":{},"classes/Student.html":{},"classes/Tutor.html":{},"interfaces/User.html":{}}}],["svg",{"_index":584,"title":{},"body":{"modules.html":{}}}],["table",{"_index":498,"title":{},"body":{"coverage.html":{}}}],["tablesort(document.getelementbyid('coverage",{"_index":497,"title":{},"body":{"coverage.html":{}}}],["test",{"_index":554,"title":{},"body":{"index.html":{}}}],["test:covsupport",{"_index":557,"title":{},"body":{"index.html":{}}}],["test:e2e",{"_index":556,"title":{},"body":{"index.html":{}}}],["tests",{"_index":553,"title":{},"body":{"index.html":{}}}],["thanks",{"_index":563,"title":{},"body":{"index.html":{}}}],["this.appservice.gettodos",{"_index":94,"title":{},"body":{"controllers/AppController.html":{}}}],["this.authservice.login(req.user",{"_index":83,"title":{},"body":{"controllers/AppController.html":{}}}],["this.authservice.validateuser(username",{"_index":409,"title":{},"body":{"injectables/LocalStrategy.html":{}}}],["this.configservice.get('database",{"_index":363,"title":{},"body":{"injectables/JwtConfigService.html":{},"injectables/MongooseConfigService.html":{},"injectables/MulterConfigService.html":{}}}],["this.configservice.get('jwtsecret",{"_index":378,"title":{},"body":{"injectables/JwtConfigService.html":{},"injectables/MongooseConfigService.html":{},"injectables/MulterConfigService.html":{}}}],["this.configservice.get('upload_path",{"_index":369,"title":{},"body":{"injectables/JwtConfigService.html":{},"injectables/MongooseConfigService.html":{},"injectables/MulterConfigService.html":{}}}],["this.feedmodel.find",{"_index":294,"title":{},"body":{"injectables/FeedService.html":{}}}],["this.feedservice.fetchfeeds",{"_index":268,"title":{},"body":{"controllers/FeedController.html":{}}}],["this.httpservice.get('https://jsonplaceholder.typicode.com/todos",{"_index":145,"title":{},"body":{"injectables/AppService.html":{},"interfaces/Todo.html":{}}}],["this.jwtservice.sign(payload",{"_index":187,"title":{},"body":{"injectables/AuthService.html":{}}}],["this.materialmodel(body",{"_index":479,"title":{},"body":{"injectables/UserService.html":{}}}],["this.users.find((user",{"_index":477,"title":{},"body":{"injectables/UserService.html":{}}}],["this.userservice.findone(username",{"_index":178,"title":{},"body":{"injectables/AuthService.html":{}}}],["this.userservice.uploadfile",{"_index":90,"title":{},"body":{"controllers/AppController.html":{}}}],["throw",{"_index":316,"title":{},"body":{"injectables/JwtAuthGuard.html":{},"injectables/LocalStrategy.html":{}}}],["thumbnail",{"_index":213,"title":{},"body":{"interfaces/Course.html":{},"classes/Feed.html":{}}}],["title",{"_index":141,"title":{},"body":{"injectables/AppService.html":{},"interfaces/Author.html":{},"interfaces/Course.html":{},"classes/Feed.html":{},"interfaces/Learner.html":{},"interfaces/Todo.html":{},"classes/Tutor.html":{},"interfaces/User.html":{}}}],["todo",{"_index":137,"title":{"interfaces/Todo.html":{}},"body":{"injectables/AppService.html":{},"interfaces/Todo.html":{},"coverage.html":{}}}],["todos",{"_index":95,"title":{},"body":{"controllers/AppController.html":{}}}],["todos.data",{"_index":99,"title":{},"body":{"controllers/AppController.html":{}}}],["touch",{"_index":575,"title":{},"body":{"index.html":{}}}],["true",{"_index":271,"title":{},"body":{"controllers/FeedController.html":{},"miscellaneous/variables.html":{}}}],["tutor",{"_index":431,"title":{"classes/Tutor.html":{}},"body":{"classes/Tutor.html":{},"modules/UserModule.html":{},"coverage.html":{}}}],["tutordocument",{"_index":439,"title":{},"body":{"classes/Tutor.html":{},"miscellaneous/typealiases.html":{}}}],["tutorschema",{"_index":442,"title":{},"body":{"classes/Tutor.html":{},"modules/UserModule.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["twitter",{"_index":580,"title":{},"body":{"index.html":{}}}],["type",{"_index":40,"title":{},"body":{"controllers/AppController.html":{},"injectables/AppService.html":{},"injectables/AuthService.html":{},"interfaces/Author.html":{},"interfaces/Course.html":{},"interfaces/CreateMaterialDto.html":{},"classes/Feed.html":{},"injectables/FeedService.html":{},"interfaces/IFeedController.html":{},"interfaces/IFeedService.html":{},"injectables/JwtAuthGuard.html":{},"injectables/JwtConfigService.html":{},"injectables/JwtStrategy.html":{},"interfaces/Learner.html":{},"injectables/LocalStrategy.html":{},"classes/Material.html":{},"injectables/MongooseConfigService.html":{},"injectables/MulterConfigService.html":{},"classes/Student.html":{},"interfaces/Todo.html":{},"classes/Tutor.html":{},"interfaces/User.html":{},"injectables/UserService.html":{},"coverage.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["typealiases",{"_index":591,"title":{"miscellaneous/typealiases.html":{}},"body":{}}],["typescript",{"_index":537,"title":{},"body":{"index.html":{}}}],["unauthorized",{"_index":320,"title":{},"body":{"injectables/JwtAuthGuard.html":{}}}],["unauthorizedexception",{"_index":312,"title":{},"body":{"injectables/JwtAuthGuard.html":{},"injectables/LocalStrategy.html":{}}}],["undefined",{"_index":414,"title":{},"body":{"classes/Material.html":{},"classes/Tutor.html":{}}}],["unit",{"_index":552,"title":{},"body":{"index.html":{}}}],["unknown",{"_index":614,"title":{},"body":{"miscellaneous/variables.html":{}}}],["upload",{"_index":14,"title":{},"body":{"controllers/AppController.html":{},"injectables/JwtConfigService.html":{},"injectables/MongooseConfigService.html":{},"injectables/MulterConfigService.html":{}}}],["upload(@body",{"_index":86,"title":{},"body":{"controllers/AppController.html":{}}}],["upload(body",{"_index":36,"title":{},"body":{"controllers/AppController.html":{}}}],["upload_path",{"_index":349,"title":{},"body":{"injectables/JwtConfigService.html":{},"injectables/MongooseConfigService.html":{},"injectables/MulterConfigService.html":{}}}],["uploadedfile",{"_index":46,"title":{},"body":{"controllers/AppController.html":{}}}],["uploadfile",{"_index":459,"title":{},"body":{"injectables/UserService.html":{}}}],["uploadfile(body",{"_index":465,"title":{},"body":{"injectables/UserService.html":{}}}],["uri",{"_index":362,"title":{},"body":{"injectables/JwtConfigService.html":{},"injectables/MongooseConfigService.html":{},"injectables/MulterConfigService.html":{}}}],["useclass",{"_index":165,"title":{},"body":{"modules/AuthModule.html":{},"miscellaneous/variables.html":{}}}],["useguards",{"_index":47,"title":{},"body":{"controllers/AppController.html":{}}}],["useguards(jwtauthguard",{"_index":91,"title":{},"body":{"controllers/AppController.html":{}}}],["useguards(jwtauthguard)@get('profile",{"_index":24,"title":{},"body":{"controllers/AppController.html":{}}}],["useguards(localauthguard",{"_index":80,"title":{},"body":{"controllers/AppController.html":{}}}],["useguards(localauthguard)@post('auth/login",{"_index":33,"title":{},"body":{"controllers/AppController.html":{}}}],["useinterceptors",{"_index":48,"title":{},"body":{"controllers/AppController.html":{}}}],["useinterceptors(fileinterceptor('file",{"_index":85,"title":{},"body":{"controllers/AppController.html":{}}}],["user",{"_index":29,"title":{"interfaces/User.html":{}},"body":{"controllers/AppController.html":{},"injectables/AuthService.html":{},"interfaces/Author.html":{},"injectables/JwtAuthGuard.html":{},"interfaces/Learner.html":{},"injectables/LocalStrategy.html":{},"interfaces/User.html":{},"injectables/UserService.html":{},"coverage.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["user.controller",{"_index":453,"title":{},"body":{"modules/UserModule.html":{}}}],["user.password",{"_index":179,"title":{},"body":{"injectables/AuthService.html":{}}}],["user.service",{"_index":454,"title":{},"body":{"modules/UserModule.html":{}}}],["user.userid",{"_index":185,"title":{},"body":{"injectables/AuthService.html":{}}}],["user.username",{"_index":183,"title":{},"body":{"injectables/AuthService.html":{},"injectables/UserService.html":{}}}],["user/interfaces/user.interface",{"_index":214,"title":{},"body":{"interfaces/Course.html":{},"interfaces/CreateMaterialDto.html":{},"classes/Material.html":{},"classes/Student.html":{},"classes/Tutor.html":{}}}],["user/schemas/files.schema",{"_index":68,"title":{},"body":{"controllers/AppController.html":{}}}],["user/user.module",{"_index":160,"title":{},"body":{"modules/AuthModule.html":{}}}],["user/user.service",{"_index":66,"title":{},"body":{"controllers/AppController.html":{},"injectables/AuthService.html":{},"injectables/LocalStrategy.html":{}}}],["usercontroller",{"_index":444,"title":{"controllers/UserController.html":{}},"body":{"controllers/UserController.html":{},"modules/UserModule.html":{},"coverage.html":{}}}],["userid",{"_index":138,"title":{},"body":{"injectables/AppService.html":{},"injectables/JwtStrategy.html":{},"interfaces/Todo.html":{},"injectables/UserService.html":{}}}],["usermodule",{"_index":116,"title":{"modules/UserModule.html":{}},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/UserModule.html":{},"modules.html":{},"overview.html":{},"miscellaneous/variables.html":{}}}],["username",{"_index":176,"title":{},"body":{"injectables/AuthService.html":{},"injectables/JwtStrategy.html":{},"injectables/LocalStrategy.html":{},"injectables/UserService.html":{}}}],["usernamefield",{"_index":408,"title":{},"body":{"injectables/LocalStrategy.html":{}}}],["users",{"_index":457,"title":{},"body":{"injectables/UserService.html":{}}}],["userservice",{"_index":65,"title":{"injectables/UserService.html":{}},"body":{"controllers/AppController.html":{},"injectables/AuthService.html":{},"modules/UserModule.html":{},"injectables/UserService.html":{},"coverage.html":{},"overview.html":{}}}],["validate",{"_index":383,"title":{},"body":{"injectables/JwtStrategy.html":{},"injectables/LocalStrategy.html":{}}}],["validate(payload",{"_index":385,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["validate(username",{"_index":405,"title":{},"body":{"injectables/LocalStrategy.html":{}}}],["validateuser",{"_index":167,"title":{},"body":{"injectables/AuthService.html":{}}}],["validateuser(username",{"_index":173,"title":{},"body":{"injectables/AuthService.html":{}}}],["value",{"_index":467,"title":{},"body":{"injectables/UserService.html":{},"miscellaneous/variables.html":{}}}],["variable",{"_index":489,"title":{},"body":{"coverage.html":{}}}],["variables",{"_index":599,"title":{"miscellaneous/variables.html":{}},"body":{"miscellaneous/variables.html":{}}}],["watch",{"_index":547,"title":{},"body":{"index.html":{}}}],["website",{"_index":578,"title":{},"body":{"index.html":{}}}],["world",{"_index":79,"title":{},"body":{"controllers/AppController.html":{},"injectables/AppService.html":{},"interfaces/Todo.html":{}}}],["you'd",{"_index":568,"title":{},"body":{"index.html":{}}}],["zoom",{"_index":117,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/FeedModule.html":{},"modules/UserModule.html":{},"overview.html":{}}}]],"pipeline":["stemmer"]},
    "store": {"controllers/AppController.html":{"url":"controllers/AppController.html","title":"controller - AppController","body":"\n                   \n\n\n\n\n\n\n  Controllers\n  AppController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app.controller.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                getHello\n                            \n                            \n                                getProfile\n                            \n                            \n                                    Async\n                                getTodos\n                            \n                            \n                                    Async\n                                login\n                            \n                            \n                                    Async\n                                upload\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            getHello\n                        \n                        \n                    \n                \n            \n            \n                \ngetHello()\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get()@Render('index')\n                \n            \n\n            \n                \n                    Defined in src/app.controller.ts:34\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :     { message: string; }\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            getProfile\n                        \n                        \n                    \n                \n            \n            \n                \ngetProfile(user)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @UseGuards(JwtAuthGuard)@Get('profile')\n                \n            \n\n            \n                \n                    Defined in src/app.controller.ts:58\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    user\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            getTodos\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    getTodos()\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get('todos')\n                \n            \n\n            \n                \n                    Defined in src/app.controller.ts:63\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :     {}\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            login\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    login(req)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @UseGuards(LocalAuthGuard)@Post('auth/login')\n                \n            \n\n            \n                \n                    Defined in src/app.controller.ts:40\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    req\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     {}\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            upload\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    upload(body, file: Express.Multer.File)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Post('upload')@UseInterceptors(undefined)\n                \n            \n\n            \n                \n                    Defined in src/app.controller.ts:46\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    body\n                                    \n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    file\n                                    \n                                            Express.Multer.File\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     {}\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n\n\n    \n        import {\n  Body,\n  Controller,\n  Get,\n  Post,\n  Render,\n  Request,\n  UploadedFile,\n  UseGuards,\n  UseInterceptors,\n} from '@nestjs/common';\nimport { AuthGuard } from '@nestjs/passport';\nimport { FileInterceptor } from '@nestjs/platform-express';\nimport { AuthService } from 'auth/auth.service';\nimport { JwtAuthGuard } from 'auth/jwt-auth.guard';\nimport { LocalAuthGuard } from 'auth/local-auth.guard';\nimport { User } from 'decotators/user.decorator';\nimport { AppService } from './app.service';\nimport { Express } from 'express';\nimport { UserService } from 'user/user.service';\nimport { CreateMaterialDto } from 'user/schemas/files.schema';\nimport { diskStorage } from 'multer';\n\n@Controller()\nexport class AppController {\n  constructor(\n    private readonly appService: AppService,\n    private readonly authService: AuthService,\n    private readonly userService: UserService,\n  ) {}\n\n  @Get()\n  @Render('index')\n  getHello() {\n    return { message: 'Hello world!' };\n  }\n\n  @UseGuards(LocalAuthGuard)\n  @Post('auth/login')\n  async login(@Request() req) {\n    return this.authService.login(req.user);\n  }\n\n  @Post('upload')\n  @UseInterceptors(FileInterceptor('file'))\n  async upload(@Body() body, @UploadedFile() file: Express.Multer.File) {\n    console.log(file, body);\n    // const body: CreateMaterialDto = {\n\n    // }\n    // const result = this.userService.uploadFile()\n\n    return 'upload file';\n  }\n\n  @UseGuards(JwtAuthGuard)\n  @Get('profile')\n  getProfile(@User() user) {\n    return user;\n  }\n\n  @Get('todos')\n  async getTodos() {\n    const result = this.appService.getTodos();\n    const todos = await result.toPromise();\n    return { data: todos.data };\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/AppModule.html":{"url":"modules/AppModule.html","title":"module - AppModule","body":"\n                   \n\n\n\n\n    Modules\n    AppModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_AppModule\n\n\n\ncluster_AppModule_providers\n\n\n\ncluster_AppModule_imports\n\n\n\n\nAuthModule\n\nAuthModule\n\n\n\nAppModule\n\nAppModule\n\nAppModule -->\n\nAuthModule->AppModule\n\n\n\n\n\nFeedModule\n\nFeedModule\n\nAppModule -->\n\nFeedModule->AppModule\n\n\n\n\n\nUserModule\n\nUserModule\n\nAppModule -->\n\nUserModule->AppModule\n\n\n\n\n\nAppService\n\nAppService\n\nAppModule -->\n\nAppService->AppModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app.module.ts\n        \n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            AppService\n                        \n                    \n                \n                \n                    Controllers\n                    \n                        \n                            AppController\n                        \n                    \n                \n                \n                    Imports\n                    \n                        \n                            AuthModule\n                        \n                        \n                            FeedModule\n                        \n                        \n                            UserModule\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Module } from '@nestjs/common';\nimport { AppController } from './app.controller';\nimport { AppService } from './app.service';\nimport modules from './config/modules';\n\n@Module({\n  imports: [...modules],\n  controllers: [AppController],\n  providers: [AppService],\n})\nexport class AppModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/AppService.html":{"url":"injectables/AppService.html","title":"injectable - AppService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  AppService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app.service.ts\n        \n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                getHello\n                            \n                            \n                                getTodos\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(httpService: HttpService)\n                    \n                \n                        \n                            \n                                Defined in src/app.service.ts:13\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        httpService\n                                                  \n                                                        \n                                                                    HttpService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            getHello\n                        \n                        \n                    \n                \n            \n            \n                \ngetHello()\n                \n            \n\n\n            \n                \n                    Defined in src/app.service.ts:15\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         string\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            getTodos\n                        \n                        \n                    \n                \n            \n            \n                \ngetTodos()\n                \n            \n\n\n            \n                \n                    Defined in src/app.service.ts:19\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         Observable>\n\n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { HttpService, Injectable } from '@nestjs/common';\nimport { Observable } from 'rxjs';\nimport { AxiosResponse } from 'axios';\n\nexport interface Todo {\n  UserId: number;\n  Id: number;\n  Title: string;\n  Completed: boolean;\n}\n\n@Injectable()\nexport class AppService {\n  constructor(private httpService: HttpService) {}\n  getHello(): string {\n    return 'Hello World!';\n  }\n\n  getTodos(): Observable> {\n    return this.httpService.get('https://jsonplaceholder.typicode.com/todos');\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/AuthModule.html":{"url":"modules/AuthModule.html","title":"module - AuthModule","body":"\n                   \n\n\n\n\n    Modules\n    AuthModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_AuthModule\n\n\n\ncluster_AuthModule_imports\n\n\n\ncluster_AuthModule_exports\n\n\n\ncluster_AuthModule_providers\n\n\n\n\nUserModule\n\nUserModule\n\n\n\nAuthModule\n\nAuthModule\n\nAuthModule -->\n\nUserModule->AuthModule\n\n\n\n\n\nAuthService \n\nAuthService \n\nAuthService  -->\n\nAuthModule->AuthService \n\n\n\n\n\nAuthService\n\nAuthService\n\nAuthModule -->\n\nAuthService->AuthModule\n\n\n\n\n\nJwtStrategy\n\nJwtStrategy\n\nAuthModule -->\n\nJwtStrategy->AuthModule\n\n\n\n\n\nLocalStrategy\n\nLocalStrategy\n\nAuthModule -->\n\nLocalStrategy->AuthModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/auth/auth.module.ts\n        \n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            AuthService\n                        \n                        \n                            JwtStrategy\n                        \n                        \n                            LocalStrategy\n                        \n                    \n                \n                \n                    Imports\n                    \n                        \n                            UserModule\n                        \n                    \n                \n                \n                    Exports\n                    \n                        \n                            AuthService\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Module } from '@nestjs/common';\nimport { ConfigModule } from '@nestjs/config';\nimport { JwtModule } from '@nestjs/jwt';\nimport { PassportModule } from '@nestjs/passport';\nimport { JwtConfigService } from 'config/configuration';\nimport { UserModule } from 'user/user.module';\nimport { AuthService } from './auth.service';\nimport { JwtStrategy } from './jwt.strategy';\nimport { LocalStrategy } from './local.strategy';\n\n@Module({\n  imports: [\n    UserModule,\n    PassportModule,\n    ConfigModule,\n    JwtModule.registerAsync({\n      imports: [ConfigModule],\n      useClass: JwtConfigService,\n    }),\n  ],\n  controllers: [],\n  providers: [AuthService, LocalStrategy, JwtStrategy],\n  exports: [AuthService, JwtModule],\n})\nexport class AuthModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/AuthService.html":{"url":"injectables/AuthService.html","title":"injectable - AuthService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  AuthService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/auth/auth.service.ts\n        \n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                login\n                            \n                            \n                                    Async\n                                validateUser\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(userService: UserService, jwtService: JwtService)\n                    \n                \n                        \n                            \n                                Defined in src/auth/auth.service.ts:6\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        userService\n                                                  \n                                                        \n                                                                        UserService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        jwtService\n                                                  \n                                                        \n                                                                    JwtService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            login\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    login(user: User)\n                \n            \n\n\n            \n                \n                    Defined in src/auth/auth.service.ts:21\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    user\n                                    \n                                                User\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     {}\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            validateUser\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    validateUser(username: string, pass: string)\n                \n            \n\n\n            \n                \n                    Defined in src/auth/auth.service.ts:12\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    username\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    pass\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@nestjs/common';\nimport { JwtService } from '@nestjs/jwt';\nimport { User, UserService } from 'user/user.service';\n\n@Injectable()\nexport class AuthService {\n  constructor(\n    private userService: UserService,\n    private jwtService: JwtService,\n  ) {}\n\n  async validateUser(username: string, pass: string): Promise {\n    const user = await this.userService.findOne(username);\n    if (user && user.password === pass) {\n      const { password, ...result } = user;\n      return result;\n    }\n    return null;\n  }\n\n  async login(user: User) {\n    const payload = { username: user.username, sub: user.userId };\n    return {\n      access_token: this.jwtService.sign(payload),\n    };\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/Author.html":{"url":"interfaces/Author.html","title":"interface - Author","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  Author\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/user/interfaces/user.interface.ts\n        \n\n\n            \n                Extends\n            \n            \n                        User\n            \n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        coursesCreated\n                                \n                                \n                                        title\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        coursesCreated\n                                    \n                                \n                                \n                                    \n                                        coursesCreated:         Array\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         Array\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        title\n                                    \n                                \n                                \n                                    \n                                        title:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { Course } from 'feed/interfaces/feed.interface';\n\nexport interface User {\n  _id?: string;\n  surname: string;\n  firstname: string;\n  othernames: string;\n  email: string;\n}\n\nexport interface Author extends User {\n  title: string;\n  coursesCreated: Array;\n}\n\nexport interface Learner extends User {\n  studentNumber: string;\n  learningStyle: string;\n}\n\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/Course.html":{"url":"interfaces/Course.html","title":"interface - Course","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  Course\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/feed/interfaces/feed.interface.ts\n        \n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        createdAt\n                                \n                                \n                                        createdBy\n                                \n                                \n                                        description\n                                \n                                \n                                        files\n                                \n                                \n                                        id\n                                \n                                \n                                        intro\n                                \n                                \n                                        learningStyle\n                                \n                                \n                                        objectives\n                                \n                                \n                                        requirements\n                                \n                                \n                                        thumbnail\n                                \n                                \n                                        title\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        createdAt\n                                    \n                                \n                                \n                                    \n                                        createdAt:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        createdBy\n                                    \n                                \n                                \n                                    \n                                        createdBy:         Author | string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         Author | string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        description\n                                    \n                                \n                                \n                                    \n                                        description:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        files\n                                    \n                                \n                                \n                                    \n                                        files:         any\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         any\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        id\n                                    \n                                \n                                \n                                    \n                                        id:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        intro\n                                    \n                                \n                                \n                                    \n                                        intro:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        learningStyle\n                                    \n                                \n                                \n                                    \n                                        learningStyle:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        objectives\n                                    \n                                \n                                \n                                    \n                                        objectives:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        requirements\n                                    \n                                \n                                \n                                    \n                                        requirements:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        thumbnail\n                                    \n                                \n                                \n                                    \n                                        thumbnail:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        title\n                                    \n                                \n                                \n                                    \n                                        title:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { Author } from 'user/interfaces/user.interface';\n\nexport interface Feed {\n  title: string;\n  image: string;\n  author: Author;\n  learningStyle: string;\n}\n\nexport interface Course {\n  id: string;\n  title: string;\n  thumbnail: string;\n  intro: string;\n  description: string;\n  learningStyle: string;\n  createdBy: Author | string;\n  createdAt: string;\n  objectives: string;\n  requirements: string;\n  files: any;\n}\n\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/CreateMaterialDto.html":{"url":"interfaces/CreateMaterialDto.html","title":"interface - CreateMaterialDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  CreateMaterialDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/user/schemas/files.schema.ts\n        \n\n\n            \n                Extends\n            \n            \n                        Material\n            \n\n\n\n\n    \n\n\n    \n        import { Prop, Schema, SchemaFactory } from '@nestjs/mongoose';\nimport { Document } from 'mongoose';\nimport { Learner } from 'user/interfaces/user.interface';\n\nexport type MaterialDocument = Material & Document;\n\nexport interface CreateMaterialDto extends Material {}\n\n@Schema()\nexport class Material {\n  @Prop({ type: 'Buffer' })\n  data: Buffer;\n\n  @Prop()\n  filename: string;\n\n  @Prop()\n  contentType: string;\n\n  @Prop({ type: Date, default: Date.now() })\n  othernames: Date;\n}\n\nexport const MaterialSchema = SchemaFactory.createForClass(Material);\n\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/Feed.html":{"url":"classes/Feed.html","title":"class - Feed","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  Feed\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/feed/schemas/feed.schema.ts\n        \n\n\n\n            \n                Implements\n            \n            \n                            Course\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                createdAt\n                            \n                            \n                                createdBy\n                            \n                            \n                                description\n                            \n                            \n                                files\n                            \n                            \n                                id\n                            \n                            \n                                intro\n                            \n                            \n                                learningStyle\n                            \n                            \n                                objectives\n                            \n                            \n                                requirements\n                            \n                            \n                                thumbnail\n                            \n                            \n                                title\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            createdAt\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Prop()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/feed/schemas/feed.schema.ts:31\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            createdBy\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Prop()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/feed/schemas/feed.schema.ts:28\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            description\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Prop()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/feed/schemas/feed.schema.ts:22\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            files\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Prop()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/feed/schemas/feed.schema.ts:40\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            id\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Prop()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/feed/schemas/feed.schema.ts:10\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            intro\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Prop()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/feed/schemas/feed.schema.ts:19\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            learningStyle\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Prop()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/feed/schemas/feed.schema.ts:25\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            objectives\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Prop()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/feed/schemas/feed.schema.ts:34\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            requirements\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Prop()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/feed/schemas/feed.schema.ts:37\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            thumbnail\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Prop()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/feed/schemas/feed.schema.ts:16\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            title\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Prop()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/feed/schemas/feed.schema.ts:13\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { Prop, Schema, SchemaFactory } from '@nestjs/mongoose';\nimport { Course } from 'feed/interfaces/feed.interface';\nimport { Document } from 'mongoose';\n\nexport type FeedDocument = Feed & Document;\n\n@Schema()\nexport class Feed implements Course {\n  @Prop()\n  id: string;\n\n  @Prop()\n  title: string;\n\n  @Prop()\n  thumbnail: string;\n\n  @Prop()\n  intro: string;\n\n  @Prop()\n  description: string;\n\n  @Prop()\n  learningStyle: string;\n\n  @Prop()\n  createdBy: string;\n\n  @Prop()\n  createdAt: string;\n\n  @Prop()\n  objectives: string;\n\n  @Prop()\n  requirements: string;\n\n  @Prop()\n  files: string;\n}\n\nexport const FeedSchema = SchemaFactory.createForClass(Feed);\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"controllers/FeedController.html":{"url":"controllers/FeedController.html","title":"controller - FeedController","body":"\n                   \n\n\n\n\n\n\n  Controllers\n  FeedController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/feed/feed.controller.ts\n        \n\n            \n                Prefix\n            \n            \n                /feeds\n            \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                deleteFeed\n                            \n                            \n                                    Async\n                                getFeed\n                            \n                            \n                                    Async\n                                getFeeds\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            deleteFeed\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    deleteFeed()\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Delete()\n                \n            \n\n            \n                \n                    Defined in src/feed/feed.controller.ts:21\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :     {}\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            getFeed\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    getFeed()\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get()\n                \n            \n\n            \n                \n                    Defined in src/feed/feed.controller.ts:16\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :     {}\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            getFeeds\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    getFeeds()\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get()\n                \n            \n\n            \n                \n                    Defined in src/feed/feed.controller.ts:10\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :     Promise\n\n                    \n                \n            \n        \n    \n    \n\n\n    \n        import { Controller, Delete, Get } from '@nestjs/common';\nimport { FeedService } from './feed.service';\nimport { IFeedController } from './interfaces/feed-controller.interface';\n\n@Controller('/feeds')\nexport class FeedController implements IFeedController {\n  constructor(private readonly feedService: FeedService) {}\n\n  @Get()\n  async getFeeds(): Promise {\n    const feeds = await this.feedService.fetchFeeds();\n    return feeds;\n  }\n\n  @Get()\n  async getFeed() {\n    return 'get single feed route';\n  }\n\n  @Delete()\n  async deleteFeed() {\n    return true;\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/FeedModule.html":{"url":"modules/FeedModule.html","title":"module - FeedModule","body":"\n                   \n\n\n\n\n    Modules\n    FeedModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_FeedModule\n\n\n\ncluster_FeedModule_providers\n\n\n\n\nFeedService\n\nFeedService\n\n\n\nFeedModule\n\nFeedModule\n\nFeedModule -->\n\nFeedService->FeedModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/feed/feed.module.ts\n        \n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            FeedService\n                        \n                    \n                \n                \n                    Controllers\n                    \n                        \n                            FeedController\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Module } from '@nestjs/common';\nimport { ModelDefinition, MongooseModule } from '@nestjs/mongoose';\nimport { FeedController } from './feed.controller';\nimport { FeedService } from './feed.service';\nimport { Feed, FeedSchema } from './schemas/feed.schema';\n\nconst models: ModelDefinition[] = [\n  {\n    name: Feed.name,\n    schema: FeedSchema,\n  },\n];\n\n@Module({\n  imports: [MongooseModule.forFeature(models)],\n  controllers: [FeedController],\n  providers: [FeedService],\n  exports: [],\n})\nexport class FeedModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/FeedService.html":{"url":"injectables/FeedService.html","title":"injectable - FeedService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  FeedService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/feed/feed.service.ts\n        \n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                fetchFeeds\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(feedModel: Model)\n                    \n                \n                        \n                            \n                                Defined in src/feed/feed.service.ts:8\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        feedModel\n                                                  \n                                                        \n                                                                        Model\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            fetchFeeds\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    fetchFeeds()\n                \n            \n\n\n            \n                \n                    Defined in src/feed/feed.service.ts:11\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :     {}\n\n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@nestjs/common';\nimport { InjectModel } from '@nestjs/mongoose';\nimport { Model } from 'mongoose';\nimport { IFeedService } from './interfaces/feed-service.interface';\nimport { Feed, FeedDocument } from './schemas/feed.schema';\n\n@Injectable()\nexport class FeedService implements Partial {\n  constructor(@InjectModel(Feed.name) private feedModel: Model) {}\n\n  async fetchFeeds() {\n    return this.feedModel.find();\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/IFeedController.html":{"url":"interfaces/IFeedController.html","title":"interface - IFeedController","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  IFeedController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/feed/interfaces/feed-controller.interface.ts\n        \n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        deleteFeed\n                                \n                                \n                                        getFeed\n                                \n                                \n                                        getFeeds\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        deleteFeed\n                                    \n                                \n                                \n                                    \n                                        deleteFeed:         function\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         function\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        getFeed\n                                    \n                                \n                                \n                                    \n                                        getFeed:         function\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         function\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        getFeeds\n                                    \n                                \n                                \n                                    \n                                        getFeeds:         function\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         function\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        export interface IFeedController {\n  getFeeds: () => Promise;\n  getFeed: () => Promise;\n  deleteFeed: () => Promise;\n}\n\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/IFeedService.html":{"url":"interfaces/IFeedService.html","title":"interface - IFeedService","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  IFeedService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/feed/interfaces/feed-service.interface.ts\n        \n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        deleteFeed\n                                \n                                \n                                        fetchFeed\n                                \n                                \n                                        fetchFeeds\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        deleteFeed\n                                    \n                                \n                                \n                                    \n                                        deleteFeed:         function\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         function\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        fetchFeed\n                                    \n                                \n                                \n                                    \n                                        fetchFeed:         function\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         function\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        fetchFeeds\n                                    \n                                \n                                \n                                    \n                                        fetchFeeds:         function\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         function\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        export interface IFeedService {\n  fetchFeeds: () => Promise;\n  fetchFeed: () => Promise;\n  deleteFeed: () => Promise;\n}\n\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/JwtAuthGuard.html":{"url":"injectables/JwtAuthGuard.html","title":"injectable - JwtAuthGuard","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  JwtAuthGuard\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/auth/jwt-auth.guard.ts\n        \n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                canActivate\n                            \n                            \n                                handleRequest\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            canActivate\n                        \n                        \n                    \n                \n            \n            \n                \ncanActivate(context: ExecutionContext)\n                \n            \n\n\n            \n                \n                    Defined in src/auth/jwt-auth.guard.ts:11\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    context\n                                    \n                                            ExecutionContext\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            handleRequest\n                        \n                        \n                    \n                \n            \n            \n                \nhandleRequest(err, user, info)\n                \n            \n\n\n            \n                \n                    Defined in src/auth/jwt-auth.guard.ts:16\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    err\n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    user\n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    info\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import {\n  ExecutionContext,\n  HttpStatus,\n  Injectable,\n  UnauthorizedException,\n} from '@nestjs/common';\nimport { AuthGuard } from '@nestjs/passport';\n\n@Injectable()\nexport class JwtAuthGuard extends AuthGuard('jwt') {\n  canActivate(context: ExecutionContext) {\n    // console.log(context);\n    return super.canActivate(context);\n  }\n\n  handleRequest(err, user, info) {\n    if (err || !user) {\n      throw (\n        err ||\n        new UnauthorizedException(\n          {\n            statusCode: HttpStatus.UNAUTHORIZED,\n            message: 'Unauthorized',\n            info: info.message,\n          },\n          'An Error occured',\n        )\n      );\n    }\n    return user;\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/JwtConfigService.html":{"url":"injectables/JwtConfigService.html","title":"injectable - JwtConfigService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  JwtConfigService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/config/configuration.ts\n        \n\n\n\n            \n                Example\n            \n            \n            \n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                createJwtOptions\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(configService: ConfigService)\n                    \n                \n                        \n                            \n                                Defined in src/config/configuration.ts:70\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        configService\n                                                  \n                                                        \n                                                                    ConfigService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            createJwtOptions\n                        \n                        \n                    \n                \n            \n            \n                \ncreateJwtOptions()\n                \n            \n\n\n            \n                \n                    Defined in src/config/configuration.ts:72\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :     JwtModuleOptions\n\n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@nestjs/common';\nimport { ConfigService } from '@nestjs/config';\nimport {\n  MongooseModuleOptions,\n  MongooseOptionsFactory,\n} from '@nestjs/mongoose';\nimport {\n  MulterModuleOptions,\n  MulterOptionsFactory,\n} from '@nestjs/platform-express';\nimport { diskStorage } from 'multer';\nimport { extname } from 'path';\nimport * as _ from 'lodash';\nimport { JwtModuleOptions, JwtOptionsFactory } from '@nestjs/jwt';\n\n// config contants\nexport default () => ({\n  port: parseInt(process.env.PORT, 10) || 5000,\n  database: process.env.MONGODB_URI,\n  upload_path: './public/upload',\n  jwtSecret: process.env.JWTSECRET,\n});\n\n// get filename of file\nconst filename = (str: string) => _.split(str, '.')[0];\n\n/**\n * @class MongooseConfigService\n * @description Mongoose configuration service - Mongodb setup\n */\n@Injectable()\nexport class MongooseConfigService implements MongooseOptionsFactory {\n  constructor(private configService: ConfigService) {}\n  createMongooseOptions(): MongooseModuleOptions {\n    return {\n      uri: this.configService.get('database'),\n    };\n  }\n}\n\n/**\n * @class MulterConfigService\n * @description Multer configuration service -\n * Configuration for handling upload file\n *\n */\n@Injectable()\nexport class MulterConfigService implements MulterOptionsFactory {\n  constructor(private configService: ConfigService) {}\n  createMulterOptions(): MulterModuleOptions {\n    return {\n      storage: diskStorage({\n        destination: this.configService.get('upload_path'),\n        filename: (req, file, cb) => {\n          const name = filename(file.originalname);\n          return cb(null, `${name}${extname(file.originalname)}`);\n        },\n      }),\n    };\n  }\n}\n\n/**\n * @class JwtConfigService\n * @description Jwt configuration service -\n * Configuration for setting jwt options\n *\n */\n@Injectable()\nexport class JwtConfigService implements JwtOptionsFactory {\n  constructor(private configService: ConfigService) {}\n  createJwtOptions(): JwtModuleOptions {\n    return {\n      secret: this.configService.get('jwtSecret'),\n      signOptions: {\n        expiresIn: '60s',\n      },\n    };\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/JwtStrategy.html":{"url":"injectables/JwtStrategy.html","title":"injectable - JwtStrategy","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  JwtStrategy\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/auth/jwt.strategy.ts\n        \n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                validate\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(configService: ConfigService)\n                    \n                \n                        \n                            \n                                Defined in src/auth/jwt.strategy.ts:7\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        configService\n                                                  \n                                                        \n                                                                    ConfigService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            validate\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    validate(payload: any)\n                \n            \n\n\n            \n                \n                    Defined in src/auth/jwt.strategy.ts:16\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    payload\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     {}\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@nestjs/common';\nimport { ConfigService } from '@nestjs/config';\nimport { PassportStrategy } from '@nestjs/passport';\nimport { ExtractJwt, Strategy } from 'passport-jwt';\n\n@Injectable()\nexport class JwtStrategy extends PassportStrategy(Strategy) {\n  constructor(private configService: ConfigService) {\n    super({\n      jwtFromRequest: ExtractJwt.fromAuthHeaderAsBearerToken(),\n      ignoreExpiration: false,\n      secretOrKey: process.env.JWTSECRET,\n    });\n  }\n\n  async validate(payload: any) {\n    return { userId: payload.sub, username: payload.username };\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/Learner.html":{"url":"interfaces/Learner.html","title":"interface - Learner","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  Learner\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/user/interfaces/user.interface.ts\n        \n\n\n            \n                Extends\n            \n            \n                        User\n            \n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        learningStyle\n                                \n                                \n                                        studentNumber\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        learningStyle\n                                    \n                                \n                                \n                                    \n                                        learningStyle:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        studentNumber\n                                    \n                                \n                                \n                                    \n                                        studentNumber:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { Course } from 'feed/interfaces/feed.interface';\n\nexport interface User {\n  _id?: string;\n  surname: string;\n  firstname: string;\n  othernames: string;\n  email: string;\n}\n\nexport interface Author extends User {\n  title: string;\n  coursesCreated: Array;\n}\n\nexport interface Learner extends User {\n  studentNumber: string;\n  learningStyle: string;\n}\n\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/LocalAuthGuard.html":{"url":"injectables/LocalAuthGuard.html","title":"injectable - LocalAuthGuard","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  LocalAuthGuard\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/auth/local-auth.guard.ts\n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { Injectable } from '@nestjs/common';\nimport { AuthGuard } from '@nestjs/passport';\n\n@Injectable()\nexport class LocalAuthGuard extends AuthGuard('local') {}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/LocalStrategy.html":{"url":"injectables/LocalStrategy.html","title":"injectable - LocalStrategy","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  LocalStrategy\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/auth/local.strategy.ts\n        \n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                validate\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(authService: AuthService)\n                    \n                \n                        \n                            \n                                Defined in src/auth/local.strategy.ts:8\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        authService\n                                                  \n                                                        \n                                                                        AuthService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            validate\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    validate(username: string, password: string)\n                \n            \n\n\n            \n                \n                    Defined in src/auth/local.strategy.ts:15\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    username\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    password\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable, UnauthorizedException } from '@nestjs/common';\nimport { PassportStrategy } from '@nestjs/passport';\nimport { Strategy } from 'passport-local';\nimport { User } from 'user/user.service';\nimport { AuthService } from './auth.service';\n\n@Injectable()\nexport class LocalStrategy extends PassportStrategy(Strategy) {\n  constructor(private authService: AuthService) {\n    super({\n      usernameField: 'email',\n    });\n  }\n\n  async validate(username: string, password: string): Promise {\n    const user = await this.authService.validateUser(username, password);\n    if (!user) {\n      throw new UnauthorizedException();\n    }\n    return user;\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/Material.html":{"url":"classes/Material.html","title":"class - Material","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  Material\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/user/schemas/files.schema.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                contentType\n                            \n                            \n                                data\n                            \n                            \n                                filename\n                            \n                            \n                                othernames\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            contentType\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Prop()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/user/schemas/files.schema.ts:18\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            data\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     Buffer\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Prop({type: 'Buffer'})\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/user/schemas/files.schema.ts:12\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            filename\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Prop()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/user/schemas/files.schema.ts:15\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            othernames\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Date\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Prop({type: Date, default: undefined})\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/user/schemas/files.schema.ts:21\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { Prop, Schema, SchemaFactory } from '@nestjs/mongoose';\nimport { Document } from 'mongoose';\nimport { Learner } from 'user/interfaces/user.interface';\n\nexport type MaterialDocument = Material & Document;\n\nexport interface CreateMaterialDto extends Material {}\n\n@Schema()\nexport class Material {\n  @Prop({ type: 'Buffer' })\n  data: Buffer;\n\n  @Prop()\n  filename: string;\n\n  @Prop()\n  contentType: string;\n\n  @Prop({ type: Date, default: Date.now() })\n  othernames: Date;\n}\n\nexport const MaterialSchema = SchemaFactory.createForClass(Material);\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/MongooseConfigService.html":{"url":"injectables/MongooseConfigService.html","title":"injectable - MongooseConfigService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  MongooseConfigService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/config/configuration.ts\n        \n\n\n\n            \n                Example\n            \n            \n            \n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                createMongooseOptions\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(configService: ConfigService)\n                    \n                \n                        \n                            \n                                Defined in src/config/configuration.ts:32\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        configService\n                                                  \n                                                        \n                                                                    ConfigService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            createMongooseOptions\n                        \n                        \n                    \n                \n            \n            \n                \ncreateMongooseOptions()\n                \n            \n\n\n            \n                \n                    Defined in src/config/configuration.ts:34\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :     MongooseModuleOptions\n\n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@nestjs/common';\nimport { ConfigService } from '@nestjs/config';\nimport {\n  MongooseModuleOptions,\n  MongooseOptionsFactory,\n} from '@nestjs/mongoose';\nimport {\n  MulterModuleOptions,\n  MulterOptionsFactory,\n} from '@nestjs/platform-express';\nimport { diskStorage } from 'multer';\nimport { extname } from 'path';\nimport * as _ from 'lodash';\nimport { JwtModuleOptions, JwtOptionsFactory } from '@nestjs/jwt';\n\n// config contants\nexport default () => ({\n  port: parseInt(process.env.PORT, 10) || 5000,\n  database: process.env.MONGODB_URI,\n  upload_path: './public/upload',\n  jwtSecret: process.env.JWTSECRET,\n});\n\n// get filename of file\nconst filename = (str: string) => _.split(str, '.')[0];\n\n/**\n * @class MongooseConfigService\n * @description Mongoose configuration service - Mongodb setup\n */\n@Injectable()\nexport class MongooseConfigService implements MongooseOptionsFactory {\n  constructor(private configService: ConfigService) {}\n  createMongooseOptions(): MongooseModuleOptions {\n    return {\n      uri: this.configService.get('database'),\n    };\n  }\n}\n\n/**\n * @class MulterConfigService\n * @description Multer configuration service -\n * Configuration for handling upload file\n *\n */\n@Injectable()\nexport class MulterConfigService implements MulterOptionsFactory {\n  constructor(private configService: ConfigService) {}\n  createMulterOptions(): MulterModuleOptions {\n    return {\n      storage: diskStorage({\n        destination: this.configService.get('upload_path'),\n        filename: (req, file, cb) => {\n          const name = filename(file.originalname);\n          return cb(null, `${name}${extname(file.originalname)}`);\n        },\n      }),\n    };\n  }\n}\n\n/**\n * @class JwtConfigService\n * @description Jwt configuration service -\n * Configuration for setting jwt options\n *\n */\n@Injectable()\nexport class JwtConfigService implements JwtOptionsFactory {\n  constructor(private configService: ConfigService) {}\n  createJwtOptions(): JwtModuleOptions {\n    return {\n      secret: this.configService.get('jwtSecret'),\n      signOptions: {\n        expiresIn: '60s',\n      },\n    };\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/MulterConfigService.html":{"url":"injectables/MulterConfigService.html","title":"injectable - MulterConfigService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  MulterConfigService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/config/configuration.ts\n        \n\n\n\n            \n                Example\n            \n            \n            \n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                createMulterOptions\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(configService: ConfigService)\n                    \n                \n                        \n                            \n                                Defined in src/config/configuration.ts:48\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        configService\n                                                  \n                                                        \n                                                                    ConfigService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            createMulterOptions\n                        \n                        \n                    \n                \n            \n            \n                \ncreateMulterOptions()\n                \n            \n\n\n            \n                \n                    Defined in src/config/configuration.ts:50\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :     MulterModuleOptions\n\n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@nestjs/common';\nimport { ConfigService } from '@nestjs/config';\nimport {\n  MongooseModuleOptions,\n  MongooseOptionsFactory,\n} from '@nestjs/mongoose';\nimport {\n  MulterModuleOptions,\n  MulterOptionsFactory,\n} from '@nestjs/platform-express';\nimport { diskStorage } from 'multer';\nimport { extname } from 'path';\nimport * as _ from 'lodash';\nimport { JwtModuleOptions, JwtOptionsFactory } from '@nestjs/jwt';\n\n// config contants\nexport default () => ({\n  port: parseInt(process.env.PORT, 10) || 5000,\n  database: process.env.MONGODB_URI,\n  upload_path: './public/upload',\n  jwtSecret: process.env.JWTSECRET,\n});\n\n// get filename of file\nconst filename = (str: string) => _.split(str, '.')[0];\n\n/**\n * @class MongooseConfigService\n * @description Mongoose configuration service - Mongodb setup\n */\n@Injectable()\nexport class MongooseConfigService implements MongooseOptionsFactory {\n  constructor(private configService: ConfigService) {}\n  createMongooseOptions(): MongooseModuleOptions {\n    return {\n      uri: this.configService.get('database'),\n    };\n  }\n}\n\n/**\n * @class MulterConfigService\n * @description Multer configuration service -\n * Configuration for handling upload file\n *\n */\n@Injectable()\nexport class MulterConfigService implements MulterOptionsFactory {\n  constructor(private configService: ConfigService) {}\n  createMulterOptions(): MulterModuleOptions {\n    return {\n      storage: diskStorage({\n        destination: this.configService.get('upload_path'),\n        filename: (req, file, cb) => {\n          const name = filename(file.originalname);\n          return cb(null, `${name}${extname(file.originalname)}`);\n        },\n      }),\n    };\n  }\n}\n\n/**\n * @class JwtConfigService\n * @description Jwt configuration service -\n * Configuration for setting jwt options\n *\n */\n@Injectable()\nexport class JwtConfigService implements JwtOptionsFactory {\n  constructor(private configService: ConfigService) {}\n  createJwtOptions(): JwtModuleOptions {\n    return {\n      secret: this.configService.get('jwtSecret'),\n      signOptions: {\n        expiresIn: '60s',\n      },\n    };\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/Student.html":{"url":"classes/Student.html","title":"class - Student","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  Student\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/user/schemas/student.schema.ts\n        \n\n\n\n            \n                Implements\n            \n            \n                            Learner\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                email\n                            \n                            \n                                firstname\n                            \n                            \n                                learningStyle\n                            \n                            \n                                othernames\n                            \n                            \n                                studentNumber\n                            \n                            \n                                surname\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            email\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Prop()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/user/schemas/student.schema.ts:19\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            firstname\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Prop()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/user/schemas/student.schema.ts:13\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            learningStyle\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Prop()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/user/schemas/student.schema.ts:25\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            othernames\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Prop()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/user/schemas/student.schema.ts:16\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            studentNumber\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Prop()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/user/schemas/student.schema.ts:22\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            surname\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Prop()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/user/schemas/student.schema.ts:10\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { Prop, Schema, SchemaFactory } from '@nestjs/mongoose';\nimport { Document } from 'mongoose';\nimport { Learner } from 'user/interfaces/user.interface';\n\nexport type StudentDocument = Student & Document;\n\n@Schema()\nexport class Student implements Learner {\n  @Prop()\n  surname: string;\n\n  @Prop()\n  firstname: string;\n\n  @Prop()\n  othernames: string;\n\n  @Prop()\n  email: string;\n\n  @Prop()\n  studentNumber: string;\n\n  @Prop()\n  learningStyle: string;\n}\n\nexport const StudentSchema = SchemaFactory.createForClass(Student);\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/Todo.html":{"url":"interfaces/Todo.html","title":"interface - Todo","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  Todo\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app.service.ts\n        \n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        Completed\n                                \n                                \n                                        Id\n                                \n                                \n                                        Title\n                                \n                                \n                                        UserId\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        Completed\n                                    \n                                \n                                \n                                    \n                                        Completed:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        Id\n                                    \n                                \n                                \n                                    \n                                        Id:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        Title\n                                    \n                                \n                                \n                                    \n                                        Title:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        UserId\n                                    \n                                \n                                \n                                    \n                                        UserId:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { HttpService, Injectable } from '@nestjs/common';\nimport { Observable } from 'rxjs';\nimport { AxiosResponse } from 'axios';\n\nexport interface Todo {\n  UserId: number;\n  Id: number;\n  Title: string;\n  Completed: boolean;\n}\n\n@Injectable()\nexport class AppService {\n  constructor(private httpService: HttpService) {}\n  getHello(): string {\n    return 'Hello World!';\n  }\n\n  getTodos(): Observable> {\n    return this.httpService.get('https://jsonplaceholder.typicode.com/todos');\n  }\n}\n\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/Tutor.html":{"url":"classes/Tutor.html","title":"class - Tutor","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  Tutor\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/user/schemas/tutor.schema.ts\n        \n\n\n\n            \n                Implements\n            \n            \n                            Author\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                coursesCreated\n                            \n                            \n                                email\n                            \n                            \n                                firstname\n                            \n                            \n                                othernames\n                            \n                            \n                                surname\n                            \n                            \n                                title\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            coursesCreated\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Array\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Prop({type: undefined})\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/user/schemas/tutor.schema.ts:27\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            email\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Prop()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/user/schemas/tutor.schema.ts:21\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            firstname\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Prop()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/user/schemas/tutor.schema.ts:15\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            othernames\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Prop()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/user/schemas/tutor.schema.ts:18\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            surname\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Prop()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/user/schemas/tutor.schema.ts:12\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            title\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Prop()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/user/schemas/tutor.schema.ts:24\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { Prop, Schema, SchemaFactory } from '@nestjs/mongoose';\nimport { Course } from 'feed/interfaces/feed.interface';\nimport * as mongoose from 'mongoose';\nimport { Document } from 'mongoose';\nimport { Author } from 'user/interfaces/user.interface';\n\nexport type TutorDocument = Tutor & Document;\n\n@Schema()\nexport class Tutor implements Author {\n  @Prop()\n  surname: string;\n\n  @Prop()\n  firstname: string;\n\n  @Prop()\n  othernames: string;\n\n  @Prop()\n  email: string;\n\n  @Prop()\n  title: string;\n\n  @Prop({ type: [{ type: mongoose.Schema.Types.ObjectId, ref: 'Course' }] })\n  coursesCreated: Array;\n}\n\nexport const TutorSchema = SchemaFactory.createForClass(Tutor);\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/User.html":{"url":"interfaces/User.html","title":"interface - User","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  User\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/user/interfaces/user.interface.ts\n        \n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                            Optional\n                                        _id\n                                \n                                \n                                        email\n                                \n                                \n                                        firstname\n                                \n                                \n                                        othernames\n                                \n                                \n                                        surname\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        _id\n                                    \n                                \n                                \n                                    \n                                        _id:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        email\n                                    \n                                \n                                \n                                    \n                                        email:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        firstname\n                                    \n                                \n                                \n                                    \n                                        firstname:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        othernames\n                                    \n                                \n                                \n                                    \n                                        othernames:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        surname\n                                    \n                                \n                                \n                                    \n                                        surname:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { Course } from 'feed/interfaces/feed.interface';\n\nexport interface User {\n  _id?: string;\n  surname: string;\n  firstname: string;\n  othernames: string;\n  email: string;\n}\n\nexport interface Author extends User {\n  title: string;\n  coursesCreated: Array;\n}\n\nexport interface Learner extends User {\n  studentNumber: string;\n  learningStyle: string;\n}\n\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"controllers/UserController.html":{"url":"controllers/UserController.html","title":"controller - UserController","body":"\n                   \n\n\n\n\n\n\n  Controllers\n  UserController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/user/user.controller.ts\n        \n\n\n\n\n\n\n\n    \n\n\n    \n        import { Controller } from '@nestjs/common';\n\n@Controller()\nexport class UserController {}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/UserModule.html":{"url":"modules/UserModule.html","title":"module - UserModule","body":"\n                   \n\n\n\n\n    Modules\n    UserModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_UserModule\n\n\n\ncluster_UserModule_providers\n\n\n\ncluster_UserModule_exports\n\n\n\n\nUserService \n\nUserService \n\n\n\nUserModule\n\nUserModule\n\nUserService  -->\n\nUserModule->UserService \n\n\n\n\n\nUserService\n\nUserService\n\nUserModule -->\n\nUserService->UserModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/user/user.module.ts\n        \n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            UserService\n                        \n                    \n                \n                \n                    Controllers\n                    \n                        \n                            UserController\n                        \n                    \n                \n                \n                    Exports\n                    \n                        \n                            UserService\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Module } from '@nestjs/common';\nimport { ModelDefinition, MongooseModule } from '@nestjs/mongoose';\nimport { Material, MaterialSchema } from './schemas/files.schema';\nimport { Student, StudentSchema } from './schemas/student.schema';\nimport { Tutor, TutorSchema } from './schemas/tutor.schema';\nimport { UserController } from './user.controller';\nimport { UserService } from './user.service';\n\nconst models: ModelDefinition[] = [\n  {\n    name: Material.name,\n    schema: MaterialSchema,\n  },\n];\n\n@Module({\n  imports: [MongooseModule.forFeature(models)],\n  providers: [UserService],\n  controllers: [UserController],\n  exports: [UserService],\n})\nexport class UserModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/UserService.html":{"url":"injectables/UserService.html","title":"injectable - UserService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  UserService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/user/user.service.ts\n        \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                    Readonly\n                                users\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                findOne\n                            \n                            \n                                    Async\n                                uploadFile\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(materialModel: Model)\n                    \n                \n                        \n                            \n                                Defined in src/user/user.service.ts:25\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        materialModel\n                                                  \n                                                        \n                                                                        Model\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            findOne\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    findOne(username: string)\n                \n            \n\n\n            \n                \n                    Defined in src/user/user.service.ts:31\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    username\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            uploadFile\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    uploadFile(body)\n                \n            \n\n\n            \n                \n                    Defined in src/user/user.service.ts:35\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    body\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     {}\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                                Readonly\n                            users\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     []\n\n                        \n                    \n                    \n                        \n                            Default value : [\n    {\n      userId: 1,\n      username: 'john',\n      password: 'changeme',\n    },\n    {\n      userId: 2,\n      username: 'maria',\n      password: 'guess',\n    },\n  ]\n                        \n                    \n                        \n                            \n                                    Defined in src/user/user.service.ts:14\n                            \n                        \n\n\n            \n        \n\n\n    \n\n\n    \n        import { Inject, Injectable } from '@nestjs/common';\nimport { InjectModel } from '@nestjs/mongoose';\nimport { Model } from 'mongoose';\nimport { Material, MaterialDocument } from './schemas/files.schema';\n\nexport type User = {\n  userId: number;\n  username: string;\n  password: string;\n};\n\n@Injectable()\nexport class UserService {\n  private readonly users = [\n    {\n      userId: 1,\n      username: 'john',\n      password: 'changeme',\n    },\n    {\n      userId: 2,\n      username: 'maria',\n      password: 'guess',\n    },\n  ];\n\n  constructor(\n    @InjectModel(Material.name) private materialModel: Model,\n  ) {}\n\n  async findOne(username: string): Promise {\n    return this.users.find((user) => user.username === username);\n  }\n\n  async uploadFile(body) {\n    const newFile = new this.materialModel(body);\n    return newFile;\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"coverage.html":{"url":"coverage.html","title":"coverage - coverage","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n    Documentation coverage\n\n\n\n    \n\n\n\n    \n        \n            File\n            Type\n            Identifier\n            Statements\n        \n    \n    \n        \n            \n                \n                src/app.controller.ts\n            \n            controller\n            AppController\n            \n                0 %\n                (0/6)\n            \n        \n        \n            \n                \n                src/app.service.ts\n            \n            injectable\n            AppService\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                src/app.service.ts\n            \n            interface\n            Todo\n            \n                0 %\n                (0/5)\n            \n        \n        \n            \n                \n                src/auth/auth.service.ts\n            \n            injectable\n            AuthService\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                src/auth/jwt-auth.guard.ts\n            \n            injectable\n            JwtAuthGuard\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/auth/jwt.strategy.ts\n            \n            injectable\n            JwtStrategy\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/auth/local-auth.guard.ts\n            \n            injectable\n            LocalAuthGuard\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/auth/local.strategy.ts\n            \n            injectable\n            LocalStrategy\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/config/configuration.ts\n            \n            injectable\n            JwtConfigService\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/config/configuration.ts\n            \n            injectable\n            MongooseConfigService\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/config/configuration.ts\n            \n            injectable\n            MulterConfigService\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/config/configuration.ts\n            \n            variable\n            filename\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/config/constants.ts\n            \n            variable\n            CONFIG_MODULE_OPTIONS\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/config/modules.ts\n            \n            variable\n            modules\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/decotators/user.decorator.ts\n            \n            variable\n            User\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/feed/feed.controller.ts\n            \n            controller\n            FeedController\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                src/feed/feed.module.ts\n            \n            variable\n            models\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/feed/feed.service.ts\n            \n            injectable\n            FeedService\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/feed/interfaces/feed-controller.interface.ts\n            \n            interface\n            IFeedController\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                src/feed/interfaces/feed-service.interface.ts\n            \n            interface\n            IFeedService\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                src/feed/interfaces/feed.interface.ts\n            \n            interface\n            Course\n            \n                0 %\n                (0/12)\n            \n        \n        \n            \n                \n                src/feed/interfaces/feed.interface.ts\n            \n            interface\n            Feed\n            \n                0 %\n                (0/5)\n            \n        \n        \n            \n                \n                src/feed/schemas/feed.schema.ts\n            \n            class\n            Feed\n            \n                0 %\n                (0/12)\n            \n        \n        \n            \n                \n                src/feed/schemas/feed.schema.ts\n            \n            variable\n            FeedSchema\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/main.ts\n            \n            function\n            bootstrap\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/user/interfaces/user.interface.ts\n            \n            interface\n            Author\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/user/interfaces/user.interface.ts\n            \n            interface\n            Learner\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/user/interfaces/user.interface.ts\n            \n            interface\n            User\n            \n                0 %\n                (0/6)\n            \n        \n        \n            \n                \n                src/user/schemas/files.schema.ts\n            \n            class\n            Material\n            \n                0 %\n                (0/5)\n            \n        \n        \n            \n                \n                src/user/schemas/files.schema.ts\n            \n            interface\n            CreateMaterialDto\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/user/schemas/files.schema.ts\n            \n            variable\n            MaterialSchema\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/user/schemas/student.schema.ts\n            \n            class\n            Student\n            \n                0 %\n                (0/7)\n            \n        \n        \n            \n                \n                src/user/schemas/student.schema.ts\n            \n            variable\n            StudentSchema\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/user/schemas/tutor.schema.ts\n            \n            class\n            Tutor\n            \n                0 %\n                (0/7)\n            \n        \n        \n            \n                \n                src/user/schemas/tutor.schema.ts\n            \n            variable\n            TutorSchema\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/user/user.controller.ts\n            \n            controller\n            UserController\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/user/user.module.ts\n            \n            variable\n            models\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/user/user.service.ts\n            \n            injectable\n            UserService\n            \n                0 %\n                (0/5)\n            \n        \n    \n\n\n\n\n\n    new Tablesort(document.getElementById('coverage-table'));\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"dependencies.html":{"url":"dependencies.html","title":"package-dependencies - dependencies","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n        Dependencies\n    \n    \n        \n            @nestjs/common : ^7.6.15\n        \n            @nestjs/config : ^0.6.3\n        \n            @nestjs/core : ^7.6.15\n        \n            @nestjs/jwt : ^7.2.0\n        \n            @nestjs/mongoose : ^7.2.4\n        \n            @nestjs/passport : ^7.1.5\n        \n            @nestjs/platform-express : ^7.6.15\n        \n            @nestjs/serve-static : ^2.1.4\n        \n            hbs : ^4.1.2\n        \n            lodash : ^4.17.21\n        \n            mongoose : ^5.12.7\n        \n            passport : ^0.4.1\n        \n            passport-jwt : ^4.0.0\n        \n            passport-local : ^1.0.0\n        \n            reflect-metadata : ^0.1.13\n        \n            rimraf : ^3.0.2\n        \n            rxjs : ^6.6.6\n    \n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/functions.html":{"url":"miscellaneous/functions.html","title":"miscellaneous-functions - functions","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n  Miscellaneous\n  Functions\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            bootstrap   (src/.../main.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    src/main.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        \n                            bootstrap\n                        \n                        \n                    \n                \n            \n            \n                \nbootstrap()\n                \n            \n\n\n\n\n        \n    \n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"index.html":{"url":"index.html","title":"getting-started - index","body":"\n                   \n\n\n  \n\n\n  A progressive Node.js framework for building efficient and scalable server-side applications.\n    \n\n\n\n\n\n\n\n\n  \n    \n  \n\n  \n\nDescription\nNest framework TypeScript starter repository.\nInstallation\n$ npm installRunning the app\n# development\n$ npm run start\n\n# watch mode\n$ npm run start:dev\n\n# production mode\n$ npm run start:prodTest\n# unit tests\n$ npm run test\n\n# e2e tests\n$ npm run test:e2e\n\n# test coverage\n$ npm run test:covSupport\nNest is an MIT-licensed open source project. It can grow thanks to the sponsors and support by the amazing backers. If you'd like to join them, please read more here.\nStay in touch\n\nAuthor - Kamil Myśliwiec\nWebsite - https://nestjs.com\nTwitter - @nestframework\n\nLicense\nNest is MIT licensed.\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules.html":{"url":"modules.html","title":"modules - modules","body":"\n                   \n\n\n\n\n    Modules\n\n\n    \n            \n                \n                    \n                        AppModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        AuthModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        FeedModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        UserModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n    \n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"overview.html":{"url":"overview.html","title":"overview - overview","body":"\n                   \n\n\n\n    Overview\n\n  \n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_AppModule\n\n\n\ncluster_AppModule_imports\n\n\n\ncluster_AppModule_providers\n\n\n\ncluster_AuthModule\n\n\n\ncluster_AuthModule_exports\n\n\n\ncluster_AuthModule_providers\n\n\n\ncluster_FeedModule\n\n\n\ncluster_FeedModule_providers\n\n\n\ncluster_UserModule\n\n\n\ncluster_UserModule_exports\n\n\n\ncluster_UserModule_providers\n\n\n\n\nAuthModule\n\nAuthModule\n\n\n\nAppModule\n\nAppModule\n\nAppModule -->\n\nAuthModule->AppModule\n\n\n\n\n\nAuthService \n\nAuthService \n\nAuthService  -->\n\nAuthModule->AuthService \n\n\n\n\n\nFeedModule\n\nFeedModule\n\nAppModule -->\n\nFeedModule->AppModule\n\n\n\n\n\nUserModule\n\nUserModule\n\nAuthModule -->\n\nUserModule->AuthModule\n\n\n\nAppModule -->\n\nUserModule->AppModule\n\n\n\n\n\nUserService \n\nUserService \n\nUserService  -->\n\nUserModule->UserService \n\n\n\n\n\nAppService\n\nAppService\n\nAppModule -->\n\nAppService->AppModule\n\n\n\n\n\nAuthService\n\nAuthService\n\nAuthModule -->\n\nAuthService->AuthModule\n\n\n\n\n\nJwtStrategy\n\nJwtStrategy\n\nAuthModule -->\n\nJwtStrategy->AuthModule\n\n\n\n\n\nLocalStrategy\n\nLocalStrategy\n\nAuthModule -->\n\nLocalStrategy->AuthModule\n\n\n\n\n\nFeedService\n\nFeedService\n\nFeedModule -->\n\nFeedService->FeedModule\n\n\n\n\n\nUserService\n\nUserService\n\nUserModule -->\n\nUserService->UserModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n  \n\n    \n        \n            \n                \n                    \n                    \n                        4 Modules\n                    \n                \n            \n        \n        \n            \n                \n                    \n                    3 Controllers\n                \n            \n        \n        \n            \n                \n                    \n                    11 Injectables\n                \n            \n        \n        \n            \n                \n                    \n                    4 Classes\n                \n            \n        \n        \n            \n                \n                    \n                    9 Interfaces\n                \n            \n        \n    \n\n\n \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/typealiases.html":{"url":"miscellaneous/typealiases.html","title":"miscellaneous-typealiases - typealiases","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n  Miscellaneous\n  Type aliases\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            FeedDocument   (src/.../feed.schema.ts)\n                        \n                        \n                            MaterialDocument   (src/.../files.schema.ts)\n                        \n                        \n                            StudentDocument   (src/.../student.schema.ts)\n                        \n                        \n                            TutorDocument   (src/.../tutor.schema.ts)\n                        \n                        \n                            User   (src/.../user.service.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    src/feed/schemas/feed.schema.ts\n    \n    \n        \n            \n                \n                    \n                    FeedDocument\n                \n            \n            \n                \n                        \n\n                \n            \n        \n    \n    src/user/schemas/files.schema.ts\n    \n    \n        \n            \n                \n                    \n                    MaterialDocument\n                \n            \n            \n                \n                        \n\n                \n            \n        \n    \n    src/user/schemas/student.schema.ts\n    \n    \n        \n            \n                \n                    \n                    StudentDocument\n                \n            \n            \n                \n                        \n\n                \n            \n        \n    \n    src/user/schemas/tutor.schema.ts\n    \n    \n        \n            \n                \n                    \n                    TutorDocument\n                \n            \n            \n                \n                        \n\n                \n            \n        \n    \n    src/user/user.service.ts\n    \n    \n        \n            \n                \n                    \n                    User\n                \n            \n            \n                \n                        literal type\n\n                \n            \n        \n    \n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/variables.html":{"url":"miscellaneous/variables.html","title":"miscellaneous-variables - variables","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n  Miscellaneous\n  Variables\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            CONFIG_MODULE_OPTIONS   (src/.../constants.ts)\n                        \n                        \n                            FeedSchema   (src/.../feed.schema.ts)\n                        \n                        \n                            filename   (src/.../configuration.ts)\n                        \n                        \n                            MaterialSchema   (src/.../files.schema.ts)\n                        \n                        \n                            models   (src/.../feed.module.ts)\n                        \n                        \n                            models   (src/.../user.module.ts)\n                        \n                        \n                            modules   (src/.../modules.ts)\n                        \n                        \n                            StudentSchema   (src/.../student.schema.ts)\n                        \n                        \n                            TutorSchema   (src/.../tutor.schema.ts)\n                        \n                        \n                            User   (src/.../user.decorator.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    src/config/constants.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            CONFIG_MODULE_OPTIONS\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     ConfigModuleOptions\n\n                        \n                    \n                    \n                        \n                            Default value : {\n  isGlobal: true,\n  load: [configuration],\n}\n                        \n                    \n\n\n            \n        \n\n    src/feed/schemas/feed.schema.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            FeedSchema\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : SchemaFactory.createForClass(Feed)\n                        \n                    \n\n\n            \n        \n\n    src/config/configuration.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            filename\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : (str: string) => _.split(str, '.')[0]\n                        \n                    \n\n\n            \n        \n\n    src/user/schemas/files.schema.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            MaterialSchema\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : SchemaFactory.createForClass(Material)\n                        \n                    \n\n\n            \n        \n\n    src/feed/feed.module.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            models\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     ModelDefinition[]\n\n                        \n                    \n                    \n                        \n                            Default value : [\n  {\n    name: Feed.name,\n    schema: FeedSchema,\n  },\n]\n                        \n                    \n\n\n            \n        \n\n    src/user/user.module.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            models\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     ModelDefinition[]\n\n                        \n                    \n                    \n                        \n                            Default value : [\n  {\n    name: Material.name,\n    schema: MaterialSchema,\n  },\n]\n                        \n                    \n\n\n            \n        \n\n    src/config/modules.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            modules\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     any[]\n\n                        \n                    \n                    \n                        \n                            Default value : [\n  ConfigModule.forRoot(CONFIG_MODULE_OPTIONS),\n  MongooseModule.forRootAsync({\n    imports: [ConfigModule],\n    useClass: MongooseConfigService,\n  }),\n  MulterModule.registerAsync({\n    imports: [ConfigModule],\n    useClass: MulterConfigService,\n  }),\n  FeedModule,\n  AuthModule,\n  UserModule,\n  HttpModule,\n]\n                        \n                    \n\n\n            \n        \n\n    src/user/schemas/student.schema.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            StudentSchema\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : SchemaFactory.createForClass(Student)\n                        \n                    \n\n\n            \n        \n\n    src/user/schemas/tutor.schema.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            TutorSchema\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : SchemaFactory.createForClass(Tutor)\n                        \n                    \n\n\n            \n        \n\n    src/decotators/user.decorator.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            User\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : createParamDecorator(\n  (data: unknown, ctx: ExecutionContext) => {\n    const request = ctx.switchToHttp().getRequest();\n    return request.user;\n  },\n)\n                        \n                    \n\n\n            \n        \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"}}
}
