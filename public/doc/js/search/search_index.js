var COMPODOC_SEARCH_INDEX = {
    "index": {"version":"2.3.9","fields":["title","body"],"fieldVectors":[["title/controllers/AppController.html",[0,1.875,1,2.397]],["body/controllers/AppController.html",[0,2.083,1,2.662,2,1.307,3,0.153,4,0.133,5,0.278,6,2.243,7,0.215,8,1.259,9,3.889,10,2.141,11,3.889,12,3.329,13,3.175,14,2.748,15,0.023,16,2.634,17,1.317,18,2.634,19,1.567,20,3.329,21,0.438,22,3.909,23,2.634,24,2.634,25,2.634,26,2.634,27,1.259,28,1.058,29,0.998,30,2.662,31,2.634,32,4.661,33,2.634,34,2.634,35,0.193,36,4.154,37,0.475,38,2.243,39,2.634,40,2.243,41,3.909,42,2.243,43,2.634,44,0.438,45,1.986,46,1.403,47,2.634,48,1.64,49,2.903,50,2.483,51,2.634,52,1.64,53,2.243,54,3.329,55,1.794,56,2.634,57,1.416,58,2.243,59,2.483,60,2.243,61,2.314,62,1.986,63,1.794,64,1.794,65,0.153,66,0.215,67,1.076,68,3.175,69,3.97,70,2.634,71,1.58,72,1.986,73,1.986,74,2.634,75,2.634,76,2.634,77,2.634,78,2.634,79,2.634,80,2.634,81,2.634,82,1.103,83,2.243,84,0.014,85,2.634,86,2.243,87,2.243,88,2.243,89,2.634,90,2.634,91,0.954,92,2.634,93,1.64,94,2.634,95,0.012,96,0.008]],["title/modules/AppModule.html",[97,1.633,98,2.397]],["body/modules/AppModule.html",[1,3.999,2,2.62,3,0.234,4,0.204,5,0.204,15,0.022,37,0.457,44,0.673,59,3.525,60,3.447,65,0.234,66,0.33,84,0.013,95,0.016,96,0.013,97,2.725,98,4.812,99,2.725,100,2.156,101,2.521,102,2.521,103,2.156,104,3.657,105,2.521,106,3.447,107,3.447,108,3.447,109,3.573,110,3.573,111,3.315,112,3.286,113,2.521,114,2.521,115,4.047,116,3.286,117,4.047,118,4.047]],["title/injectables/AppService.html",[59,1.875,119,0.442]],["body/injectables/AppService.html",[3,0.23,4,0.201,5,0.201,7,0.324,8,1.681,9,4.661,11,4.661,15,0.023,17,1.487,19,1.586,21,0.969,27,1.282,28,1.077,29,1.016,35,0.292,37,0.427,44,0.662,59,2.78,65,0.302,66,0.324,67,1.626,71,1.497,72,3.001,73,3.001,84,0.012,95,0.016,96,0.012,119,0.655,120,1.441,121,3.001,122,3.98,123,5.609,124,3.98,125,3.98,126,3.98,127,4.96,128,3.001,129,3.39,130,3.39,131,0.426,132,2.71,133,3.001,134,2.591,135,2.12,136,1.847,137,3.39,138,1.53,139,1.732,140,3.39]],["title/modules/AuthModule.html",[97,1.633,109,2.021]],["body/modules/AuthModule.html",[2,1.723,3,0.201,4,0.175,5,0.175,15,0.023,37,0.492,44,0.577,46,1.849,50,3.675,65,0.201,66,0.283,84,0.011,95,0.015,96,0.011,97,2.522,99,1.61,100,1.849,101,2.161,102,2.161,103,1.849,104,3.384,105,3.384,109,3.989,111,3.372,112,2.965,113,2.161,114,2.161,116,3.384,141,2.955,142,2.955,143,3.47,144,2.955,145,3.942,146,3.942,147,3.47,148,4.628,149,1.993,150,4.76,151,1.993,152,4.76,153,2.734,154,3.47,155,3.47,156,2.955,157,3.47,158,3.47,159,3.47,160,2.955]],["title/injectables/AuthService.html",[50,1.875,119,0.442]],["body/injectables/AuthService.html",[3,0.181,4,0.158,5,0.158,7,0.254,8,1.425,10,2.09,12,3.768,15,0.023,17,1.312,19,1.344,21,1.019,27,1.654,28,1.39,29,1.312,35,0.325,37,0.449,44,0.52,50,2.357,57,1.792,61,3.04,62,2.356,65,0.181,66,0.254,67,1.808,68,3.013,71,1.473,82,1.195,84,0.01,91,1.602,95,0.014,96,0.01,119,0.555,120,1.131,135,1.664,151,1.794,161,2.661,162,4.424,163,3.124,164,6.296,165,3.124,166,4.424,167,3.124,168,4.424,169,5.137,170,3.124,171,2.356,172,2.356,173,2.661,174,1.277,175,1.551,176,1.794,177,3.124,178,3.124,179,4.424,180,3.124,181,3.124,182,3.336,183,1.946,184,4.424,185,1.277,186,3.124,187,1.551,188,3.124,189,2.054,190,4.424,191,1.45,192,3.124,193,1.794,194,2.661,195,3.124,196,3.124]],["title/interfaces/Author.html",[131,0.377,197,1.438]],["body/interfaces/Author.html",[3,0.243,4,0.212,5,0.212,7,0.343,15,0.022,21,1.175,29,1.381,35,0.397,37,0.309,57,1.918,65,0.346,84,0.013,95,0.017,96,0.013,131,0.64,136,2.93,138,1.617,174,1.718,183,2.619,185,1.718,187,2.087,189,1.951,191,1.951,197,2.21,198,1.354,199,2.863,200,2.444,201,1.551,202,3.931,203,2.775,204,2.087,205,2.619,206,1.829,207,1.829,208,1.718,209,2.415]],["title/interfaces/CollationDocument.html",[131,0.377,210,1.875]],["body/interfaces/CollationDocument.html",[3,0.153,4,0.133,5,0.133,7,0.215,10,0.901,15,0.023,21,1.121,35,0.451,37,0.287,44,0.439,65,0.319,66,0.215,82,1.104,84,0.008,91,0.956,95,0.012,96,0.012,119,0.492,131,0.553,134,3.215,138,2.521,193,2.965,198,0.85,201,1.123,203,1.225,210,2.487,211,1.516,212,3.216,213,3.216,214,3.216,215,3.216,216,3.216,217,3.216,218,3.216,219,3.216,220,2.439,221,1.817,222,2.938,223,0.85,224,2.086,225,1.31,226,2.907,227,1.516,228,2.086,229,2.439,230,2.439,231,3.598,232,3.598,233,2.439,234,2.439,235,2.439,236,2.086,237,2.439,238,2.439,239,2.439,240,2.439,241,1.644,242,1.644,243,2.439,244,1.148,245,1.644,246,1.516,247,1.644,248,2.907,249,1.225,250,1.225,251,1.148,252,2.439,253,2.907,254,1.644,255,1.644,256,1.704]],["title/interfaces/Course.html",[131,0.377,204,1.747]],["body/interfaces/Course.html",[3,0.2,4,0.175,5,0.175,7,0.282,15,0.022,21,1.217,35,0.502,37,0.254,65,0.275,84,0.011,95,0.015,96,0.011,131,0.509,135,3.112,136,2.841,175,1.718,191,2.841,197,2.584,198,1.114,201,1.362,204,2.358,257,2.947,258,4.974,259,4.974,260,3.354,261,4.974,262,4.974,263,4.974,264,4.974,265,4.974,266,1.843,267,3.46]],["title/interfaces/CreateStudentDto.html",[131,0.377,268,2.192]],["body/interfaces/CreateStudentDto.html",[3,0.265,4,0.231,5,0.231,15,0.022,21,1.083,35,0.336,37,0.336,57,1.734,65,0.377,84,0.014,95,0.018,96,0.014,131,0.666,174,2.661,175,2.272,185,1.87,197,2.541,198,1.474,200,2.661,206,1.991,207,1.991,208,1.87,268,3.554,269,2.85,270,2.85,271,2.85,272,2.85,273,2.628]],["title/interfaces/CreateTutorDto.html",[131,0.377,272,2.192]],["body/interfaces/CreateTutorDto.html",[3,0.265,4,0.231,5,0.231,15,0.022,21,1.083,35,0.336,37,0.336,57,1.734,65,0.377,84,0.014,95,0.018,96,0.014,131,0.666,174,2.541,175,2.272,185,1.87,197,2.661,198,1.474,200,2.661,206,1.991,207,1.991,208,1.87,268,2.85,269,2.85,270,2.85,271,2.85,272,3.554,273,2.628]],["title/interfaces/CreateUserDto.html",[131,0.377,271,2.192]],["body/interfaces/CreateUserDto.html",[3,0.237,4,0.206,5,0.206,7,0.333,15,0.022,21,1.177,35,0.475,37,0.3,57,1.793,65,0.362,84,0.013,95,0.016,96,0.013,131,0.632,174,2.411,175,2.03,185,2.553,197,2.411,198,1.317,200,2.553,201,1.523,206,2.718,207,2.718,208,2.553,268,2.547,269,2.547,270,2.547,271,3.308,272,2.547,273,2.348]],["title/classes/Feed.html",[66,0.287,266,1.875]],["body/classes/Feed.html",[3,0.172,4,0.15,5,0.15,7,0.242,14,3.538,15,0.023,17,1.696,21,1.177,35,0.492,37,0.367,65,0.289,66,0.242,82,0.635,84,0.009,95,0.013,96,0.009,135,2.66,136,2.318,191,2.318,201,1.223,204,2.479,205,1.849,221,1.98,223,0.956,258,4.253,259,4.253,260,2.868,261,4.253,262,4.253,263,4.253,264,4.253,265,4.253,266,2.66,274,1.705,275,2.022,276,2.118,277,4.835,278,2.968,279,2.968,280,2.968,281,2.968,282,2.968,283,2.968,284,2.968,285,2.968,286,2.968,287,2.968,288,2.968,289,2.118,290,2.022,291,1.141,292,2.238,293,2.022,294,2.528]],["title/controllers/FeedController.html",[0,1.875,295,2.397]],["body/controllers/FeedController.html",[0,2.013,2,1.875,3,0.219,4,0.191,5,0.191,7,0.308,8,1.624,10,2.327,14,3.024,15,0.023,17,1.449,19,1.725,37,0.417,44,0.628,65,0.219,66,0.308,69,3.218,71,1.628,82,0.808,84,0.012,91,1.368,95,0.016,96,0.012,139,1.644,250,1.753,251,2.194,266,2.013,276,1.875,295,3.434,296,3.218,297,3.218,298,5.675,299,4.566,300,5.157,301,5.157,302,5.675,303,3.778,304,3.778,305,3.778,306,3.259,307,3.218,308,3.434,309,3.218,310,3.778,311,3.778,312,3.778,313,3.778,314,3.778]],["title/modules/FeedModule.html",[97,1.633,110,2.021]],["body/modules/FeedModule.html",[2,2.546,3,0.224,4,0.196,5,0.196,15,0.023,28,1.049,37,0.48,44,0.645,65,0.224,66,0.316,82,0.829,84,0.012,95,0.016,96,0.012,97,2.668,99,1.799,100,2.065,101,2.414,102,2.414,103,2.065,104,3.58,105,3.194,110,3.888,112,3.194,113,2.414,114,2.414,116,2.414,244,2.844,266,2.065,289,1.924,291,1.49,293,3.493,295,3.915,306,3.755,307,3.301,315,3.301,316,3.301,317,2.923,318,3.867,319,3.301,320,3.301,321,3.876,322,3.301,323,2.64,324,3.301,325,3.301]],["title/injectables/FeedService.html",[119,0.442,306,2.021]],["body/injectables/FeedService.html",[3,0.212,4,0.185,5,0.185,7,0.298,8,1.59,10,1.907,15,0.023,17,1.427,19,1.113,27,1.179,28,0.991,29,0.935,35,0.362,37,0.472,44,0.609,65,0.212,66,0.298,67,2.018,68,3.363,71,1.05,84,0.011,91,1.326,95,0.015,96,0.011,119,0.62,120,1.326,201,1.416,222,3.186,223,1.179,244,2.947,246,3.208,266,1.951,291,1.408,292,2.761,306,2.836,309,3.119,320,3.119,322,3.119,326,3.119,327,5.093,328,3.662,329,4.938,330,4.938,331,3.662,332,3.119,333,2.494,334,3.662,335,3.662,336,3.662,337,3.662,338,2.761,339,3.662,340,2.761,341,2.281,342,3.119]],["title/interfaces/IFeedController.html",[131,0.377,308,2.397]],["body/interfaces/IFeedController.html",[3,0.267,4,0.233,5,0.233,7,0.376,15,0.022,35,0.458,65,0.267,84,0.014,95,0.018,96,0.014,131,0.494,198,1.485,201,1.644,251,2.715,299,4.922,300,5.56,301,5.56,308,3.905,343,3.477,344,3.927,345,4.661]],["title/interfaces/IFeedService.html",[131,0.377,333,2.397]],["body/interfaces/IFeedService.html",[3,0.267,4,0.233,5,0.233,7,0.376,15,0.022,35,0.458,65,0.267,84,0.014,95,0.018,96,0.014,131,0.494,198,1.485,201,1.644,251,2.715,299,4.922,327,5.56,333,3.905,343,3.477,345,4.661,346,3.927,347,6.528]],["title/classes/JoiValidationPipe.html",[66,0.287,348,2.397]],["body/classes/JoiValidationPipe.html",[3,0.236,4,0.206,5,0.206,7,0.332,8,1.707,15,0.023,17,1.354,19,1.238,27,1.707,28,1.435,29,1.354,35,0.389,37,0.389,44,0.678,65,0.236,66,0.332,67,1.665,71,1.169,82,0.871,84,0.013,95,0.016,96,0.013,139,1.773,274,2.34,276,2.631,289,2.631,341,3.301,348,3.61,349,3.471,350,5.89,351,5.3,352,4.075,353,6.238,354,4.075,355,5.3,356,5.017,357,6.238,358,4.075,359,4.514,360,3.471,361,3.471,362,4.075,363,2.775,364,2.34,365,4.075]],["title/injectables/JwtAuthGuard.html",[52,2.192,119,0.442]],["body/injectables/JwtAuthGuard.html",[3,0.367,4,0.192,5,0.192,7,0.311,8,1.634,15,0.023,17,1.296,19,1.542,20,3.248,27,1.634,28,1.373,29,1.296,35,0.28,37,0.372,44,0.634,45,2.876,46,2.032,52,3.16,57,1.923,65,0.221,66,0.311,71,1.455,84,0.012,95,0.016,96,0.012,119,0.637,120,1.381,200,1.559,341,2.375,363,2.598,364,2.19,366,4.857,367,2.876,368,5.074,369,5.074,370,5.074,371,5.177,372,3.814,373,3.814,374,5.074,375,3.814,376,4.857,377,3.814,378,4.322,379,3.814,380,3.814,381,3.814,382,3.814,383,3.814,384,3.814,385,3.814,386,3.814]],["title/injectables/JwtConfigService.html",[119,0.442,153,2.021]],["body/injectables/JwtConfigService.html",[3,0.156,4,0.136,5,0.263,7,0.219,8,1.278,13,1.83,15,0.023,17,1.013,19,0.817,21,0.447,27,0.865,28,1.074,29,0.686,30,1.83,35,0.197,37,0.453,44,0.447,48,1.674,49,1.674,63,2.702,64,2.702,65,0.302,66,0.474,67,1.098,71,1.494,82,0.848,84,0.008,95,0.012,96,0.008,119,0.654,120,0.973,139,2.052,149,1.543,151,1.543,153,2.709,223,0.865,225,1.334,249,1.247,256,1.169,260,2.709,276,2.342,291,1.033,387,1.674,388,2.026,389,3.927,390,1.83,391,4.367,392,2.687,393,2.687,394,3.556,395,2.992,396,2.992,397,2.992,398,2.992,399,2.026,400,2.026,401,1.83,402,2.992,403,2.026,404,2.026,405,1.674,406,2.026,407,2.026,408,2.026,409,2.026,410,2.026,411,2.026,412,2.026,413,2.026,414,1.83,415,2.709,416,1.83,417,1.83,418,2.279,419,3.784,420,3.556,421,2.026,422,2.026,423,2.026,424,2.026,425,2.026,426,2.279,427,2.026,428,2.026,429,2.026,430,2.026,431,2.026,432,2.026,433,2.026,434,2.026,435,2.026,436,2.471,437,2.026,438,2.026,439,2.026,440,2.026,441,2.026,442,2.026,443,2.026]],["title/injectables/JwtStrategy.html",[119,0.442,145,2.192]],["body/injectables/JwtStrategy.html",[3,0.229,4,0.2,5,0.2,7,0.322,8,1.673,10,1.982,15,0.023,17,1.327,19,1.201,27,1.673,28,1.406,29,1.327,35,0.381,37,0.453,44,0.658,46,2.106,65,0.229,66,0.322,67,1.616,71,1.134,84,0.012,95,0.016,96,0.012,119,0.652,120,1.432,135,2.106,139,1.72,145,3.236,149,2.27,189,1.835,194,3.367,200,1.616,390,2.692,391,4.477,414,2.692,436,2.462,444,3.367,445,4.425,446,3.953,447,5.196,448,3.953,449,3.367,450,3.953,451,3.367,452,2.981,453,3.367,454,3.367,455,3.953,456,3.953,457,3.953,458,3.953,459,3.953,460,3.953,461,3.953]],["title/interfaces/Learner.html",[131,0.377,174,1.438]],["body/interfaces/Learner.html",[3,0.238,4,0.207,5,0.207,7,0.334,15,0.022,21,1.193,29,1.36,35,0.434,37,0.301,57,1.901,65,0.342,84,0.013,95,0.017,96,0.013,131,0.633,136,1.904,138,1.578,174,2.176,183,2.555,185,1.677,187,2.037,189,2.903,191,2.903,197,1.677,198,1.321,199,2.794,200,2.415,201,1.527,202,2.555,203,1.904,204,2.037,205,2.555,206,1.785,207,1.785,208,1.677,209,3.592]],["title/injectables/LocalAuthGuard.html",[55,2.397,119,0.442]],["body/injectables/LocalAuthGuard.html",[3,0.294,4,0.257,5,0.257,15,0.022,37,0.447,44,0.846,45,3.833,46,2.708,55,4.144,65,0.294,66,0.414,84,0.016,95,0.019,96,0.016,119,0.764,120,1.841,200,2.077,367,3.833,462,4.33,463,5.083]],["title/injectables/LocalStrategy.html",[119,0.442,146,2.192]],["body/injectables/LocalStrategy.html",[3,0.217,4,0.189,5,0.189,7,0.306,8,1.617,10,1.931,15,0.023,17,1.282,19,1.141,21,1.078,27,1.617,28,1.359,29,1.282,35,0.369,37,0.462,44,0.624,46,2,50,3.452,57,1.835,62,2.831,65,0.217,66,0.306,67,1.534,71,1.077,82,0.803,84,0.012,91,1.359,95,0.016,96,0.012,119,0.63,120,1.359,139,1.633,146,3.127,156,3.197,171,3.786,200,1.534,208,2.573,363,2.557,364,2.156,378,3.197,445,4.276,449,3.197,451,3.197,452,2.831,453,3.197,454,3.197,464,3.197,465,3.754,466,3.754,467,5.021,468,3.754,469,3.197,470,3.754,471,3.754]],["title/classes/Material.html",[66,0.287,472,2.192]],["body/classes/Material.html",[3,0.212,4,0.185,5,0.185,7,0.298,14,3.186,15,0.023,17,1.527,21,0.995,35,0.483,37,0.41,65,0.346,66,0.298,82,0.783,83,3.119,84,0.011,93,3.479,95,0.015,96,0.011,131,0.392,174,1.496,175,1.818,200,1.496,201,1.416,221,2.292,223,1.179,274,2.103,277,4.477,289,2.451,290,2.494,291,1.408,405,3.075,415,3.208,472,3.724,473,2.494,474,5.587,475,5.587,476,3.662,477,5.979,478,4.205,479,3.662,480,3.662,481,5.979,482,2.761,483,3.662,484,2.761,485,3.662,486,2.494,487,3.119]],["title/injectables/MongooseConfigService.html",[119,0.442,418,2.021]],["body/injectables/MongooseConfigService.html",[3,0.156,4,0.136,5,0.263,7,0.219,8,1.278,13,1.83,15,0.023,17,1.013,19,0.817,21,0.447,27,0.865,28,1.074,29,0.686,30,1.83,35,0.197,37,0.453,44,0.447,48,1.674,49,1.674,63,2.702,64,2.702,65,0.302,66,0.474,67,1.098,71,1.494,82,0.848,84,0.008,95,0.012,96,0.008,119,0.654,120,0.973,139,2.052,149,1.543,151,1.543,153,2.279,223,0.865,225,1.334,249,1.247,256,1.169,260,2.709,276,2.342,291,1.033,387,1.674,388,2.026,389,2.026,390,1.83,391,4.367,394,2.992,395,3.556,396,2.992,397,2.992,398,2.992,399,2.026,400,2.026,401,1.83,402,2.992,403,2.026,404,2.026,405,1.674,406,2.026,407,2.026,408,2.026,409,2.026,410,2.026,411,2.026,412,2.026,413,2.026,414,1.83,415,2.709,416,1.83,417,1.83,418,2.709,419,3.784,420,3.556,421,2.026,422,2.026,423,3.927,424,2.026,425,2.026,426,2.279,427,2.026,428,2.026,429,2.026,430,2.026,431,2.026,432,2.026,433,2.026,434,2.026,435,2.026,436,2.471,437,2.026,438,2.026,439,2.026,440,2.026,441,2.026,442,2.026,443,2.026,488,2.687,489,2.687]],["title/injectables/MulterConfigService.html",[119,0.442,426,2.021]],["body/injectables/MulterConfigService.html",[3,0.156,4,0.136,5,0.263,7,0.219,8,1.278,13,1.83,15,0.023,17,1.013,19,0.817,21,0.447,27,0.865,28,1.074,29,0.686,30,1.83,35,0.197,37,0.453,44,0.447,48,1.674,49,1.674,63,2.702,64,2.702,65,0.302,66,0.474,67,1.098,71,1.494,82,0.848,84,0.008,95,0.012,96,0.008,119,0.654,120,0.973,139,2.052,149,1.543,151,1.543,153,2.279,223,0.865,225,1.334,249,1.247,256,1.169,260,2.709,276,2.342,291,1.033,387,1.674,388,2.026,389,2.026,390,1.83,391,4.367,394,2.992,395,2.992,396,2.992,397,3.556,398,2.992,399,2.026,400,2.026,401,1.83,402,2.992,403,2.026,404,2.026,405,1.674,406,2.026,407,2.026,408,2.026,409,2.026,410,2.026,411,2.026,412,2.026,413,2.026,414,1.83,415,2.709,416,1.83,417,1.83,418,2.279,419,3.784,420,3.556,421,2.026,422,2.026,423,2.026,424,2.026,425,2.026,426,2.709,427,2.026,428,3.927,429,2.026,430,2.026,431,2.026,432,2.026,433,2.026,434,2.026,435,2.026,436,2.471,437,2.026,438,2.026,439,2.026,440,2.026,441,2.026,442,2.026,443,2.026,490,2.687,491,2.687]],["title/injectables/PaginateModel.html",[119,0.442,244,1.531]],["body/injectables/PaginateModel.html",[3,0.162,4,0.141,5,0.141,7,0.228,8,1.315,10,1.647,15,0.023,17,0.714,19,0.849,21,1.013,27,0.9,28,0.756,29,0.714,35,0.354,37,0.3,44,0.465,65,0.327,66,0.228,82,1.135,84,0.009,91,1.012,95,0.013,96,0.013,119,0.513,120,1.012,131,0.568,134,3.161,138,2.267,193,3.048,203,1.297,210,2.175,211,1.605,212,1.74,213,1.74,214,1.74,215,1.74,216,1.74,217,1.74,218,1.74,219,1.74,220,2.543,221,1.895,222,3.326,223,0.9,224,2.175,225,1.387,226,3.005,227,1.605,228,2.827,229,2.543,230,2.543,231,3.672,232,3.672,233,2.543,234,2.543,235,2.543,236,2.175,237,2.543,238,2.543,239,2.543,240,2.543,241,1.74,242,1.74,243,2.543,244,1.777,245,3.005,246,2.771,247,3.005,248,3.005,249,1.297,250,1.297,251,1.777,252,2.543,253,3.005,254,1.74,255,1.74,256,1.777,482,2.107,492,2.794,493,3.478,494,2.794]],["title/interfaces/PaginateOptions.html",[131,0.377,228,1.875]],["body/interfaces/PaginateOptions.html",[3,0.148,4,0.129,5,0.129,7,0.208,10,0.872,15,0.023,21,1.069,29,1.697,35,0.434,37,0.28,44,0.425,65,0.315,66,0.208,82,1.086,84,0.008,91,0.925,95,0.012,96,0.012,119,0.48,131,0.544,134,3.268,138,2.339,193,2.918,198,0.823,201,1.096,203,1.186,210,2.707,211,1.467,212,1.591,213,1.591,214,1.591,215,1.591,216,1.591,217,1.591,218,1.591,219,1.591,220,2.38,221,1.774,222,2.898,223,0.823,224,2.707,225,1.268,226,3.555,227,1.467,228,2.439,229,3.555,230,3.388,231,3.874,232,3.874,233,3.388,234,3.388,235,3.388,236,2.036,237,2.38,238,2.38,239,2.38,240,2.38,241,1.591,242,1.591,243,2.38,244,1.112,245,1.591,246,1.467,247,1.591,248,2.851,249,1.186,250,1.186,251,1.112,252,2.38,253,2.851,254,1.591,255,1.591,256,1.663]],["title/interfaces/PaginationResult.html",[131,0.377,236,1.875]],["body/interfaces/PaginationResult.html",[3,0.148,4,0.129,5,0.129,7,0.208,10,0.872,15,0.023,21,0.984,35,0.456,37,0.28,44,0.425,65,0.315,66,0.208,82,1.086,84,0.008,91,0.925,95,0.012,96,0.012,119,0.48,131,0.544,134,3.44,138,2.435,193,3.494,198,0.823,201,1.096,203,2.125,210,2.036,211,1.467,212,1.591,213,1.591,214,1.591,215,1.591,216,1.591,217,1.591,218,1.591,219,1.591,220,2.38,221,1.774,222,2.898,223,0.823,224,2.036,225,1.268,226,2.851,227,1.467,228,2.036,229,2.38,230,2.38,231,3.874,232,3.874,233,2.38,234,2.38,235,2.38,236,2.439,237,3.388,238,3.388,239,3.388,240,3.388,241,3.164,242,3.164,243,3.388,244,1.112,245,1.591,246,1.467,247,1.591,248,2.851,249,1.186,250,1.186,251,1.112,252,2.38,253,2.851,254,1.591,255,1.591,256,1.663]],["title/interfaces/PopulateOptions.html",[131,0.377,224,1.875]],["body/interfaces/PopulateOptions.html",[3,0.164,4,0.143,5,0.143,7,0.23,10,0.965,15,0.023,21,1.062,35,0.392,37,0.302,44,0.47,65,0.328,66,0.23,82,1.141,84,0.009,91,1.024,95,0.013,96,0.013,119,0.517,131,0.572,134,3.17,138,2.276,193,3.065,198,0.911,201,1.181,203,1.312,210,2.194,211,1.624,212,1.761,213,1.761,214,1.761,215,1.761,216,1.761,217,1.761,218,1.761,219,1.761,220,2.565,221,1.912,222,3.457,223,0.911,224,2.588,225,2.649,226,3.687,227,3.065,228,2.194,229,2.565,230,2.565,231,3.687,232,3.687,233,2.565,234,2.565,235,2.565,236,2.194,237,2.565,238,2.565,239,2.565,240,2.565,241,1.761,242,1.761,243,2.565,244,1.23,245,1.761,246,1.624,247,1.761,248,3.025,249,1.312,250,1.312,251,1.23,252,2.565,253,3.025,254,1.761,255,1.761,256,1.792]],["title/classes/Student.html",[66,0.287,176,2.021]],["body/classes/Student.html",[3,0.181,4,0.158,5,0.158,7,0.254,14,3.427,15,0.023,17,1.643,21,1.144,35,0.48,37,0.377,65,0.297,66,0.254,71,0.896,82,0.668,84,0.01,95,0.014,96,0.01,138,1.701,174,2.099,175,1.551,176,2.95,185,2.099,187,2.55,189,2.384,191,2.384,201,1.269,206,2.235,207,2.235,208,2.099,209,2.95,221,2.054,223,1.006,250,2.593,274,1.794,276,2.196,277,4.713,289,2.196,290,2.128,291,1.201,495,2.128,496,4.424,497,3.124,498,3.124,499,3.124,500,3.124,501,3.124,502,3.124,503,3.124,504,3.124,505,2.128,506,3.336,507,3.013,508,2.661,509,3.124,510,3.124,511,3.124,512,3.124]],["title/interfaces/Todo.html",[131,0.377,132,2.397]],["body/interfaces/Todo.html",[3,0.23,4,0.201,5,0.201,7,0.324,9,3.001,11,3.001,15,0.023,21,1.028,35,0.454,37,0.427,44,0.662,59,2.12,65,0.302,66,0.324,71,1.497,72,3.001,73,3.001,84,0.012,95,0.016,96,0.012,119,0.655,121,3.001,123,4.96,127,4.445,128,3.001,129,3.39,130,3.39,131,0.426,132,3.554,133,4.661,134,3.269,135,3.293,136,2.869,137,5.264,138,2.239,139,1.732,140,3.39,198,1.282,201,1.497]],["title/classes/Tutor.html",[66,0.287,513,2.397]],["body/classes/Tutor.html",[3,0.188,4,0.164,5,0.164,7,0.264,14,3.39,15,0.023,17,1.625,21,1.112,35,0.491,37,0.439,65,0.304,66,0.264,82,0.694,84,0.01,95,0.014,96,0.01,136,2.433,138,1.746,175,1.61,185,2.142,187,2.603,197,2.142,201,1.303,202,3.265,203,2.108,204,2.255,205,2.02,206,2.281,207,2.281,208,2.142,221,2.108,223,1.688,274,1.863,276,2.255,277,4.711,289,2.255,290,2.209,291,1.247,478,2.762,482,2.445,513,3.57,514,2.209,515,3.243,516,3.243,517,3.243,518,3.243,519,3.243,520,3.243,521,3.243,522,2.445,523,3.243,524,3.243,525,2.209,526,2.762]],["title/interfaces/User.html",[57,1.069,131,0.377]],["body/interfaces/User.html",[3,0.223,4,0.194,5,0.194,7,0.314,15,0.022,21,1.2,29,1.304,35,0.479,37,0.283,57,1.854,65,0.332,84,0.012,95,0.016,96,0.012,131,0.614,136,1.787,138,2.203,174,1.574,183,3.8,185,2.494,187,3.029,189,1.787,191,1.787,197,1.574,198,1.24,199,2.623,200,2.087,201,1.465,202,2.399,203,1.787,204,1.912,205,2.399,206,2.655,207,2.655,208,2.494,209,2.212]],["title/controllers/UserController.html",[0,1.875,527,2.397]],["body/controllers/UserController.html",[0,1.482,2,1.381,3,0.161,4,0.14,5,0.14,7,0.227,8,1.31,10,2.01,14,2.168,15,0.023,17,1.039,19,1.237,27,1.31,28,1.101,29,1.039,35,0.204,36,3.628,37,0.474,38,2.369,42,2.369,44,0.463,52,1.732,53,2.369,54,2.369,57,1.712,58,2.369,61,2.389,65,0.161,66,0.227,71,1.38,82,1.029,84,0.009,86,2.369,87,2.369,88,2.369,91,1.474,93,2.534,95,0.013,96,0.009,136,1.291,139,1.21,182,2.097,183,1.732,185,1.137,187,1.381,189,1.291,191,1.291,202,1.732,206,1.21,207,1.21,209,1.597,250,1.889,273,3.041,297,2.369,338,3.068,340,3.068,341,1.732,345,1.894,348,2.771,360,2.369,363,2.771,364,2.337,376,2.369,505,1.894,522,2.097,527,2.771,528,2.097,529,2.781,530,4.069,531,4.069,532,2.781,533,2.781,534,2.781,535,2.781,536,2.781,537,2.781,538,2.781,539,2.781,540,2.781,541,2.781,542,2.781,543,2.369,544,2.369,545,2.097,546,2.781,547,2.781,548,2.369,549,2.781,550,2.781,551,2.097,552,2.369,553,2.369,554,3.466,555,2.781,556,2.781,557,2.781,558,2.781,559,2.781,560,2.781,561,2.781,562,2.781,563,2.781,564,2.781,565,2.781,566,2.781,567,4.069,568,2.781,569,2.781,570,2.781,571,2.781,572,2.781,573,2.781,574,2.781,575,2.781,576,2.781,577,2.781,578,2.781]],["title/modules/UserModule.html",[97,1.633,111,1.875]],["body/modules/UserModule.html",[2,2.472,3,0.215,4,0.187,5,0.187,15,0.023,28,1.348,37,0.484,44,0.617,61,3.461,65,0.215,66,0.302,82,0.793,84,0.012,95,0.015,96,0.012,97,2.609,99,1.721,100,1.975,101,2.309,102,2.309,103,1.975,104,3.501,105,3.501,111,3.513,112,3.101,113,2.309,114,2.309,116,2.309,176,2.129,289,2.472,291,1.425,318,3.754,319,3.158,323,2.525,325,3.158,472,2.309,486,3.391,507,3.391,513,2.525,525,2.525,527,3.829,548,3.158,551,2.795,552,3.158,579,3.158,580,3.158,581,3.158,582,2.795,583,3.158,584,3.707,585,3.158,586,3.158]],["title/injectables/UserService.html",[61,1.747,119,0.442]],["body/injectables/UserService.html",[3,0.152,4,0.132,5,0.132,7,0.213,8,1.253,10,2.234,15,0.023,17,1.403,19,1.562,21,1.019,27,1.769,28,1.487,29,1.403,35,0.403,36,3.501,37,0.438,44,0.435,57,1.75,61,1.931,65,0.225,66,0.213,67,1.59,68,2.649,71,1.474,82,1.275,84,0.008,91,1.862,95,0.012,96,0.008,119,0.488,120,0.948,133,1.973,134,1.299,135,1.394,171,3.501,173,2.228,176,1.503,182,1.973,189,1.214,208,1.59,222,3.177,223,0.843,251,2.237,273,2.953,291,1.006,332,2.228,338,1.973,340,1.973,341,1.63,342,2.228,364,2.234,472,1.63,484,1.973,505,1.782,543,2.228,544,2.228,551,1.973,583,2.228,587,1.973,588,3.89,589,4.643,590,3.89,591,3.89,592,2.616,593,4.643,594,2.616,595,3.89,596,3.89,597,2.616,598,3.89,599,2.616,600,3.89,601,2.616,602,3.89,603,2.616,604,2.616,605,1.973,606,2.616,607,2.616,608,2.616,609,2.616,610,2.616,611,2.616,612,2.616,613,3.89,614,2.616,615,3.89,616,2.616,617,3.89,618,2.616]],["title/coverage.html",[619,3.624]],["body/coverage.html",[0,2.246,1,1.521,5,0.113,6,1.903,15,0.023,35,0.164,50,1.19,52,1.391,55,1.521,57,1.049,59,1.19,61,1.109,66,0.418,84,0.007,95,0.011,96,0.007,99,1.037,103,1.19,119,0.793,121,2.602,131,0.7,132,1.521,145,1.391,146,1.391,153,1.283,161,1.903,172,1.684,174,0.913,176,1.283,197,0.913,199,2.871,204,1.109,210,1.19,211,2.944,224,1.19,228,1.19,236,1.19,244,0.972,256,3.15,257,2.939,266,1.838,268,1.391,269,2.626,270,2.626,271,1.391,272,1.391,275,2.35,293,1.521,295,1.521,296,1.903,306,1.283,308,1.521,317,1.684,323,2.35,326,1.903,333,1.521,343,2.602,344,1.903,345,2.35,346,1.903,348,1.521,349,1.903,364,1.283,366,1.903,367,2.602,387,2.953,415,1.283,418,1.283,426,1.283,444,1.903,462,1.903,464,1.903,472,1.391,473,2.35,486,1.521,495,2.35,507,1.521,513,1.521,514,2.35,525,1.521,527,1.521,528,2.602,545,1.684,582,1.684,587,1.684,605,1.684,619,1.684,620,2.234,621,2.234,622,2.234,623,5.418,624,5.648,625,5.987,626,6.731,627,6.472,628,1.903,629,1.903,630,1.903,631,1.903,632,1.903,633,1.903,634,3.451,635,1.903,636,2.234,637,3.451,638,3.451,639,2.234,640,2.939,641,2.234,642,1.903,643,1.903,644,1.903,645,2.234,646,2.234,647,2.234]],["title/dependencies.html",[100,2.255,648,2.937]],["body/dependencies.html",[15,0.023,44,0.68,46,2.179,48,2.547,49,3.308,84,0.013,95,0.016,96,0.013,100,2.179,128,3.083,149,2.348,151,2.348,223,1.9,291,1.572,356,3.483,361,3.483,401,2.785,436,2.547,452,4.449,469,3.483,506,3.083,649,5.9,650,4.089,651,4.089,652,4.089,653,4.089,654,4.089,655,4.089,656,4.089,657,4.089,658,4.089,659,4.089,660,4.089,661,4.089,662,4.089,663,4.089,664,4.089,665,4.089,666,4.089,667,4.089,668,4.089,669,3.483,670,3.483,671,4.089,672,4.089,673,4.089,674,4.089,675,4.089,676,4.089,677,4.089,678,4.089,679,4.089,680,4.089,681,4.089,682,4.089]],["title/miscellaneous/functions.html",[683,1.687,684,3.605]],["body/miscellaneous/functions.html",[7,0.418,15,0.021,19,1.558,27,1.651,28,1.388,29,1.309,35,0.376,84,0.016,93,3.193,95,0.019,96,0.016,103,3.483,528,3.866,553,4.367,554,4.367,635,4.367,644,5.209,683,2.945,684,4.367,685,5.127,686,5.127]],["title/index.html",[7,0.239,687,2.937,688,2.937]],["body/index.html",[4,0.199,15,0.022,84,0.012,95,0.016,96,0.012,197,1.61,260,2.263,619,2.971,689,3.94,690,3.94,691,5.185,692,3.94,693,3.94,694,3.94,695,3.94,696,3.94,697,3.94,698,5.795,699,3.94,700,3.94,701,3.94,702,3.94,703,6.695,704,3.94,705,3.94,706,3.94,707,6.568,708,3.94,709,3.94,710,5.185,711,3.94,712,3.94,713,3.94,714,3.94,715,5.185,716,5.185,717,3.94,718,3.94,719,3.94,720,5.185,721,5.185,722,3.94,723,3.94,724,3.94,725,3.94,726,3.94,727,3.356,728,3.94,729,3.94,730,3.94,731,3.94,732,3.94,733,3.94,734,3.94,735,3.94,736,3.94,737,3.94,738,3.94,739,3.94,740,3.94,741,3.94,742,3.94,743,3.94,744,3.94]],["title/modules.html",[99,2.231]],["body/modules.html",[15,0.019,84,0.016,95,0.019,96,0.016,98,3.507,99,2.39,109,2.957,110,2.957,111,2.743,727,5.774,745,6.779,746,6.779,747,6.779]],["title/overview.html",[748,4.093]],["body/overview.html",[2,1.84,15,0.022,50,3.513,59,2.995,61,3.274,84,0.012,95,0.015,96,0.012,97,1.721,98,4.673,99,1.721,100,1.975,101,2.309,102,2.309,103,1.975,104,2.309,105,2.309,106,3.158,107,3.158,108,3.158,109,4.004,110,3.787,111,3.513,112,3.101,113,2.309,114,2.309,120,1.343,141,3.158,142,3.158,144,3.158,145,3.501,146,3.501,198,1.194,244,2.446,274,2.129,306,3.229,315,3.158,316,3.158,579,3.158,580,3.158,581,3.158,748,3.158,749,3.707,750,3.707,751,3.707,752,3.707,753,3.707]],["title/miscellaneous/typealiases.html",[683,1.687,754,4.233]],["body/miscellaneous/typealiases.html",[7,0.4,15,0.019,35,0.438,57,1.812,84,0.015,95,0.019,96,0.015,269,3.061,270,3.714,273,3.425,275,3.348,292,4.496,473,3.348,484,4.496,493,4.187,495,3.348,505,4.061,514,3.348,522,4.496,587,3.706,683,2.823,755,4.916,756,4.187,757,4.187,758,4.187,759,4.187,760,4.916,761,4.187]],["title/miscellaneous/variables.html",[683,1.687,762,3.605]],["body/miscellaneous/variables.html",[7,0.202,10,1.276,15,0.023,21,0.833,28,1.355,35,0.394,40,2.112,57,1.136,71,1.436,82,1.207,84,0.008,91,1.629,93,1.545,95,0.012,96,0.008,99,1.735,109,1.424,110,1.424,111,1.321,116,2.328,148,3.183,160,3.183,172,2.818,185,1.014,187,1.231,189,1.151,191,1.151,206,1.079,207,1.079,208,1.838,209,1.424,227,2.146,249,1.151,250,1.151,251,1.626,256,1.079,275,1.689,289,2.666,293,3.063,294,2.112,317,1.87,318,2.818,323,3.409,324,2.112,359,5.628,371,2.112,387,1.545,405,4.116,415,2.146,416,1.689,417,1.689,418,1.424,419,1.689,426,1.424,473,1.689,486,3.063,487,2.112,495,1.689,506,1.87,507,3.409,508,2.112,514,1.689,525,2.545,526,2.112,545,2.818,582,1.87,585,2.112,586,3.183,605,2.818,628,2.112,629,3.183,630,2.112,631,2.112,632,3.183,633,2.112,640,2.112,642,2.112,643,3.183,669,2.112,670,2.112,683,1.424,756,2.112,757,2.112,758,2.112,759,2.112,761,2.112,762,2.112,763,2.48,764,2.48,765,3.737,766,2.48,767,2.48,768,2.48,769,2.48,770,2.48,771,2.48,772,2.48,773,2.48,774,2.48,775,2.48,776,5.006,777,2.48,778,2.48,779,2.48,780,2.48,781,3.737,782,2.48,783,3.737,784,2.48,785,3.737,786,2.48,787,2.48,788,2.48,789,2.48,790,2.48,791,2.48,792,2.48,793,2.48,794,2.48,795,2.48,796,2.48,797,2.48,798,2.48,799,2.48]]],"invertedIndex":[["",{"_index":15,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"interfaces/Author.html":{},"interfaces/CollationDocument.html":{},"interfaces/Course.html":{},"interfaces/CreateStudentDto.html":{},"interfaces/CreateTutorDto.html":{},"interfaces/CreateUserDto.html":{},"classes/Feed.html":{},"controllers/FeedController.html":{},"modules/FeedModule.html":{},"injectables/FeedService.html":{},"interfaces/IFeedController.html":{},"interfaces/IFeedService.html":{},"classes/JoiValidationPipe.html":{},"injectables/JwtAuthGuard.html":{},"injectables/JwtConfigService.html":{},"injectables/JwtStrategy.html":{},"interfaces/Learner.html":{},"injectables/LocalAuthGuard.html":{},"injectables/LocalStrategy.html":{},"classes/Material.html":{},"injectables/MongooseConfigService.html":{},"injectables/MulterConfigService.html":{},"injectables/PaginateModel.html":{},"interfaces/PaginateOptions.html":{},"interfaces/PaginationResult.html":{},"interfaces/PopulateOptions.html":{},"classes/Student.html":{},"interfaces/Todo.html":{},"classes/Tutor.html":{},"interfaces/User.html":{},"controllers/UserController.html":{},"modules/UserModule.html":{},"injectables/UserService.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/functions.html":{},"index.html":{},"modules.html":{},"overview.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["0",{"_index":256,"title":{},"body":{"interfaces/CollationDocument.html":{},"injectables/JwtConfigService.html":{},"injectables/MongooseConfigService.html":{},"injectables/MulterConfigService.html":{},"injectables/PaginateModel.html":{},"interfaces/PaginateOptions.html":{},"interfaces/PaginationResult.html":{},"interfaces/PopulateOptions.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["0.1.13",{"_index":676,"title":{},"body":{"dependencies.html":{}}}],["0.14.0",{"_index":668,"title":{},"body":{"dependencies.html":{}}}],["0.4.1",{"_index":672,"title":{},"body":{"dependencies.html":{}}}],["0.6.3",{"_index":650,"title":{},"body":{"dependencies.html":{}}}],["0/1",{"_index":626,"title":{},"body":{"coverage.html":{}}}],["0/10",{"_index":639,"title":{},"body":{"coverage.html":{}}}],["0/12",{"_index":634,"title":{},"body":{"coverage.html":{}}}],["0/2",{"_index":636,"title":{},"body":{"coverage.html":{}}}],["0/3",{"_index":625,"title":{},"body":{"coverage.html":{}}}],["0/4",{"_index":624,"title":{},"body":{"coverage.html":{}}}],["0/5",{"_index":623,"title":{},"body":{"coverage.html":{}}}],["0/6",{"_index":645,"title":{},"body":{"coverage.html":{}}}],["0/7",{"_index":641,"title":{},"body":{"coverage.html":{}}}],["0/8",{"_index":638,"title":{},"body":{"coverage.html":{}}}],["0/9",{"_index":637,"title":{},"body":{"coverage.html":{}}}],["1",{"_index":248,"title":{},"body":{"interfaces/CollationDocument.html":{},"injectables/PaginateModel.html":{},"interfaces/PaginateOptions.html":{},"interfaces/PaginationResult.html":{},"interfaces/PopulateOptions.html":{}}}],["1.0.0",{"_index":674,"title":{},"body":{"dependencies.html":{}}}],["10",{"_index":249,"title":{},"body":{"interfaces/CollationDocument.html":{},"injectables/JwtConfigService.html":{},"injectables/MongooseConfigService.html":{},"injectables/MulterConfigService.html":{},"injectables/PaginateModel.html":{},"interfaces/PaginateOptions.html":{},"interfaces/PaginationResult.html":{},"interfaces/PopulateOptions.html":{},"miscellaneous/variables.html":{}}}],["12",{"_index":751,"title":{},"body":{"overview.html":{}}}],["15",{"_index":753,"title":{},"body":{"overview.html":{}}}],["17.4.0",{"_index":664,"title":{},"body":{"dependencies.html":{}}}],["1hr",{"_index":443,"title":{},"body":{"injectables/JwtConfigService.html":{},"injectables/MongooseConfigService.html":{},"injectables/MulterConfigService.html":{}}}],["2.1.4",{"_index":657,"title":{},"body":{"dependencies.html":{}}}],["3",{"_index":750,"title":{},"body":{"overview.html":{}}}],["3.0.2",{"_index":678,"title":{},"body":{"dependencies.html":{}}}],["4",{"_index":749,"title":{},"body":{"overview.html":{}}}],["4.0.0",{"_index":673,"title":{},"body":{"dependencies.html":{}}}],["4.1.2",{"_index":663,"title":{},"body":{"dependencies.html":{}}}],["4.1.6",{"_index":682,"title":{},"body":{"dependencies.html":{}}}],["4.17.21",{"_index":665,"title":{},"body":{"dependencies.html":{}}}],["4.8.0",{"_index":659,"title":{},"body":{"dependencies.html":{}}}],["5",{"_index":752,"title":{},"body":{"overview.html":{}}}],["5.0.1",{"_index":661,"title":{},"body":{"dependencies.html":{}}}],["5.12.7",{"_index":666,"title":{},"body":{"dependencies.html":{}}}],["5000",{"_index":408,"title":{},"body":{"injectables/JwtConfigService.html":{},"injectables/MongooseConfigService.html":{},"injectables/MulterConfigService.html":{}}}],["6.6.6",{"_index":679,"title":{},"body":{"dependencies.html":{}}}],["7.1.1",{"_index":671,"title":{},"body":{"dependencies.html":{}}}],["7.1.5",{"_index":654,"title":{},"body":{"dependencies.html":{}}}],["7.2.0",{"_index":652,"title":{},"body":{"dependencies.html":{}}}],["7.2.4",{"_index":653,"title":{},"body":{"dependencies.html":{}}}],["7.6.15",{"_index":649,"title":{},"body":{"dependencies.html":{}}}],["_",{"_index":400,"title":{},"body":{"injectables/JwtConfigService.html":{},"injectables/MongooseConfigService.html":{},"injectables/MulterConfigService.html":{}}}],["_.split(str",{"_index":417,"title":{},"body":{"injectables/JwtConfigService.html":{},"injectables/MongooseConfigService.html":{},"injectables/MulterConfigService.html":{},"miscellaneous/variables.html":{}}}],["_id",{"_index":183,"title":{},"body":{"injectables/AuthService.html":{},"interfaces/Author.html":{},"interfaces/Learner.html":{},"interfaces/User.html":{},"controllers/UserController.html":{}}}],["access_token",{"_index":195,"title":{},"body":{"injectables/AuthService.html":{}}}],["aliases",{"_index":755,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["alternate",{"_index":212,"title":{},"body":{"interfaces/CollationDocument.html":{},"injectables/PaginateModel.html":{},"interfaces/PaginateOptions.html":{},"interfaces/PaginationResult.html":{},"interfaces/PopulateOptions.html":{}}}],["amazing",{"_index":728,"title":{},"body":{"index.html":{}}}],["app",{"_index":705,"title":{},"body":{"index.html":{}}}],["app.controller",{"_index":117,"title":{},"body":{"modules/AppModule.html":{}}}],["app.service",{"_index":60,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{}}}],["appcontroller",{"_index":1,"title":{"controllers/AppController.html":{}},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"coverage.html":{}}}],["applications",{"_index":697,"title":{},"body":{"index.html":{}}}],["appmodule",{"_index":98,"title":{"modules/AppModule.html":{}},"body":{"modules/AppModule.html":{},"modules.html":{},"overview.html":{}}}],["appservice",{"_index":59,"title":{"injectables/AppService.html":{}},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"interfaces/Todo.html":{},"coverage.html":{},"overview.html":{}}}],["argumentmetadata",{"_index":357,"title":{},"body":{"classes/JoiValidationPipe.html":{}}}],["array",{"_index":203,"title":{},"body":{"interfaces/Author.html":{},"interfaces/CollationDocument.html":{},"interfaces/Learner.html":{},"injectables/PaginateModel.html":{},"interfaces/PaginateOptions.html":{},"interfaces/PaginationResult.html":{},"interfaces/PopulateOptions.html":{},"classes/Tutor.html":{},"interfaces/User.html":{}}}],["async",{"_index":10,"title":{},"body":{"controllers/AppController.html":{},"injectables/AuthService.html":{},"interfaces/CollationDocument.html":{},"controllers/FeedController.html":{},"injectables/FeedService.html":{},"injectables/JwtStrategy.html":{},"injectables/LocalStrategy.html":{},"injectables/PaginateModel.html":{},"interfaces/PaginateOptions.html":{},"interfaces/PaginationResult.html":{},"interfaces/PopulateOptions.html":{},"controllers/UserController.html":{},"injectables/UserService.html":{},"miscellaneous/variables.html":{}}}],["asyncmodelfactory",{"_index":792,"title":{},"body":{"miscellaneous/variables.html":{}}}],["auth.guard",{"_index":54,"title":{},"body":{"controllers/AppController.html":{},"controllers/UserController.html":{}}}],["auth.guard.ts",{"_index":367,"title":{},"body":{"injectables/JwtAuthGuard.html":{},"injectables/LocalAuthGuard.html":{},"coverage.html":{}}}],["auth.guard.ts:11",{"_index":372,"title":{},"body":{"injectables/JwtAuthGuard.html":{}}}],["auth.guard.ts:16",{"_index":375,"title":{},"body":{"injectables/JwtAuthGuard.html":{}}}],["auth.service",{"_index":156,"title":{},"body":{"modules/AuthModule.html":{},"injectables/LocalStrategy.html":{}}}],["auth/auth.service",{"_index":51,"title":{},"body":{"controllers/AppController.html":{}}}],["auth/jwt",{"_index":53,"title":{},"body":{"controllers/AppController.html":{},"controllers/UserController.html":{}}}],["auth/local",{"_index":56,"title":{},"body":{"controllers/AppController.html":{}}}],["authguard",{"_index":45,"title":{},"body":{"controllers/AppController.html":{},"injectables/JwtAuthGuard.html":{},"injectables/LocalAuthGuard.html":{}}}],["authguard('jwt",{"_index":379,"title":{},"body":{"injectables/JwtAuthGuard.html":{}}}],["authguard('local",{"_index":463,"title":{},"body":{"injectables/LocalAuthGuard.html":{}}}],["authmodule",{"_index":109,"title":{"modules/AuthModule.html":{}},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules.html":{},"overview.html":{},"miscellaneous/variables.html":{}}}],["author",{"_index":197,"title":{"interfaces/Author.html":{}},"body":{"interfaces/Author.html":{},"interfaces/Course.html":{},"interfaces/CreateStudentDto.html":{},"interfaces/CreateTutorDto.html":{},"interfaces/CreateUserDto.html":{},"interfaces/Learner.html":{},"classes/Tutor.html":{},"interfaces/User.html":{},"coverage.html":{},"index.html":{}}}],["authservice",{"_index":50,"title":{"injectables/AuthService.html":{}},"body":{"controllers/AppController.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"injectables/LocalStrategy.html":{},"coverage.html":{},"overview.html":{}}}],["autopopulate",{"_index":667,"title":{},"body":{"dependencies.html":{}}}],["await",{"_index":91,"title":{},"body":{"controllers/AppController.html":{},"injectables/AuthService.html":{},"interfaces/CollationDocument.html":{},"controllers/FeedController.html":{},"injectables/FeedService.html":{},"injectables/LocalStrategy.html":{},"injectables/PaginateModel.html":{},"interfaces/PaginateOptions.html":{},"interfaces/PaginationResult.html":{},"interfaces/PopulateOptions.html":{},"controllers/UserController.html":{},"injectables/UserService.html":{},"miscellaneous/variables.html":{}}}],["axios",{"_index":130,"title":{},"body":{"injectables/AppService.html":{},"interfaces/Todo.html":{}}}],["axiosresponse",{"_index":129,"title":{},"body":{"injectables/AppService.html":{},"interfaces/Todo.html":{}}}],["backers",{"_index":729,"title":{},"body":{"index.html":{}}}],["backwards",{"_index":213,"title":{},"body":{"interfaces/CollationDocument.html":{},"injectables/PaginateModel.html":{},"interfaces/PaginateOptions.html":{},"interfaces/PaginationResult.html":{},"interfaces/PopulateOptions.html":{}}}],["badrequestexception",{"_index":360,"title":{},"body":{"classes/JoiValidationPipe.html":{},"controllers/UserController.html":{}}}],["badrequestexception(error",{"_index":578,"title":{},"body":{"controllers/UserController.html":{}}}],["badrequestexception(error.message",{"_index":365,"title":{},"body":{"classes/JoiValidationPipe.html":{}}}],["bcrypt",{"_index":660,"title":{},"body":{"dependencies.html":{}}}],["bcrypt.compare(password",{"_index":786,"title":{},"body":{"miscellaneous/variables.html":{}}}],["bcrypt.gensalt(saltrounds",{"_index":782,"title":{},"body":{"miscellaneous/variables.html":{}}}],["bcrypt.hash(password",{"_index":784,"title":{},"body":{"miscellaneous/variables.html":{}}}],["beautiful",{"_index":669,"title":{},"body":{"dependencies.html":{},"miscellaneous/variables.html":{}}}],["body",{"_index":36,"title":{},"body":{"controllers/AppController.html":{},"controllers/UserController.html":{},"injectables/UserService.html":{}}}],["boolean",{"_index":138,"title":{},"body":{"injectables/AppService.html":{},"interfaces/Author.html":{},"interfaces/CollationDocument.html":{},"interfaces/Learner.html":{},"injectables/PaginateModel.html":{},"interfaces/PaginateOptions.html":{},"interfaces/PaginationResult.html":{},"interfaces/PopulateOptions.html":{},"classes/Student.html":{},"interfaces/Todo.html":{},"classes/Tutor.html":{},"interfaces/User.html":{}}}],["bootstrap",{"_index":103,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/FeedModule.html":{},"modules/UserModule.html":{},"coverage.html":{},"miscellaneous/functions.html":{},"overview.html":{}}}],["browse",{"_index":747,"title":{},"body":{"modules.html":{}}}],["browser",{"_index":745,"title":{},"body":{"modules.html":{}}}],["buffer",{"_index":477,"title":{},"body":{"classes/Material.html":{}}}],["building",{"_index":692,"title":{},"body":{"index.html":{}}}],["canactivate",{"_index":368,"title":{},"body":{"injectables/JwtAuthGuard.html":{}}}],["canactivate(context",{"_index":370,"title":{},"body":{"injectables/JwtAuthGuard.html":{}}}],["casefirst",{"_index":214,"title":{},"body":{"interfaces/CollationDocument.html":{},"injectables/PaginateModel.html":{},"interfaces/PaginateOptions.html":{},"interfaces/PaginationResult.html":{},"interfaces/PopulateOptions.html":{}}}],["caselevel",{"_index":215,"title":{},"body":{"interfaces/CollationDocument.html":{},"injectables/PaginateModel.html":{},"interfaces/PaginateOptions.html":{},"interfaces/PaginationResult.html":{},"interfaces/PopulateOptions.html":{}}}],["catch",{"_index":340,"title":{},"body":{"injectables/FeedService.html":{},"controllers/UserController.html":{},"injectables/UserService.html":{}}}],["cb",{"_index":432,"title":{},"body":{"injectables/JwtConfigService.html":{},"injectables/MongooseConfigService.html":{},"injectables/MulterConfigService.html":{}}}],["cb(null",{"_index":434,"title":{},"body":{"injectables/JwtConfigService.html":{},"injectables/MongooseConfigService.html":{},"injectables/MulterConfigService.html":{}}}],["class",{"_index":66,"title":{"classes/Feed.html":{},"classes/JoiValidationPipe.html":{},"classes/Material.html":{},"classes/Student.html":{},"classes/Tutor.html":{}},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"interfaces/CollationDocument.html":{},"classes/Feed.html":{},"controllers/FeedController.html":{},"modules/FeedModule.html":{},"injectables/FeedService.html":{},"classes/JoiValidationPipe.html":{},"injectables/JwtAuthGuard.html":{},"injectables/JwtConfigService.html":{},"injectables/JwtStrategy.html":{},"injectables/LocalAuthGuard.html":{},"injectables/LocalStrategy.html":{},"classes/Material.html":{},"injectables/MongooseConfigService.html":{},"injectables/MulterConfigService.html":{},"injectables/PaginateModel.html":{},"interfaces/PaginateOptions.html":{},"interfaces/PaginationResult.html":{},"interfaces/PopulateOptions.html":{},"classes/Student.html":{},"interfaces/Todo.html":{},"classes/Tutor.html":{},"controllers/UserController.html":{},"modules/UserModule.html":{},"injectables/UserService.html":{},"coverage.html":{}}}],["classes",{"_index":274,"title":{},"body":{"classes/Feed.html":{},"classes/JoiValidationPipe.html":{},"classes/Material.html":{},"classes/Student.html":{},"classes/Tutor.html":{},"overview.html":{}}}],["cluster_appmodule",{"_index":106,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_appmodule_imports",{"_index":107,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_appmodule_providers",{"_index":108,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_authmodule",{"_index":141,"title":{},"body":{"modules/AuthModule.html":{},"overview.html":{}}}],["cluster_authmodule_exports",{"_index":142,"title":{},"body":{"modules/AuthModule.html":{},"overview.html":{}}}],["cluster_authmodule_imports",{"_index":143,"title":{},"body":{"modules/AuthModule.html":{}}}],["cluster_authmodule_providers",{"_index":144,"title":{},"body":{"modules/AuthModule.html":{},"overview.html":{}}}],["cluster_feedmodule",{"_index":315,"title":{},"body":{"modules/FeedModule.html":{},"overview.html":{}}}],["cluster_feedmodule_providers",{"_index":316,"title":{},"body":{"modules/FeedModule.html":{},"overview.html":{}}}],["cluster_usermodule",{"_index":579,"title":{},"body":{"modules/UserModule.html":{},"overview.html":{}}}],["cluster_usermodule_exports",{"_index":580,"title":{},"body":{"modules/UserModule.html":{},"overview.html":{}}}],["cluster_usermodule_providers",{"_index":581,"title":{},"body":{"modules/UserModule.html":{},"overview.html":{}}}],["collation",{"_index":234,"title":{},"body":{"interfaces/CollationDocument.html":{},"injectables/PaginateModel.html":{},"interfaces/PaginateOptions.html":{},"interfaces/PaginationResult.html":{},"interfaces/PopulateOptions.html":{}}}],["collationdocument",{"_index":210,"title":{"interfaces/CollationDocument.html":{}},"body":{"interfaces/CollationDocument.html":{},"injectables/PaginateModel.html":{},"interfaces/PaginateOptions.html":{},"interfaces/PaginationResult.html":{},"interfaces/PopulateOptions.html":{},"coverage.html":{}}}],["completed",{"_index":137,"title":{},"body":{"injectables/AppService.html":{},"interfaces/Todo.html":{}}}],["config",{"_index":403,"title":{},"body":{"injectables/JwtConfigService.html":{},"injectables/MongooseConfigService.html":{},"injectables/MulterConfigService.html":{}}}],["config/configuration",{"_index":154,"title":{},"body":{"modules/AuthModule.html":{}}}],["config/modules",{"_index":118,"title":{},"body":{"modules/AppModule.html":{}}}],["config_module_options",{"_index":629,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["configmodule",{"_index":148,"title":{},"body":{"modules/AuthModule.html":{},"miscellaneous/variables.html":{}}}],["configmodule.forroot(config_module_options",{"_index":787,"title":{},"body":{"miscellaneous/variables.html":{}}}],["configmoduleoptions",{"_index":771,"title":{},"body":{"miscellaneous/variables.html":{}}}],["configservice",{"_index":391,"title":{},"body":{"injectables/JwtConfigService.html":{},"injectables/JwtStrategy.html":{},"injectables/MongooseConfigService.html":{},"injectables/MulterConfigService.html":{}}}],["configuration",{"_index":419,"title":{},"body":{"injectables/JwtConfigService.html":{},"injectables/MongooseConfigService.html":{},"injectables/MulterConfigService.html":{},"miscellaneous/variables.html":{}}}],["console.log(context",{"_index":380,"title":{},"body":{"injectables/JwtAuthGuard.html":{}}}],["console.log(error",{"_index":342,"title":{},"body":{"injectables/FeedService.html":{},"injectables/UserService.html":{}}}],["console.log(error.keyvalue",{"_index":577,"title":{},"body":{"controllers/UserController.html":{}}}],["console.log(file",{"_index":81,"title":{},"body":{"controllers/AppController.html":{}}}],["const",{"_index":82,"title":{},"body":{"controllers/AppController.html":{},"injectables/AuthService.html":{},"interfaces/CollationDocument.html":{},"classes/Feed.html":{},"controllers/FeedController.html":{},"modules/FeedModule.html":{},"classes/JoiValidationPipe.html":{},"injectables/JwtConfigService.html":{},"injectables/LocalStrategy.html":{},"classes/Material.html":{},"injectables/MongooseConfigService.html":{},"injectables/MulterConfigService.html":{},"injectables/PaginateModel.html":{},"interfaces/PaginateOptions.html":{},"interfaces/PaginationResult.html":{},"interfaces/PopulateOptions.html":{},"classes/Student.html":{},"classes/Tutor.html":{},"controllers/UserController.html":{},"modules/UserModule.html":{},"injectables/UserService.html":{},"miscellaneous/variables.html":{}}}],["constructor",{"_index":67,"title":{},"body":{"controllers/AppController.html":{},"injectables/AppService.html":{},"injectables/AuthService.html":{},"injectables/FeedService.html":{},"classes/JoiValidationPipe.html":{},"injectables/JwtConfigService.html":{},"injectables/JwtStrategy.html":{},"injectables/LocalStrategy.html":{},"injectables/MongooseConfigService.html":{},"injectables/MulterConfigService.html":{},"injectables/UserService.html":{}}}],["constructor(authservice",{"_index":465,"title":{},"body":{"injectables/LocalStrategy.html":{}}}],["constructor(configservice",{"_index":390,"title":{},"body":{"injectables/JwtConfigService.html":{},"injectables/JwtStrategy.html":{},"injectables/MongooseConfigService.html":{},"injectables/MulterConfigService.html":{}}}],["constructor(feedmodel",{"_index":328,"title":{},"body":{"injectables/FeedService.html":{}}}],["constructor(httpservice",{"_index":122,"title":{},"body":{"injectables/AppService.html":{}}}],["constructor(materialmodel",{"_index":592,"title":{},"body":{"injectables/UserService.html":{}}}],["constructor(private",{"_index":139,"title":{},"body":{"injectables/AppService.html":{},"controllers/FeedController.html":{},"classes/JoiValidationPipe.html":{},"injectables/JwtConfigService.html":{},"injectables/JwtStrategy.html":{},"injectables/LocalStrategy.html":{},"injectables/MongooseConfigService.html":{},"injectables/MulterConfigService.html":{},"interfaces/Todo.html":{},"controllers/UserController.html":{}}}],["constructor(schema",{"_index":352,"title":{},"body":{"classes/JoiValidationPipe.html":{}}}],["constructor(userservice",{"_index":163,"title":{},"body":{"injectables/AuthService.html":{}}}],["contants",{"_index":404,"title":{},"body":{"injectables/JwtConfigService.html":{},"injectables/MongooseConfigService.html":{},"injectables/MulterConfigService.html":{}}}],["contenttype",{"_index":474,"title":{},"body":{"classes/Material.html":{}}}],["context",{"_index":373,"title":{},"body":{"injectables/JwtAuthGuard.html":{}}}],["controller",{"_index":0,"title":{"controllers/AppController.html":{},"controllers/FeedController.html":{},"controllers/UserController.html":{}},"body":{"controllers/AppController.html":{},"controllers/FeedController.html":{},"controllers/UserController.html":{},"coverage.html":{}}}],["controller('/feeds",{"_index":311,"title":{},"body":{"controllers/FeedController.html":{}}}],["controller('users",{"_index":565,"title":{},"body":{"controllers/UserController.html":{}}}],["controller.interface",{"_index":310,"title":{},"body":{"controllers/FeedController.html":{}}}],["controller.interface.ts",{"_index":344,"title":{},"body":{"interfaces/IFeedController.html":{},"coverage.html":{}}}],["controllers",{"_index":2,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"modules/AuthModule.html":{},"controllers/FeedController.html":{},"modules/FeedModule.html":{},"controllers/UserController.html":{},"modules/UserModule.html":{},"overview.html":{}}}],["course",{"_index":204,"title":{"interfaces/Course.html":{}},"body":{"interfaces/Author.html":{},"interfaces/Course.html":{},"classes/Feed.html":{},"interfaces/Learner.html":{},"classes/Tutor.html":{},"interfaces/User.html":{},"coverage.html":{}}}],["coursescreated",{"_index":202,"title":{},"body":{"interfaces/Author.html":{},"interfaces/Learner.html":{},"classes/Tutor.html":{},"interfaces/User.html":{},"controllers/UserController.html":{}}}],["coverage",{"_index":619,"title":{"coverage.html":{}},"body":{"coverage.html":{},"index.html":{}}}],["createdat",{"_index":258,"title":{},"body":{"interfaces/Course.html":{},"classes/Feed.html":{}}}],["createdby",{"_index":259,"title":{},"body":{"interfaces/Course.html":{},"classes/Feed.html":{}}}],["createduser",{"_index":574,"title":{},"body":{"controllers/UserController.html":{}}}],["createjwtoptions",{"_index":389,"title":{},"body":{"injectables/JwtConfigService.html":{},"injectables/MongooseConfigService.html":{},"injectables/MulterConfigService.html":{}}}],["creatematerialdto",{"_index":83,"title":{},"body":{"controllers/AppController.html":{},"classes/Material.html":{}}}],["createmongooseoptions",{"_index":423,"title":{},"body":{"injectables/JwtConfigService.html":{},"injectables/MongooseConfigService.html":{},"injectables/MulterConfigService.html":{}}}],["createmulteroptions",{"_index":428,"title":{},"body":{"injectables/JwtConfigService.html":{},"injectables/MongooseConfigService.html":{},"injectables/MulterConfigService.html":{}}}],["createparamdecorator",{"_index":795,"title":{},"body":{"miscellaneous/variables.html":{}}}],["createstudentdto",{"_index":268,"title":{"interfaces/CreateStudentDto.html":{}},"body":{"interfaces/CreateStudentDto.html":{},"interfaces/CreateTutorDto.html":{},"interfaces/CreateUserDto.html":{},"coverage.html":{}}}],["createtutordto",{"_index":272,"title":{"interfaces/CreateTutorDto.html":{}},"body":{"interfaces/CreateStudentDto.html":{},"interfaces/CreateTutorDto.html":{},"interfaces/CreateUserDto.html":{},"coverage.html":{}}}],["createuser",{"_index":588,"title":{},"body":{"injectables/UserService.html":{}}}],["createuser(body",{"_index":596,"title":{},"body":{"injectables/UserService.html":{}}}],["createuserdto",{"_index":271,"title":{"interfaces/CreateUserDto.html":{}},"body":{"interfaces/CreateStudentDto.html":{},"interfaces/CreateTutorDto.html":{},"interfaces/CreateUserDto.html":{},"coverage.html":{}}}],["createuserschema",{"_index":545,"title":{},"body":{"controllers/UserController.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["ctx",{"_index":797,"title":{},"body":{"miscellaneous/variables.html":{}}}],["ctx.switchtohttp().getrequest",{"_index":798,"title":{},"body":{"miscellaneous/variables.html":{}}}],["data",{"_index":93,"title":{},"body":{"controllers/AppController.html":{},"classes/Material.html":{},"controllers/UserController.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["data._id",{"_index":556,"title":{},"body":{"controllers/UserController.html":{}}}],["data.coursescreated",{"_index":561,"title":{},"body":{"controllers/UserController.html":{}}}],["data.email",{"_index":558,"title":{},"body":{"controllers/UserController.html":{}}}],["data.firstname",{"_index":555,"title":{},"body":{"controllers/UserController.html":{}}}],["data.isstudent",{"_index":559,"title":{},"body":{"controllers/UserController.html":{}}}],["data.lastname",{"_index":557,"title":{},"body":{"controllers/UserController.html":{}}}],["data.learningstyle",{"_index":564,"title":{},"body":{"controllers/UserController.html":{}}}],["data.level",{"_index":562,"title":{},"body":{"controllers/UserController.html":{}}}],["data.studentnumber",{"_index":563,"title":{},"body":{"controllers/UserController.html":{}}}],["data.title",{"_index":560,"title":{},"body":{"controllers/UserController.html":{}}}],["database",{"_index":409,"title":{},"body":{"injectables/JwtConfigService.html":{},"injectables/MongooseConfigService.html":{},"injectables/MulterConfigService.html":{}}}],["datalength",{"_index":254,"title":{},"body":{"interfaces/CollationDocument.html":{},"injectables/PaginateModel.html":{},"interfaces/PaginateOptions.html":{},"interfaces/PaginationResult.html":{},"interfaces/PopulateOptions.html":{}}}],["date",{"_index":481,"title":{},"body":{"classes/Material.html":{}}}],["date.now",{"_index":485,"title":{},"body":{"classes/Material.html":{}}}],["declarations",{"_index":102,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/FeedModule.html":{},"modules/UserModule.html":{},"overview.html":{}}}],["decorators",{"_index":14,"title":{},"body":{"controllers/AppController.html":{},"classes/Feed.html":{},"controllers/FeedController.html":{},"classes/Material.html":{},"classes/Student.html":{},"classes/Tutor.html":{},"controllers/UserController.html":{}}}],["decotators/user.decorator",{"_index":58,"title":{},"body":{"controllers/AppController.html":{},"controllers/UserController.html":{}}}],["default",{"_index":405,"title":{},"body":{"injectables/JwtConfigService.html":{},"classes/Material.html":{},"injectables/MongooseConfigService.html":{},"injectables/MulterConfigService.html":{},"miscellaneous/variables.html":{}}}],["defined",{"_index":17,"title":{},"body":{"controllers/AppController.html":{},"injectables/AppService.html":{},"injectables/AuthService.html":{},"classes/Feed.html":{},"controllers/FeedController.html":{},"injectables/FeedService.html":{},"classes/JoiValidationPipe.html":{},"injectables/JwtAuthGuard.html":{},"injectables/JwtConfigService.html":{},"injectables/JwtStrategy.html":{},"injectables/LocalStrategy.html":{},"classes/Material.html":{},"injectables/MongooseConfigService.html":{},"injectables/MulterConfigService.html":{},"injectables/PaginateModel.html":{},"classes/Student.html":{},"classes/Tutor.html":{},"controllers/UserController.html":{},"injectables/UserService.html":{}}}],["delete",{"_index":302,"title":{},"body":{"controllers/FeedController.html":{}}}],["deletefeed",{"_index":299,"title":{},"body":{"controllers/FeedController.html":{},"interfaces/IFeedController.html":{},"interfaces/IFeedService.html":{}}}],["dependencies",{"_index":100,"title":{"dependencies.html":{}},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/FeedModule.html":{},"modules/UserModule.html":{},"dependencies.html":{},"overview.html":{}}}],["description",{"_index":260,"title":{},"body":{"interfaces/Course.html":{},"classes/Feed.html":{},"injectables/JwtConfigService.html":{},"injectables/MongooseConfigService.html":{},"injectables/MulterConfigService.html":{},"index.html":{}}}],["destination",{"_index":430,"title":{},"body":{"injectables/JwtConfigService.html":{},"injectables/MongooseConfigService.html":{},"injectables/MulterConfigService.html":{}}}],["development",{"_index":706,"title":{},"body":{"index.html":{}}}],["diskstorage",{"_index":63,"title":{},"body":{"controllers/AppController.html":{},"injectables/JwtConfigService.html":{},"injectables/MongooseConfigService.html":{},"injectables/MulterConfigService.html":{}}}],["docs",{"_index":237,"title":{},"body":{"interfaces/CollationDocument.html":{},"injectables/PaginateModel.html":{},"interfaces/PaginateOptions.html":{},"interfaces/PaginationResult.html":{},"interfaces/PopulateOptions.html":{}}}],["document",{"_index":221,"title":{},"body":{"interfaces/CollationDocument.html":{},"classes/Feed.html":{},"classes/Material.html":{},"injectables/PaginateModel.html":{},"interfaces/PaginateOptions.html":{},"interfaces/PaginationResult.html":{},"interfaces/PopulateOptions.html":{},"classes/Student.html":{},"classes/Tutor.html":{}}}],["documentation",{"_index":620,"title":{},"body":{"coverage.html":{}}}],["dto/create",{"_index":543,"title":{},"body":{"controllers/UserController.html":{},"injectables/UserService.html":{}}}],["e2e",{"_index":717,"title":{},"body":{"index.html":{}}}],["efficient",{"_index":693,"title":{},"body":{"index.html":{}}}],["email",{"_index":185,"title":{},"body":{"injectables/AuthService.html":{},"interfaces/Author.html":{},"interfaces/CreateStudentDto.html":{},"interfaces/CreateTutorDto.html":{},"interfaces/CreateUserDto.html":{},"interfaces/Learner.html":{},"classes/Student.html":{},"classes/Tutor.html":{},"interfaces/User.html":{},"controllers/UserController.html":{},"miscellaneous/variables.html":{}}}],["endindex",{"_index":253,"title":{},"body":{"interfaces/CollationDocument.html":{},"injectables/PaginateModel.html":{},"interfaces/PaginateOptions.html":{},"interfaces/PaginationResult.html":{},"interfaces/PopulateOptions.html":{}}}],["err",{"_index":376,"title":{},"body":{"injectables/JwtAuthGuard.html":{},"controllers/UserController.html":{}}}],["error",{"_index":341,"title":{},"body":{"injectables/FeedService.html":{},"classes/JoiValidationPipe.html":{},"injectables/JwtAuthGuard.html":{},"controllers/UserController.html":{},"injectables/UserService.html":{}}}],["example",{"_index":388,"title":{},"body":{"injectables/JwtConfigService.html":{},"injectables/MongooseConfigService.html":{},"injectables/MulterConfigService.html":{}}}],["exec",{"_index":609,"title":{},"body":{"injectables/UserService.html":{}}}],["executioncontext",{"_index":371,"title":{},"body":{"injectables/JwtAuthGuard.html":{},"miscellaneous/variables.html":{}}}],["expiresin",{"_index":442,"title":{},"body":{"injectables/JwtConfigService.html":{},"injectables/MongooseConfigService.html":{},"injectables/MulterConfigService.html":{}}}],["export",{"_index":65,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"interfaces/Author.html":{},"interfaces/CollationDocument.html":{},"interfaces/Course.html":{},"interfaces/CreateStudentDto.html":{},"interfaces/CreateTutorDto.html":{},"interfaces/CreateUserDto.html":{},"classes/Feed.html":{},"controllers/FeedController.html":{},"modules/FeedModule.html":{},"injectables/FeedService.html":{},"interfaces/IFeedController.html":{},"interfaces/IFeedService.html":{},"classes/JoiValidationPipe.html":{},"injectables/JwtAuthGuard.html":{},"injectables/JwtConfigService.html":{},"injectables/JwtStrategy.html":{},"interfaces/Learner.html":{},"injectables/LocalAuthGuard.html":{},"injectables/LocalStrategy.html":{},"classes/Material.html":{},"injectables/MongooseConfigService.html":{},"injectables/MulterConfigService.html":{},"injectables/PaginateModel.html":{},"interfaces/PaginateOptions.html":{},"interfaces/PaginationResult.html":{},"interfaces/PopulateOptions.html":{},"classes/Student.html":{},"interfaces/Todo.html":{},"classes/Tutor.html":{},"interfaces/User.html":{},"controllers/UserController.html":{},"modules/UserModule.html":{},"injectables/UserService.html":{}}}],["exports",{"_index":105,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/FeedModule.html":{},"modules/UserModule.html":{},"overview.html":{}}}],["express",{"_index":49,"title":{},"body":{"controllers/AppController.html":{},"injectables/JwtConfigService.html":{},"injectables/MongooseConfigService.html":{},"injectables/MulterConfigService.html":{},"dependencies.html":{}}}],["express.multer.file",{"_index":32,"title":{},"body":{"controllers/AppController.html":{}}}],["extends",{"_index":200,"title":{},"body":{"interfaces/Author.html":{},"interfaces/CreateStudentDto.html":{},"interfaces/CreateTutorDto.html":{},"interfaces/CreateUserDto.html":{},"injectables/JwtAuthGuard.html":{},"injectables/JwtStrategy.html":{},"interfaces/Learner.html":{},"injectables/LocalAuthGuard.html":{},"injectables/LocalStrategy.html":{},"classes/Material.html":{},"interfaces/User.html":{}}}],["extname",{"_index":399,"title":{},"body":{"injectables/JwtConfigService.html":{},"injectables/MongooseConfigService.html":{},"injectables/MulterConfigService.html":{}}}],["extractjwt",{"_index":450,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["extractjwt.fromauthheaderasbearertoken",{"_index":456,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["false",{"_index":458,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["feed",{"_index":266,"title":{"classes/Feed.html":{}},"body":{"interfaces/Course.html":{},"classes/Feed.html":{},"controllers/FeedController.html":{},"modules/FeedModule.html":{},"injectables/FeedService.html":{},"coverage.html":{}}}],["feed.controller",{"_index":321,"title":{},"body":{"modules/FeedModule.html":{}}}],["feed.name",{"_index":324,"title":{},"body":{"modules/FeedModule.html":{},"miscellaneous/variables.html":{}}}],["feed.service",{"_index":307,"title":{},"body":{"controllers/FeedController.html":{},"modules/FeedModule.html":{}}}],["feed/interfaces/feed.interface",{"_index":205,"title":{},"body":{"interfaces/Author.html":{},"classes/Feed.html":{},"interfaces/Learner.html":{},"classes/Tutor.html":{},"interfaces/User.html":{}}}],["feedcontroller",{"_index":295,"title":{"controllers/FeedController.html":{}},"body":{"controllers/FeedController.html":{},"modules/FeedModule.html":{},"coverage.html":{}}}],["feeddocument",{"_index":292,"title":{},"body":{"classes/Feed.html":{},"injectables/FeedService.html":{},"miscellaneous/typealiases.html":{}}}],["feedmodel",{"_index":330,"title":{},"body":{"injectables/FeedService.html":{}}}],["feedmodule",{"_index":110,"title":{"modules/FeedModule.html":{}},"body":{"modules/AppModule.html":{},"modules/FeedModule.html":{},"modules.html":{},"overview.html":{},"miscellaneous/variables.html":{}}}],["feeds",{"_index":298,"title":{},"body":{"controllers/FeedController.html":{}}}],["feedschema",{"_index":293,"title":{},"body":{"classes/Feed.html":{},"modules/FeedModule.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["feedservice",{"_index":306,"title":{"injectables/FeedService.html":{}},"body":{"controllers/FeedController.html":{},"modules/FeedModule.html":{},"injectables/FeedService.html":{},"coverage.html":{},"overview.html":{}}}],["fetchfeed",{"_index":347,"title":{},"body":{"interfaces/IFeedService.html":{}}}],["fetchfeeds",{"_index":327,"title":{},"body":{"injectables/FeedService.html":{},"interfaces/IFeedService.html":{}}}],["file",{"_index":5,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"interfaces/Author.html":{},"interfaces/CollationDocument.html":{},"interfaces/Course.html":{},"interfaces/CreateStudentDto.html":{},"interfaces/CreateTutorDto.html":{},"interfaces/CreateUserDto.html":{},"classes/Feed.html":{},"controllers/FeedController.html":{},"modules/FeedModule.html":{},"injectables/FeedService.html":{},"interfaces/IFeedController.html":{},"interfaces/IFeedService.html":{},"classes/JoiValidationPipe.html":{},"injectables/JwtAuthGuard.html":{},"injectables/JwtConfigService.html":{},"injectables/JwtStrategy.html":{},"interfaces/Learner.html":{},"injectables/LocalAuthGuard.html":{},"injectables/LocalStrategy.html":{},"classes/Material.html":{},"injectables/MongooseConfigService.html":{},"injectables/MulterConfigService.html":{},"injectables/PaginateModel.html":{},"interfaces/PaginateOptions.html":{},"interfaces/PaginationResult.html":{},"interfaces/PopulateOptions.html":{},"classes/Student.html":{},"interfaces/Todo.html":{},"classes/Tutor.html":{},"interfaces/User.html":{},"controllers/UserController.html":{},"modules/UserModule.html":{},"injectables/UserService.html":{},"coverage.html":{}}}],["fileinterceptor",{"_index":47,"title":{},"body":{"controllers/AppController.html":{}}}],["filename",{"_index":415,"title":{},"body":{"injectables/JwtConfigService.html":{},"classes/Material.html":{},"injectables/MongooseConfigService.html":{},"injectables/MulterConfigService.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["filename(file.originalname",{"_index":433,"title":{},"body":{"injectables/JwtConfigService.html":{},"injectables/MongooseConfigService.html":{},"injectables/MulterConfigService.html":{}}}],["files",{"_index":261,"title":{},"body":{"interfaces/Course.html":{},"classes/Feed.html":{}}}],["filterquery",{"_index":220,"title":{},"body":{"interfaces/CollationDocument.html":{},"injectables/PaginateModel.html":{},"interfaces/PaginateOptions.html":{},"interfaces/PaginationResult.html":{},"interfaces/PopulateOptions.html":{}}}],["findone",{"_index":589,"title":{},"body":{"injectables/UserService.html":{}}}],["findone(username",{"_index":598,"title":{},"body":{"injectables/UserService.html":{}}}],["firstname",{"_index":206,"title":{},"body":{"interfaces/Author.html":{},"interfaces/CreateStudentDto.html":{},"interfaces/CreateTutorDto.html":{},"interfaces/CreateUserDto.html":{},"interfaces/Learner.html":{},"classes/Student.html":{},"classes/Tutor.html":{},"interfaces/User.html":{},"controllers/UserController.html":{},"miscellaneous/variables.html":{}}}],["formatuserresponsedata",{"_index":644,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["formatuserresponsedata(createduser",{"_index":576,"title":{},"body":{"controllers/UserController.html":{}}}],["formatuserresponsedata(data",{"_index":553,"title":{},"body":{"controllers/UserController.html":{},"miscellaneous/functions.html":{}}}],["formatuserresponsedata(u",{"_index":568,"title":{},"body":{"controllers/UserController.html":{}}}],["framework",{"_index":691,"title":{},"body":{"index.html":{}}}],["function",{"_index":345,"title":{},"body":{"interfaces/IFeedController.html":{},"interfaces/IFeedService.html":{},"controllers/UserController.html":{},"coverage.html":{}}}],["functions",{"_index":684,"title":{"miscellaneous/functions.html":{}},"body":{"miscellaneous/functions.html":{}}}],["get('profile",{"_index":87,"title":{},"body":{"controllers/AppController.html":{},"controllers/UserController.html":{}}}],["get('todos",{"_index":22,"title":{},"body":{"controllers/AppController.html":{}}}],["get()@render('index",{"_index":16,"title":{},"body":{"controllers/AppController.html":{}}}],["getfeed",{"_index":300,"title":{},"body":{"controllers/FeedController.html":{},"interfaces/IFeedController.html":{}}}],["getfeeds",{"_index":301,"title":{},"body":{"controllers/FeedController.html":{},"interfaces/IFeedController.html":{}}}],["gethello",{"_index":9,"title":{},"body":{"controllers/AppController.html":{},"injectables/AppService.html":{},"interfaces/Todo.html":{}}}],["getprofile",{"_index":530,"title":{},"body":{"controllers/UserController.html":{}}}],["getprofile(@user",{"_index":88,"title":{},"body":{"controllers/AppController.html":{},"controllers/UserController.html":{}}}],["getprofile(user",{"_index":532,"title":{},"body":{"controllers/UserController.html":{}}}],["getting",{"_index":687,"title":{"index.html":{}},"body":{}}],["gettodos",{"_index":11,"title":{},"body":{"controllers/AppController.html":{},"injectables/AppService.html":{},"interfaces/Todo.html":{}}}],["grow",{"_index":724,"title":{},"body":{"index.html":{}}}],["handlerequest",{"_index":369,"title":{},"body":{"injectables/JwtAuthGuard.html":{}}}],["handlerequest(err",{"_index":374,"title":{},"body":{"injectables/JwtAuthGuard.html":{}}}],["handling",{"_index":427,"title":{},"body":{"injectables/JwtConfigService.html":{},"injectables/MongooseConfigService.html":{},"injectables/MulterConfigService.html":{}}}],["hash",{"_index":783,"title":{},"body":{"miscellaneous/variables.html":{}}}],["hashed",{"_index":785,"title":{},"body":{"miscellaneous/variables.html":{}}}],["hashpassword",{"_index":605,"title":{},"body":{"injectables/UserService.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["hashpassword(user.password",{"_index":612,"title":{},"body":{"injectables/UserService.html":{}}}],["hasnextpage",{"_index":240,"title":{},"body":{"interfaces/CollationDocument.html":{},"injectables/PaginateModel.html":{},"interfaces/PaginateOptions.html":{},"interfaces/PaginationResult.html":{},"interfaces/PopulateOptions.html":{}}}],["hasprevpage",{"_index":239,"title":{},"body":{"interfaces/CollationDocument.html":{},"injectables/PaginateModel.html":{},"interfaces/PaginateOptions.html":{},"interfaces/PaginationResult.html":{},"interfaces/PopulateOptions.html":{}}}],["hbs",{"_index":662,"title":{},"body":{"dependencies.html":{}}}],["hello",{"_index":72,"title":{},"body":{"controllers/AppController.html":{},"injectables/AppService.html":{},"interfaces/Todo.html":{}}}],["here",{"_index":735,"title":{},"body":{"index.html":{}}}],["httpmodule",{"_index":791,"title":{},"body":{"miscellaneous/variables.html":{}}}],["https://nestjs.com",{"_index":741,"title":{},"body":{"index.html":{}}}],["httpservice",{"_index":123,"title":{},"body":{"injectables/AppService.html":{},"interfaces/Todo.html":{}}}],["httpstatus",{"_index":377,"title":{},"body":{"injectables/JwtAuthGuard.html":{}}}],["httpstatus.unauthorized",{"_index":383,"title":{},"body":{"injectables/JwtAuthGuard.html":{}}}],["id",{"_index":135,"title":{},"body":{"injectables/AppService.html":{},"injectables/AuthService.html":{},"interfaces/Course.html":{},"classes/Feed.html":{},"injectables/JwtStrategy.html":{},"interfaces/Todo.html":{},"injectables/UserService.html":{}}}],["identifier",{"_index":621,"title":{},"body":{"coverage.html":{}}}],["ifeedcontroller",{"_index":308,"title":{"interfaces/IFeedController.html":{}},"body":{"controllers/FeedController.html":{},"interfaces/IFeedController.html":{},"coverage.html":{}}}],["ifeedservice",{"_index":333,"title":{"interfaces/IFeedService.html":{}},"body":{"injectables/FeedService.html":{},"interfaces/IFeedService.html":{},"coverage.html":{}}}],["ignoreexpiration",{"_index":457,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["image",{"_index":267,"title":{},"body":{"interfaces/Course.html":{}}}],["implements",{"_index":276,"title":{},"body":{"classes/Feed.html":{},"controllers/FeedController.html":{},"classes/JoiValidationPipe.html":{},"injectables/JwtConfigService.html":{},"injectables/MongooseConfigService.html":{},"injectables/MulterConfigService.html":{},"classes/Student.html":{},"classes/Tutor.html":{}}}],["import",{"_index":37,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"interfaces/Author.html":{},"interfaces/CollationDocument.html":{},"interfaces/Course.html":{},"interfaces/CreateStudentDto.html":{},"interfaces/CreateTutorDto.html":{},"interfaces/CreateUserDto.html":{},"classes/Feed.html":{},"controllers/FeedController.html":{},"modules/FeedModule.html":{},"injectables/FeedService.html":{},"classes/JoiValidationPipe.html":{},"injectables/JwtAuthGuard.html":{},"injectables/JwtConfigService.html":{},"injectables/JwtStrategy.html":{},"interfaces/Learner.html":{},"injectables/LocalAuthGuard.html":{},"injectables/LocalStrategy.html":{},"classes/Material.html":{},"injectables/MongooseConfigService.html":{},"injectables/MulterConfigService.html":{},"injectables/PaginateModel.html":{},"interfaces/PaginateOptions.html":{},"interfaces/PaginationResult.html":{},"interfaces/PopulateOptions.html":{},"classes/Student.html":{},"interfaces/Todo.html":{},"classes/Tutor.html":{},"interfaces/User.html":{},"controllers/UserController.html":{},"modules/UserModule.html":{},"injectables/UserService.html":{}}}],["imports",{"_index":116,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/FeedModule.html":{},"modules/UserModule.html":{},"miscellaneous/variables.html":{}}}],["index",{"_index":7,"title":{"index.html":{}},"body":{"controllers/AppController.html":{},"injectables/AppService.html":{},"injectables/AuthService.html":{},"interfaces/Author.html":{},"interfaces/CollationDocument.html":{},"interfaces/Course.html":{},"interfaces/CreateUserDto.html":{},"classes/Feed.html":{},"controllers/FeedController.html":{},"injectables/FeedService.html":{},"interfaces/IFeedController.html":{},"interfaces/IFeedService.html":{},"classes/JoiValidationPipe.html":{},"injectables/JwtAuthGuard.html":{},"injectables/JwtConfigService.html":{},"injectables/JwtStrategy.html":{},"interfaces/Learner.html":{},"injectables/LocalStrategy.html":{},"classes/Material.html":{},"injectables/MongooseConfigService.html":{},"injectables/MulterConfigService.html":{},"injectables/PaginateModel.html":{},"interfaces/PaginateOptions.html":{},"interfaces/PaginationResult.html":{},"interfaces/PopulateOptions.html":{},"classes/Student.html":{},"interfaces/Todo.html":{},"classes/Tutor.html":{},"interfaces/User.html":{},"controllers/UserController.html":{},"injectables/UserService.html":{},"miscellaneous/functions.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["info",{"_index":3,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"interfaces/Author.html":{},"interfaces/CollationDocument.html":{},"interfaces/Course.html":{},"interfaces/CreateStudentDto.html":{},"interfaces/CreateTutorDto.html":{},"interfaces/CreateUserDto.html":{},"classes/Feed.html":{},"controllers/FeedController.html":{},"modules/FeedModule.html":{},"injectables/FeedService.html":{},"interfaces/IFeedController.html":{},"interfaces/IFeedService.html":{},"classes/JoiValidationPipe.html":{},"injectables/JwtAuthGuard.html":{},"injectables/JwtConfigService.html":{},"injectables/JwtStrategy.html":{},"interfaces/Learner.html":{},"injectables/LocalAuthGuard.html":{},"injectables/LocalStrategy.html":{},"classes/Material.html":{},"injectables/MongooseConfigService.html":{},"injectables/MulterConfigService.html":{},"injectables/PaginateModel.html":{},"interfaces/PaginateOptions.html":{},"interfaces/PaginationResult.html":{},"interfaces/PopulateOptions.html":{},"classes/Student.html":{},"interfaces/Todo.html":{},"classes/Tutor.html":{},"interfaces/User.html":{},"controllers/UserController.html":{},"modules/UserModule.html":{},"injectables/UserService.html":{}}}],["info.message",{"_index":385,"title":{},"body":{"injectables/JwtAuthGuard.html":{}}}],["inject",{"_index":604,"title":{},"body":{"injectables/UserService.html":{}}}],["injectable",{"_index":119,"title":{"injectables/AppService.html":{},"injectables/AuthService.html":{},"injectables/FeedService.html":{},"injectables/JwtAuthGuard.html":{},"injectables/JwtConfigService.html":{},"injectables/JwtStrategy.html":{},"injectables/LocalAuthGuard.html":{},"injectables/LocalStrategy.html":{},"injectables/MongooseConfigService.html":{},"injectables/MulterConfigService.html":{},"injectables/PaginateModel.html":{},"injectables/UserService.html":{}},"body":{"injectables/AppService.html":{},"injectables/AuthService.html":{},"interfaces/CollationDocument.html":{},"injectables/FeedService.html":{},"injectables/JwtAuthGuard.html":{},"injectables/JwtConfigService.html":{},"injectables/JwtStrategy.html":{},"injectables/LocalAuthGuard.html":{},"injectables/LocalStrategy.html":{},"injectables/MongooseConfigService.html":{},"injectables/MulterConfigService.html":{},"injectables/PaginateModel.html":{},"interfaces/PaginateOptions.html":{},"interfaces/PaginationResult.html":{},"interfaces/PopulateOptions.html":{},"interfaces/Todo.html":{},"injectables/UserService.html":{},"coverage.html":{}}}],["injectables",{"_index":120,"title":{},"body":{"injectables/AppService.html":{},"injectables/AuthService.html":{},"injectables/FeedService.html":{},"injectables/JwtAuthGuard.html":{},"injectables/JwtConfigService.html":{},"injectables/JwtStrategy.html":{},"injectables/LocalAuthGuard.html":{},"injectables/LocalStrategy.html":{},"injectables/MongooseConfigService.html":{},"injectables/MulterConfigService.html":{},"injectables/PaginateModel.html":{},"injectables/UserService.html":{},"overview.html":{}}}],["injectmodel",{"_index":332,"title":{},"body":{"injectables/FeedService.html":{},"injectables/UserService.html":{}}}],["injectmodel(feed.name",{"_index":335,"title":{},"body":{"injectables/FeedService.html":{}}}],["injectmodel(material.name",{"_index":606,"title":{},"body":{"injectables/UserService.html":{}}}],["injectmodel(student.name",{"_index":607,"title":{},"body":{"injectables/UserService.html":{}}}],["installation",{"_index":702,"title":{},"body":{"index.html":{}}}],["installrunning",{"_index":704,"title":{},"body":{"index.html":{}}}],["interface",{"_index":131,"title":{"interfaces/Author.html":{},"interfaces/CollationDocument.html":{},"interfaces/Course.html":{},"interfaces/CreateStudentDto.html":{},"interfaces/CreateTutorDto.html":{},"interfaces/CreateUserDto.html":{},"interfaces/IFeedController.html":{},"interfaces/IFeedService.html":{},"interfaces/Learner.html":{},"interfaces/PaginateOptions.html":{},"interfaces/PaginationResult.html":{},"interfaces/PopulateOptions.html":{},"interfaces/Todo.html":{},"interfaces/User.html":{}},"body":{"injectables/AppService.html":{},"interfaces/Author.html":{},"interfaces/CollationDocument.html":{},"interfaces/Course.html":{},"interfaces/CreateStudentDto.html":{},"interfaces/CreateTutorDto.html":{},"interfaces/CreateUserDto.html":{},"interfaces/IFeedController.html":{},"interfaces/IFeedService.html":{},"interfaces/Learner.html":{},"classes/Material.html":{},"injectables/PaginateModel.html":{},"interfaces/PaginateOptions.html":{},"interfaces/PaginationResult.html":{},"interfaces/PopulateOptions.html":{},"interfaces/Todo.html":{},"interfaces/User.html":{},"coverage.html":{}}}],["interfaces",{"_index":198,"title":{},"body":{"interfaces/Author.html":{},"interfaces/CollationDocument.html":{},"interfaces/Course.html":{},"interfaces/CreateStudentDto.html":{},"interfaces/CreateTutorDto.html":{},"interfaces/CreateUserDto.html":{},"interfaces/IFeedController.html":{},"interfaces/IFeedService.html":{},"interfaces/Learner.html":{},"interfaces/PaginateOptions.html":{},"interfaces/PaginationResult.html":{},"interfaces/PopulateOptions.html":{},"interfaces/Todo.html":{},"interfaces/User.html":{},"overview.html":{}}}],["interfaces/feed",{"_index":309,"title":{},"body":{"controllers/FeedController.html":{},"injectables/FeedService.html":{}}}],["intro",{"_index":262,"title":{},"body":{"interfaces/Course.html":{},"classes/Feed.html":{}}}],["isglobal",{"_index":772,"title":{},"body":{"miscellaneous/variables.html":{}}}],["isstudent",{"_index":187,"title":{},"body":{"injectables/AuthService.html":{},"interfaces/Author.html":{},"interfaces/Learner.html":{},"classes/Student.html":{},"classes/Tutor.html":{},"interfaces/User.html":{},"controllers/UserController.html":{},"miscellaneous/variables.html":{}}}],["joi",{"_index":361,"title":{},"body":{"classes/JoiValidationPipe.html":{},"dependencies.html":{}}}],["joi.boolean().required",{"_index":779,"title":{},"body":{"miscellaneous/variables.html":{}}}],["joi.object().keys",{"_index":774,"title":{},"body":{"miscellaneous/variables.html":{}}}],["joi.string",{"_index":778,"title":{},"body":{"miscellaneous/variables.html":{}}}],["joi.string().email().required",{"_index":775,"title":{},"body":{"miscellaneous/variables.html":{}}}],["joi.string().min(6).required",{"_index":777,"title":{},"body":{"miscellaneous/variables.html":{}}}],["joi.string().required",{"_index":776,"title":{},"body":{"miscellaneous/variables.html":{}}}],["join",{"_index":731,"title":{},"body":{"index.html":{}}}],["joivalidationpipe",{"_index":348,"title":{"classes/JoiValidationPipe.html":{}},"body":{"classes/JoiValidationPipe.html":{},"controllers/UserController.html":{},"coverage.html":{}}}],["joivalidationpipe(createuserschema",{"_index":572,"title":{},"body":{"controllers/UserController.html":{}}}],["jwt",{"_index":436,"title":{},"body":{"injectables/JwtConfigService.html":{},"injectables/JwtStrategy.html":{},"injectables/MongooseConfigService.html":{},"injectables/MulterConfigService.html":{},"dependencies.html":{}}}],["jwt.strategy",{"_index":157,"title":{},"body":{"modules/AuthModule.html":{}}}],["jwtauthguard",{"_index":52,"title":{"injectables/JwtAuthGuard.html":{}},"body":{"controllers/AppController.html":{},"injectables/JwtAuthGuard.html":{},"controllers/UserController.html":{},"coverage.html":{}}}],["jwtconfigservice",{"_index":153,"title":{"injectables/JwtConfigService.html":{}},"body":{"modules/AuthModule.html":{},"injectables/JwtConfigService.html":{},"injectables/MongooseConfigService.html":{},"injectables/MulterConfigService.html":{},"coverage.html":{}}}],["jwtfromrequest",{"_index":455,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["jwtmodule",{"_index":150,"title":{},"body":{"modules/AuthModule.html":{}}}],["jwtmodule.registerasync",{"_index":159,"title":{},"body":{"modules/AuthModule.html":{}}}],["jwtmoduleoptions",{"_index":394,"title":{},"body":{"injectables/JwtConfigService.html":{},"injectables/MongooseConfigService.html":{},"injectables/MulterConfigService.html":{}}}],["jwtoptionsfactory",{"_index":402,"title":{},"body":{"injectables/JwtConfigService.html":{},"injectables/MongooseConfigService.html":{},"injectables/MulterConfigService.html":{}}}],["jwtsecret",{"_index":413,"title":{},"body":{"injectables/JwtConfigService.html":{},"injectables/MongooseConfigService.html":{},"injectables/MulterConfigService.html":{}}}],["jwtservice",{"_index":164,"title":{},"body":{"injectables/AuthService.html":{}}}],["jwtstrategy",{"_index":145,"title":{"injectables/JwtStrategy.html":{}},"body":{"modules/AuthModule.html":{},"injectables/JwtStrategy.html":{},"coverage.html":{},"overview.html":{}}}],["kamil",{"_index":738,"title":{},"body":{"index.html":{}}}],["lastname",{"_index":207,"title":{},"body":{"interfaces/Author.html":{},"interfaces/CreateStudentDto.html":{},"interfaces/CreateTutorDto.html":{},"interfaces/CreateUserDto.html":{},"interfaces/Learner.html":{},"classes/Student.html":{},"classes/Tutor.html":{},"interfaces/User.html":{},"controllers/UserController.html":{},"miscellaneous/variables.html":{}}}],["learner",{"_index":174,"title":{"interfaces/Learner.html":{}},"body":{"injectables/AuthService.html":{},"interfaces/Author.html":{},"interfaces/CreateStudentDto.html":{},"interfaces/CreateTutorDto.html":{},"interfaces/CreateUserDto.html":{},"interfaces/Learner.html":{},"classes/Material.html":{},"classes/Student.html":{},"interfaces/User.html":{},"coverage.html":{}}}],["learningstyle",{"_index":191,"title":{},"body":{"injectables/AuthService.html":{},"interfaces/Author.html":{},"interfaces/Course.html":{},"classes/Feed.html":{},"interfaces/Learner.html":{},"classes/Student.html":{},"interfaces/User.html":{},"controllers/UserController.html":{},"miscellaneous/variables.html":{}}}],["legend",{"_index":101,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/FeedModule.html":{},"modules/UserModule.html":{},"overview.html":{}}}],["level",{"_index":209,"title":{},"body":{"interfaces/Author.html":{},"interfaces/Learner.html":{},"classes/Student.html":{},"interfaces/User.html":{},"controllers/UserController.html":{},"miscellaneous/variables.html":{}}}],["license",{"_index":744,"title":{},"body":{"index.html":{}}}],["licensed",{"_index":721,"title":{},"body":{"index.html":{}}}],["limit",{"_index":232,"title":{},"body":{"interfaces/CollationDocument.html":{},"injectables/PaginateModel.html":{},"interfaces/PaginateOptions.html":{},"interfaces/PaginationResult.html":{},"interfaces/PopulateOptions.html":{}}}],["literal",{"_index":493,"title":{},"body":{"injectables/PaginateModel.html":{},"miscellaneous/typealiases.html":{}}}],["load",{"_index":773,"title":{},"body":{"miscellaneous/variables.html":{}}}],["local",{"_index":469,"title":{},"body":{"injectables/LocalStrategy.html":{},"dependencies.html":{}}}],["local.strategy",{"_index":158,"title":{},"body":{"modules/AuthModule.html":{}}}],["localauthguard",{"_index":55,"title":{"injectables/LocalAuthGuard.html":{}},"body":{"controllers/AppController.html":{},"injectables/LocalAuthGuard.html":{},"coverage.html":{}}}],["locale",{"_index":216,"title":{},"body":{"interfaces/CollationDocument.html":{},"injectables/PaginateModel.html":{},"interfaces/PaginateOptions.html":{},"interfaces/PaginationResult.html":{},"interfaces/PopulateOptions.html":{}}}],["localstrategy",{"_index":146,"title":{"injectables/LocalStrategy.html":{}},"body":{"modules/AuthModule.html":{},"injectables/LocalStrategy.html":{},"coverage.html":{},"overview.html":{}}}],["lodash",{"_index":401,"title":{},"body":{"injectables/JwtConfigService.html":{},"injectables/MongooseConfigService.html":{},"injectables/MulterConfigService.html":{},"dependencies.html":{}}}],["login",{"_index":12,"title":{},"body":{"controllers/AppController.html":{},"injectables/AuthService.html":{}}}],["login(@request",{"_index":76,"title":{},"body":{"controllers/AppController.html":{}}}],["login(req",{"_index":24,"title":{},"body":{"controllers/AppController.html":{}}}],["login(user",{"_index":166,"title":{},"body":{"injectables/AuthService.html":{}}}],["match",{"_index":227,"title":{},"body":{"interfaces/CollationDocument.html":{},"injectables/PaginateModel.html":{},"interfaces/PaginateOptions.html":{},"interfaces/PaginationResult.html":{},"interfaces/PopulateOptions.html":{},"miscellaneous/variables.html":{}}}],["matching",{"_index":95,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"interfaces/Author.html":{},"interfaces/CollationDocument.html":{},"interfaces/Course.html":{},"interfaces/CreateStudentDto.html":{},"interfaces/CreateTutorDto.html":{},"interfaces/CreateUserDto.html":{},"classes/Feed.html":{},"controllers/FeedController.html":{},"modules/FeedModule.html":{},"injectables/FeedService.html":{},"interfaces/IFeedController.html":{},"interfaces/IFeedService.html":{},"classes/JoiValidationPipe.html":{},"injectables/JwtAuthGuard.html":{},"injectables/JwtConfigService.html":{},"injectables/JwtStrategy.html":{},"interfaces/Learner.html":{},"injectables/LocalAuthGuard.html":{},"injectables/LocalStrategy.html":{},"classes/Material.html":{},"injectables/MongooseConfigService.html":{},"injectables/MulterConfigService.html":{},"injectables/PaginateModel.html":{},"interfaces/PaginateOptions.html":{},"interfaces/PaginationResult.html":{},"interfaces/PopulateOptions.html":{},"classes/Student.html":{},"interfaces/Todo.html":{},"classes/Tutor.html":{},"interfaces/User.html":{},"controllers/UserController.html":{},"modules/UserModule.html":{},"injectables/UserService.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/functions.html":{},"index.html":{},"modules.html":{},"overview.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["material",{"_index":472,"title":{"classes/Material.html":{}},"body":{"classes/Material.html":{},"modules/UserModule.html":{},"injectables/UserService.html":{},"coverage.html":{}}}],["material.name",{"_index":585,"title":{},"body":{"modules/UserModule.html":{},"miscellaneous/variables.html":{}}}],["materialdocument",{"_index":484,"title":{},"body":{"classes/Material.html":{},"injectables/UserService.html":{},"miscellaneous/typealiases.html":{}}}],["materialmodel",{"_index":595,"title":{},"body":{"injectables/UserService.html":{}}}],["materialschema",{"_index":486,"title":{},"body":{"classes/Material.html":{},"modules/UserModule.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["maxvariable",{"_index":217,"title":{},"body":{"interfaces/CollationDocument.html":{},"injectables/PaginateModel.html":{},"interfaces/PaginateOptions.html":{},"interfaces/PaginationResult.html":{},"interfaces/PopulateOptions.html":{}}}],["message",{"_index":20,"title":{},"body":{"controllers/AppController.html":{},"injectables/JwtAuthGuard.html":{}}}],["metadata",{"_index":356,"title":{},"body":{"classes/JoiValidationPipe.html":{},"dependencies.html":{}}}],["methods",{"_index":8,"title":{},"body":{"controllers/AppController.html":{},"injectables/AppService.html":{},"injectables/AuthService.html":{},"controllers/FeedController.html":{},"injectables/FeedService.html":{},"classes/JoiValidationPipe.html":{},"injectables/JwtAuthGuard.html":{},"injectables/JwtConfigService.html":{},"injectables/JwtStrategy.html":{},"injectables/LocalStrategy.html":{},"injectables/MongooseConfigService.html":{},"injectables/MulterConfigService.html":{},"injectables/PaginateModel.html":{},"controllers/UserController.html":{},"injectables/UserService.html":{}}}],["miscellaneous",{"_index":683,"title":{"miscellaneous/functions.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}},"body":{"miscellaneous/functions.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["mit",{"_index":720,"title":{},"body":{"index.html":{}}}],["mode",{"_index":710,"title":{},"body":{"index.html":{}}}],["model",{"_index":222,"title":{},"body":{"interfaces/CollationDocument.html":{},"injectables/FeedService.html":{},"injectables/PaginateModel.html":{},"interfaces/PaginateOptions.html":{},"interfaces/PaginationResult.html":{},"interfaces/PopulateOptions.html":{},"injectables/UserService.html":{}}}],["model.countdocuments().exec",{"_index":255,"title":{},"body":{"interfaces/CollationDocument.html":{},"injectables/PaginateModel.html":{},"interfaces/PaginateOptions.html":{},"interfaces/PaginationResult.html":{},"interfaces/PopulateOptions.html":{}}}],["modeldefinition",{"_index":318,"title":{},"body":{"modules/FeedModule.html":{},"modules/UserModule.html":{},"miscellaneous/variables.html":{}}}],["models",{"_index":323,"title":{},"body":{"modules/FeedModule.html":{},"modules/UserModule.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["module",{"_index":97,"title":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/FeedModule.html":{},"modules/UserModule.html":{}},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/FeedModule.html":{},"modules/UserModule.html":{},"overview.html":{}}}],["modules",{"_index":99,"title":{"modules.html":{}},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/FeedModule.html":{},"modules/UserModule.html":{},"coverage.html":{},"modules.html":{},"overview.html":{},"miscellaneous/variables.html":{}}}],["mongodb",{"_index":421,"title":{},"body":{"injectables/JwtConfigService.html":{},"injectables/MongooseConfigService.html":{},"injectables/MulterConfigService.html":{}}}],["mongoose",{"_index":223,"title":{},"body":{"interfaces/CollationDocument.html":{},"classes/Feed.html":{},"injectables/FeedService.html":{},"injectables/JwtConfigService.html":{},"classes/Material.html":{},"injectables/MongooseConfigService.html":{},"injectables/MulterConfigService.html":{},"injectables/PaginateModel.html":{},"interfaces/PaginateOptions.html":{},"interfaces/PaginationResult.html":{},"interfaces/PopulateOptions.html":{},"classes/Student.html":{},"classes/Tutor.html":{},"injectables/UserService.html":{},"dependencies.html":{}}}],["mongoose.schema.types.objectid",{"_index":523,"title":{},"body":{"classes/Tutor.html":{}}}],["mongoose/lib/error",{"_index":550,"title":{},"body":{"controllers/UserController.html":{}}}],["mongooseconfigservice",{"_index":418,"title":{"injectables/MongooseConfigService.html":{}},"body":{"injectables/JwtConfigService.html":{},"injectables/MongooseConfigService.html":{},"injectables/MulterConfigService.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["mongooseerror",{"_index":549,"title":{},"body":{"controllers/UserController.html":{}}}],["mongoosemodelfactories",{"_index":632,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["mongoosemodule",{"_index":319,"title":{},"body":{"modules/FeedModule.html":{},"modules/UserModule.html":{}}}],["mongoosemodule.forfeature(models",{"_index":325,"title":{},"body":{"modules/FeedModule.html":{},"modules/UserModule.html":{}}}],["mongoosemodule.forfeatureasync(mongoosemodelfactories",{"_index":789,"title":{},"body":{"miscellaneous/variables.html":{}}}],["mongoosemodule.forrootasync",{"_index":788,"title":{},"body":{"miscellaneous/variables.html":{}}}],["mongoosemoduleoptions",{"_index":395,"title":{},"body":{"injectables/JwtConfigService.html":{},"injectables/MongooseConfigService.html":{},"injectables/MulterConfigService.html":{}}}],["mongooseoptionsfactory",{"_index":396,"title":{},"body":{"injectables/JwtConfigService.html":{},"injectables/MongooseConfigService.html":{},"injectables/MulterConfigService.html":{}}}],["more",{"_index":734,"title":{},"body":{"index.html":{}}}],["multer",{"_index":64,"title":{},"body":{"controllers/AppController.html":{},"injectables/JwtConfigService.html":{},"injectables/MongooseConfigService.html":{},"injectables/MulterConfigService.html":{}}}],["multerconfigservice",{"_index":426,"title":{"injectables/MulterConfigService.html":{}},"body":{"injectables/JwtConfigService.html":{},"injectables/MongooseConfigService.html":{},"injectables/MulterConfigService.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["multermodule.registerasync",{"_index":790,"title":{},"body":{"miscellaneous/variables.html":{}}}],["multermoduleoptions",{"_index":397,"title":{},"body":{"injectables/JwtConfigService.html":{},"injectables/MongooseConfigService.html":{},"injectables/MulterConfigService.html":{}}}],["multeroptionsfactory",{"_index":398,"title":{},"body":{"injectables/JwtConfigService.html":{},"injectables/MongooseConfigService.html":{},"injectables/MulterConfigService.html":{}}}],["myśliwiec",{"_index":739,"title":{},"body":{"index.html":{}}}],["name",{"_index":28,"title":{},"body":{"controllers/AppController.html":{},"injectables/AppService.html":{},"injectables/AuthService.html":{},"modules/FeedModule.html":{},"injectables/FeedService.html":{},"classes/JoiValidationPipe.html":{},"injectables/JwtAuthGuard.html":{},"injectables/JwtConfigService.html":{},"injectables/JwtStrategy.html":{},"injectables/LocalStrategy.html":{},"injectables/MongooseConfigService.html":{},"injectables/MulterConfigService.html":{},"injectables/PaginateModel.html":{},"controllers/UserController.html":{},"modules/UserModule.html":{},"injectables/UserService.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["name}${extname(file.originalname",{"_index":435,"title":{},"body":{"injectables/JwtConfigService.html":{},"injectables/MongooseConfigService.html":{},"injectables/MulterConfigService.html":{}}}],["nest",{"_index":698,"title":{},"body":{"index.html":{}}}],["nestframework",{"_index":743,"title":{},"body":{"index.html":{}}}],["nestjs/common",{"_index":44,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"interfaces/CollationDocument.html":{},"controllers/FeedController.html":{},"modules/FeedModule.html":{},"injectables/FeedService.html":{},"classes/JoiValidationPipe.html":{},"injectables/JwtAuthGuard.html":{},"injectables/JwtConfigService.html":{},"injectables/JwtStrategy.html":{},"injectables/LocalAuthGuard.html":{},"injectables/LocalStrategy.html":{},"injectables/MongooseConfigService.html":{},"injectables/MulterConfigService.html":{},"injectables/PaginateModel.html":{},"interfaces/PaginateOptions.html":{},"interfaces/PaginationResult.html":{},"interfaces/PopulateOptions.html":{},"interfaces/Todo.html":{},"controllers/UserController.html":{},"modules/UserModule.html":{},"injectables/UserService.html":{},"dependencies.html":{}}}],["nestjs/config",{"_index":149,"title":{},"body":{"modules/AuthModule.html":{},"injectables/JwtConfigService.html":{},"injectables/JwtStrategy.html":{},"injectables/MongooseConfigService.html":{},"injectables/MulterConfigService.html":{},"dependencies.html":{}}}],["nestjs/core",{"_index":651,"title":{},"body":{"dependencies.html":{}}}],["nestjs/jwt",{"_index":151,"title":{},"body":{"modules/AuthModule.html":{},"injectables/AuthService.html":{},"injectables/JwtConfigService.html":{},"injectables/MongooseConfigService.html":{},"injectables/MulterConfigService.html":{},"dependencies.html":{}}}],["nestjs/mongoose",{"_index":291,"title":{},"body":{"classes/Feed.html":{},"modules/FeedModule.html":{},"injectables/FeedService.html":{},"injectables/JwtConfigService.html":{},"classes/Material.html":{},"injectables/MongooseConfigService.html":{},"injectables/MulterConfigService.html":{},"classes/Student.html":{},"classes/Tutor.html":{},"modules/UserModule.html":{},"injectables/UserService.html":{},"dependencies.html":{}}}],["nestjs/passport",{"_index":46,"title":{},"body":{"controllers/AppController.html":{},"modules/AuthModule.html":{},"injectables/JwtAuthGuard.html":{},"injectables/JwtStrategy.html":{},"injectables/LocalAuthGuard.html":{},"injectables/LocalStrategy.html":{},"dependencies.html":{}}}],["nestjs/platform",{"_index":48,"title":{},"body":{"controllers/AppController.html":{},"injectables/JwtConfigService.html":{},"injectables/MongooseConfigService.html":{},"injectables/MulterConfigService.html":{},"dependencies.html":{}}}],["nestjs/serve",{"_index":655,"title":{},"body":{"dependencies.html":{}}}],["nestjs/swagger",{"_index":658,"title":{},"body":{"dependencies.html":{}}}],["new",{"_index":364,"title":{},"body":{"classes/JoiValidationPipe.html":{},"injectables/JwtAuthGuard.html":{},"injectables/LocalStrategy.html":{},"controllers/UserController.html":{},"injectables/UserService.html":{},"coverage.html":{}}}],["newfile",{"_index":617,"title":{},"body":{"injectables/UserService.html":{}}}],["newuser",{"_index":613,"title":{},"body":{"injectables/UserService.html":{}}}],["newuser.save",{"_index":616,"title":{},"body":{"injectables/UserService.html":{}}}],["nextpage",{"_index":243,"title":{},"body":{"interfaces/CollationDocument.html":{},"injectables/PaginateModel.html":{},"interfaces/PaginateOptions.html":{},"interfaces/PaginationResult.html":{},"interfaces/PopulateOptions.html":{}}}],["node.js",{"_index":690,"title":{},"body":{"index.html":{}}}],["notacceptableexception",{"_index":538,"title":{},"body":{"controllers/UserController.html":{}}}],["notfoundexception",{"_index":539,"title":{},"body":{"controllers/UserController.html":{}}}],["notfoundexception(err.message",{"_index":569,"title":{},"body":{"controllers/UserController.html":{}}}],["npm",{"_index":703,"title":{},"body":{"index.html":{}}}],["null",{"_index":193,"title":{},"body":{"injectables/AuthService.html":{},"interfaces/CollationDocument.html":{},"injectables/PaginateModel.html":{},"interfaces/PaginateOptions.html":{},"interfaces/PaginationResult.html":{},"interfaces/PopulateOptions.html":{}}}],["number",{"_index":134,"title":{},"body":{"injectables/AppService.html":{},"interfaces/CollationDocument.html":{},"injectables/PaginateModel.html":{},"interfaces/PaginateOptions.html":{},"interfaces/PaginationResult.html":{},"interfaces/PopulateOptions.html":{},"interfaces/Todo.html":{},"injectables/UserService.html":{}}}],["numericordering",{"_index":218,"title":{},"body":{"interfaces/CollationDocument.html":{},"injectables/PaginateModel.html":{},"interfaces/PaginateOptions.html":{},"interfaces/PaginationResult.html":{},"interfaces/PopulateOptions.html":{}}}],["object",{"_index":229,"title":{},"body":{"interfaces/CollationDocument.html":{},"injectables/PaginateModel.html":{},"interfaces/PaginateOptions.html":{},"interfaces/PaginationResult.html":{},"interfaces/PopulateOptions.html":{}}}],["objectives",{"_index":263,"title":{},"body":{"interfaces/Course.html":{},"classes/Feed.html":{}}}],["objectschema",{"_index":353,"title":{},"body":{"classes/JoiValidationPipe.html":{}}}],["observable",{"_index":127,"title":{},"body":{"injectables/AppService.html":{},"interfaces/Todo.html":{}}}],["occured",{"_index":386,"title":{},"body":{"injectables/JwtAuthGuard.html":{}}}],["omit",{"_index":554,"title":{},"body":{"controllers/UserController.html":{},"miscellaneous/functions.html":{}}}],["open",{"_index":722,"title":{},"body":{"index.html":{}}}],["optional",{"_index":29,"title":{},"body":{"controllers/AppController.html":{},"injectables/AppService.html":{},"injectables/AuthService.html":{},"interfaces/Author.html":{},"injectables/FeedService.html":{},"classes/JoiValidationPipe.html":{},"injectables/JwtAuthGuard.html":{},"injectables/JwtConfigService.html":{},"injectables/JwtStrategy.html":{},"interfaces/Learner.html":{},"injectables/LocalStrategy.html":{},"injectables/MongooseConfigService.html":{},"injectables/MulterConfigService.html":{},"injectables/PaginateModel.html":{},"interfaces/PaginateOptions.html":{},"interfaces/User.html":{},"controllers/UserController.html":{},"injectables/UserService.html":{},"miscellaneous/functions.html":{}}}],["options",{"_index":438,"title":{},"body":{"injectables/JwtConfigService.html":{},"injectables/MongooseConfigService.html":{},"injectables/MulterConfigService.html":{}}}],["othernames",{"_index":475,"title":{},"body":{"classes/Material.html":{}}}],["out",{"_index":114,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/FeedModule.html":{},"modules/UserModule.html":{},"overview.html":{}}}],["overview",{"_index":748,"title":{"overview.html":{}},"body":{"overview.html":{}}}],["package",{"_index":648,"title":{"dependencies.html":{}},"body":{}}],["page",{"_index":231,"title":{},"body":{"interfaces/CollationDocument.html":{},"injectables/PaginateModel.html":{},"interfaces/PaginateOptions.html":{},"interfaces/PaginationResult.html":{},"interfaces/PopulateOptions.html":{}}}],["paginate",{"_index":246,"title":{},"body":{"interfaces/CollationDocument.html":{},"injectables/FeedService.html":{},"injectables/PaginateModel.html":{},"interfaces/PaginateOptions.html":{},"interfaces/PaginationResult.html":{},"interfaces/PopulateOptions.html":{}}}],["paginate(model",{"_index":492,"title":{},"body":{"injectables/PaginateModel.html":{}}}],["paginatemodel",{"_index":244,"title":{"injectables/PaginateModel.html":{}},"body":{"interfaces/CollationDocument.html":{},"modules/FeedModule.html":{},"injectables/FeedService.html":{},"injectables/PaginateModel.html":{},"interfaces/PaginateOptions.html":{},"interfaces/PaginationResult.html":{},"interfaces/PopulateOptions.html":{},"coverage.html":{},"overview.html":{}}}],["paginateoptions",{"_index":228,"title":{"interfaces/PaginateOptions.html":{}},"body":{"interfaces/CollationDocument.html":{},"injectables/PaginateModel.html":{},"interfaces/PaginateOptions.html":{},"interfaces/PaginationResult.html":{},"interfaces/PopulateOptions.html":{},"coverage.html":{}}}],["pagination",{"_index":233,"title":{},"body":{"interfaces/CollationDocument.html":{},"injectables/PaginateModel.html":{},"interfaces/PaginateOptions.html":{},"interfaces/PaginationResult.html":{},"interfaces/PopulateOptions.html":{}}}],["paginationresult",{"_index":236,"title":{"interfaces/PaginationResult.html":{}},"body":{"interfaces/CollationDocument.html":{},"injectables/PaginateModel.html":{},"interfaces/PaginateOptions.html":{},"interfaces/PaginationResult.html":{},"interfaces/PopulateOptions.html":{},"coverage.html":{}}}],["param",{"_index":540,"title":{},"body":{"controllers/UserController.html":{}}}],["parameters",{"_index":27,"title":{},"body":{"controllers/AppController.html":{},"injectables/AppService.html":{},"injectables/AuthService.html":{},"injectables/FeedService.html":{},"classes/JoiValidationPipe.html":{},"injectables/JwtAuthGuard.html":{},"injectables/JwtConfigService.html":{},"injectables/JwtStrategy.html":{},"injectables/LocalStrategy.html":{},"injectables/MongooseConfigService.html":{},"injectables/MulterConfigService.html":{},"injectables/PaginateModel.html":{},"controllers/UserController.html":{},"injectables/UserService.html":{},"miscellaneous/functions.html":{}}}],["parseint(process.env.port",{"_index":407,"title":{},"body":{"injectables/JwtConfigService.html":{},"injectables/MongooseConfigService.html":{},"injectables/MulterConfigService.html":{}}}],["pass",{"_index":169,"title":{},"body":{"injectables/AuthService.html":{}}}],["passport",{"_index":452,"title":{},"body":{"injectables/JwtStrategy.html":{},"injectables/LocalStrategy.html":{},"dependencies.html":{}}}],["passportmodule",{"_index":152,"title":{},"body":{"modules/AuthModule.html":{}}}],["passportstrategy",{"_index":449,"title":{},"body":{"injectables/JwtStrategy.html":{},"injectables/LocalStrategy.html":{}}}],["passportstrategy(strategy",{"_index":453,"title":{},"body":{"injectables/JwtStrategy.html":{},"injectables/LocalStrategy.html":{}}}],["password",{"_index":208,"title":{},"body":{"interfaces/Author.html":{},"interfaces/CreateStudentDto.html":{},"interfaces/CreateTutorDto.html":{},"interfaces/CreateUserDto.html":{},"interfaces/Learner.html":{},"injectables/LocalStrategy.html":{},"classes/Student.html":{},"classes/Tutor.html":{},"interfaces/User.html":{},"injectables/UserService.html":{},"miscellaneous/variables.html":{}}}],["path",{"_index":225,"title":{},"body":{"interfaces/CollationDocument.html":{},"injectables/JwtConfigService.html":{},"injectables/MongooseConfigService.html":{},"injectables/MulterConfigService.html":{},"injectables/PaginateModel.html":{},"interfaces/PaginateOptions.html":{},"interfaces/PaginationResult.html":{},"interfaces/PopulateOptions.html":{}}}],["payload",{"_index":194,"title":{},"body":{"injectables/AuthService.html":{},"injectables/JwtStrategy.html":{}}}],["payload.id",{"_index":460,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["payload.studentnumber",{"_index":461,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["pipetransform",{"_index":350,"title":{},"body":{"classes/JoiValidationPipe.html":{}}}],["please",{"_index":732,"title":{},"body":{"index.html":{}}}],["populate",{"_index":235,"title":{},"body":{"interfaces/CollationDocument.html":{},"injectables/PaginateModel.html":{},"interfaces/PaginateOptions.html":{},"interfaces/PaginationResult.html":{},"interfaces/PopulateOptions.html":{}}}],["populateoptions",{"_index":224,"title":{"interfaces/PopulateOptions.html":{}},"body":{"interfaces/CollationDocument.html":{},"injectables/PaginateModel.html":{},"interfaces/PaginateOptions.html":{},"interfaces/PaginationResult.html":{},"interfaces/PopulateOptions.html":{},"coverage.html":{}}}],["port",{"_index":406,"title":{},"body":{"injectables/JwtConfigService.html":{},"injectables/MongooseConfigService.html":{},"injectables/MulterConfigService.html":{}}}],["post",{"_index":38,"title":{},"body":{"controllers/AppController.html":{},"controllers/UserController.html":{}}}],["post('auth/login",{"_index":75,"title":{},"body":{"controllers/AppController.html":{}}}],["post('register",{"_index":570,"title":{},"body":{"controllers/UserController.html":{}}}],["post('register')@usepipes(new",{"_index":536,"title":{},"body":{"controllers/UserController.html":{}}}],["post('upload",{"_index":78,"title":{},"body":{"controllers/AppController.html":{}}}],["post('upload')@useinterceptors(undefined",{"_index":33,"title":{},"body":{"controllers/AppController.html":{}}}],["prefix",{"_index":297,"title":{},"body":{"controllers/FeedController.html":{},"controllers/UserController.html":{}}}],["prevpage",{"_index":242,"title":{},"body":{"interfaces/CollationDocument.html":{},"injectables/PaginateModel.html":{},"interfaces/PaginateOptions.html":{},"interfaces/PaginationResult.html":{},"interfaces/PopulateOptions.html":{}}}],["private",{"_index":68,"title":{},"body":{"controllers/AppController.html":{},"injectables/AuthService.html":{},"injectables/FeedService.html":{},"injectables/UserService.html":{}}}],["process.env.jwtsecret",{"_index":414,"title":{},"body":{"injectables/JwtConfigService.html":{},"injectables/JwtStrategy.html":{},"injectables/MongooseConfigService.html":{},"injectables/MulterConfigService.html":{}}}],["process.env.mongodb_uri",{"_index":410,"title":{},"body":{"injectables/JwtConfigService.html":{},"injectables/MongooseConfigService.html":{},"injectables/MulterConfigService.html":{}}}],["production",{"_index":712,"title":{},"body":{"index.html":{}}}],["profile",{"_index":590,"title":{},"body":{"injectables/UserService.html":{}}}],["profile(id",{"_index":600,"title":{},"body":{"injectables/UserService.html":{}}}],["progressive",{"_index":689,"title":{},"body":{"index.html":{}}}],["project",{"_index":723,"title":{},"body":{"index.html":{}}}],["promise",{"_index":251,"title":{},"body":{"interfaces/CollationDocument.html":{},"controllers/FeedController.html":{},"interfaces/IFeedController.html":{},"interfaces/IFeedService.html":{},"injectables/PaginateModel.html":{},"interfaces/PaginateOptions.html":{},"interfaces/PaginationResult.html":{},"interfaces/PopulateOptions.html":{},"injectables/UserService.html":{},"miscellaneous/variables.html":{}}}],["prop",{"_index":277,"title":{},"body":{"classes/Feed.html":{},"classes/Material.html":{},"classes/Student.html":{},"classes/Tutor.html":{}}}],["prop({type",{"_index":478,"title":{},"body":{"classes/Material.html":{},"classes/Tutor.html":{}}}],["prop({unique",{"_index":496,"title":{},"body":{"classes/Student.html":{}}}],["properties",{"_index":201,"title":{},"body":{"interfaces/Author.html":{},"interfaces/CollationDocument.html":{},"interfaces/Course.html":{},"interfaces/CreateUserDto.html":{},"classes/Feed.html":{},"injectables/FeedService.html":{},"interfaces/IFeedController.html":{},"interfaces/IFeedService.html":{},"interfaces/Learner.html":{},"classes/Material.html":{},"interfaces/PaginateOptions.html":{},"interfaces/PaginationResult.html":{},"interfaces/PopulateOptions.html":{},"classes/Student.html":{},"interfaces/Todo.html":{},"classes/Tutor.html":{},"interfaces/User.html":{}}}],["providers",{"_index":104,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/FeedModule.html":{},"modules/UserModule.html":{},"overview.html":{}}}],["providers/paginatemodel.provider",{"_index":320,"title":{},"body":{"modules/FeedModule.html":{},"injectables/FeedService.html":{}}}],["public",{"_index":245,"title":{},"body":{"interfaces/CollationDocument.html":{},"injectables/PaginateModel.html":{},"interfaces/PaginateOptions.html":{},"interfaces/PaginationResult.html":{},"interfaces/PopulateOptions.html":{}}}],["public/upload",{"_index":412,"title":{},"body":{"injectables/JwtConfigService.html":{},"injectables/MongooseConfigService.html":{},"injectables/MulterConfigService.html":{}}}],["pwdmatch",{"_index":179,"title":{},"body":{"injectables/AuthService.html":{}}}],["query",{"_index":247,"title":{},"body":{"interfaces/CollationDocument.html":{},"injectables/PaginateModel.html":{},"interfaces/PaginateOptions.html":{},"interfaces/PaginationResult.html":{},"interfaces/PopulateOptions.html":{}}}],["read",{"_index":733,"title":{},"body":{"index.html":{}}}],["readonly",{"_index":69,"title":{},"body":{"controllers/AppController.html":{},"controllers/FeedController.html":{}}}],["ref",{"_index":524,"title":{},"body":{"classes/Tutor.html":{}}}],["reflect",{"_index":675,"title":{},"body":{"dependencies.html":{}}}],["register",{"_index":531,"title":{},"body":{"controllers/UserController.html":{}}}],["register(@body",{"_index":573,"title":{},"body":{"controllers/UserController.html":{}}}],["register(body",{"_index":535,"title":{},"body":{"controllers/UserController.html":{}}}],["render",{"_index":39,"title":{},"body":{"controllers/AppController.html":{}}}],["render('index",{"_index":70,"title":{},"body":{"controllers/AppController.html":{}}}],["repository",{"_index":701,"title":{},"body":{"index.html":{}}}],["req",{"_index":30,"title":{},"body":{"controllers/AppController.html":{},"injectables/JwtConfigService.html":{},"injectables/MongooseConfigService.html":{},"injectables/MulterConfigService.html":{}}}],["request",{"_index":40,"title":{},"body":{"controllers/AppController.html":{},"miscellaneous/variables.html":{}}}],["request.user",{"_index":799,"title":{},"body":{"miscellaneous/variables.html":{}}}],["requirements",{"_index":264,"title":{},"body":{"interfaces/Course.html":{},"classes/Feed.html":{}}}],["reset",{"_index":113,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/FeedModule.html":{},"modules/UserModule.html":{},"overview.html":{}}}],["result",{"_index":84,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"interfaces/Author.html":{},"interfaces/CollationDocument.html":{},"interfaces/Course.html":{},"interfaces/CreateStudentDto.html":{},"interfaces/CreateTutorDto.html":{},"interfaces/CreateUserDto.html":{},"classes/Feed.html":{},"controllers/FeedController.html":{},"modules/FeedModule.html":{},"injectables/FeedService.html":{},"interfaces/IFeedController.html":{},"interfaces/IFeedService.html":{},"classes/JoiValidationPipe.html":{},"injectables/JwtAuthGuard.html":{},"injectables/JwtConfigService.html":{},"injectables/JwtStrategy.html":{},"interfaces/Learner.html":{},"injectables/LocalAuthGuard.html":{},"injectables/LocalStrategy.html":{},"classes/Material.html":{},"injectables/MongooseConfigService.html":{},"injectables/MulterConfigService.html":{},"injectables/PaginateModel.html":{},"interfaces/PaginateOptions.html":{},"interfaces/PaginationResult.html":{},"interfaces/PopulateOptions.html":{},"classes/Student.html":{},"interfaces/Todo.html":{},"classes/Tutor.html":{},"interfaces/User.html":{},"controllers/UserController.html":{},"modules/UserModule.html":{},"injectables/UserService.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/functions.html":{},"index.html":{},"modules.html":{},"overview.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["result.topromise",{"_index":92,"title":{},"body":{"controllers/AppController.html":{}}}],["results",{"_index":96,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"interfaces/Author.html":{},"interfaces/CollationDocument.html":{},"interfaces/Course.html":{},"interfaces/CreateStudentDto.html":{},"interfaces/CreateTutorDto.html":{},"interfaces/CreateUserDto.html":{},"classes/Feed.html":{},"controllers/FeedController.html":{},"modules/FeedModule.html":{},"injectables/FeedService.html":{},"interfaces/IFeedController.html":{},"interfaces/IFeedService.html":{},"classes/JoiValidationPipe.html":{},"injectables/JwtAuthGuard.html":{},"injectables/JwtConfigService.html":{},"injectables/JwtStrategy.html":{},"interfaces/Learner.html":{},"injectables/LocalAuthGuard.html":{},"injectables/LocalStrategy.html":{},"classes/Material.html":{},"injectables/MongooseConfigService.html":{},"injectables/MulterConfigService.html":{},"injectables/PaginateModel.html":{},"interfaces/PaginateOptions.html":{},"interfaces/PaginationResult.html":{},"interfaces/PopulateOptions.html":{},"classes/Student.html":{},"interfaces/Todo.html":{},"classes/Tutor.html":{},"interfaces/User.html":{},"controllers/UserController.html":{},"modules/UserModule.html":{},"injectables/UserService.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/functions.html":{},"index.html":{},"modules.html":{},"overview.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["return",{"_index":71,"title":{},"body":{"controllers/AppController.html":{},"injectables/AppService.html":{},"injectables/AuthService.html":{},"controllers/FeedController.html":{},"injectables/FeedService.html":{},"classes/JoiValidationPipe.html":{},"injectables/JwtAuthGuard.html":{},"injectables/JwtConfigService.html":{},"injectables/JwtStrategy.html":{},"injectables/LocalStrategy.html":{},"injectables/MongooseConfigService.html":{},"injectables/MulterConfigService.html":{},"classes/Student.html":{},"interfaces/Todo.html":{},"controllers/UserController.html":{},"injectables/UserService.html":{},"miscellaneous/variables.html":{}}}],["returns",{"_index":19,"title":{},"body":{"controllers/AppController.html":{},"injectables/AppService.html":{},"injectables/AuthService.html":{},"controllers/FeedController.html":{},"injectables/FeedService.html":{},"classes/JoiValidationPipe.html":{},"injectables/JwtAuthGuard.html":{},"injectables/JwtConfigService.html":{},"injectables/JwtStrategy.html":{},"injectables/LocalStrategy.html":{},"injectables/MongooseConfigService.html":{},"injectables/MulterConfigService.html":{},"injectables/PaginateModel.html":{},"controllers/UserController.html":{},"injectables/UserService.html":{},"miscellaneous/functions.html":{}}}],["rimraf",{"_index":677,"title":{},"body":{"dependencies.html":{}}}],["route",{"_index":314,"title":{},"body":{"controllers/FeedController.html":{}}}],["run",{"_index":707,"title":{},"body":{"index.html":{}}}],["rxjs",{"_index":128,"title":{},"body":{"injectables/AppService.html":{},"interfaces/Todo.html":{},"dependencies.html":{}}}],["salt",{"_index":781,"title":{},"body":{"miscellaneous/variables.html":{}}}],["saltrounds",{"_index":780,"title":{},"body":{"miscellaneous/variables.html":{}}}],["saveduser",{"_index":615,"title":{},"body":{"injectables/UserService.html":{}}}],["scalable",{"_index":694,"title":{},"body":{"index.html":{}}}],["schema",{"_index":289,"title":{},"body":{"classes/Feed.html":{},"modules/FeedModule.html":{},"classes/JoiValidationPipe.html":{},"classes/Material.html":{},"classes/Student.html":{},"classes/Tutor.html":{},"modules/UserModule.html":{},"miscellaneous/variables.html":{}}}],["schema.plugin(require('mongoose",{"_index":794,"title":{},"body":{"miscellaneous/variables.html":{}}}],["schemafactory",{"_index":290,"title":{},"body":{"classes/Feed.html":{},"classes/Material.html":{},"classes/Student.html":{},"classes/Tutor.html":{}}}],["schemafactory.createforclass(feed",{"_index":294,"title":{},"body":{"classes/Feed.html":{},"miscellaneous/variables.html":{}}}],["schemafactory.createforclass(material",{"_index":487,"title":{},"body":{"classes/Material.html":{},"miscellaneous/variables.html":{}}}],["schemafactory.createforclass(student",{"_index":508,"title":{},"body":{"classes/Student.html":{},"miscellaneous/variables.html":{}}}],["schemafactory.createforclass(tutor",{"_index":526,"title":{},"body":{"classes/Tutor.html":{},"miscellaneous/variables.html":{}}}],["schemas/feed.schema",{"_index":322,"title":{},"body":{"modules/FeedModule.html":{},"injectables/FeedService.html":{}}}],["schemas/files.schema",{"_index":583,"title":{},"body":{"modules/UserModule.html":{},"injectables/UserService.html":{}}}],["schemas/student.schema",{"_index":551,"title":{},"body":{"controllers/UserController.html":{},"modules/UserModule.html":{},"injectables/UserService.html":{}}}],["schemas/tutor.schema",{"_index":552,"title":{},"body":{"controllers/UserController.html":{},"modules/UserModule.html":{}}}],["schemas/validation/create",{"_index":546,"title":{},"body":{"controllers/UserController.html":{}}}],["secret",{"_index":439,"title":{},"body":{"injectables/JwtConfigService.html":{},"injectables/MongooseConfigService.html":{},"injectables/MulterConfigService.html":{}}}],["secretorkey",{"_index":459,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["select",{"_index":226,"title":{},"body":{"interfaces/CollationDocument.html":{},"injectables/PaginateModel.html":{},"interfaces/PaginateOptions.html":{},"interfaces/PaginationResult.html":{},"interfaces/PopulateOptions.html":{}}}],["server",{"_index":695,"title":{},"body":{"index.html":{}}}],["service",{"_index":420,"title":{},"body":{"injectables/JwtConfigService.html":{},"injectables/MongooseConfigService.html":{},"injectables/MulterConfigService.html":{}}}],["service.interface",{"_index":334,"title":{},"body":{"injectables/FeedService.html":{}}}],["service.interface.ts",{"_index":346,"title":{},"body":{"interfaces/IFeedService.html":{},"coverage.html":{}}}],["setting",{"_index":437,"title":{},"body":{"injectables/JwtConfigService.html":{},"injectables/MongooseConfigService.html":{},"injectables/MulterConfigService.html":{}}}],["setup",{"_index":422,"title":{},"body":{"injectables/JwtConfigService.html":{},"injectables/MongooseConfigService.html":{},"injectables/MulterConfigService.html":{}}}],["shared/hashing",{"_index":173,"title":{},"body":{"injectables/AuthService.html":{},"injectables/UserService.html":{}}}],["shared/joivalidation.pipe",{"_index":542,"title":{},"body":{"controllers/UserController.html":{}}}],["side",{"_index":696,"title":{},"body":{"index.html":{}}}],["signoptions",{"_index":441,"title":{},"body":{"injectables/JwtConfigService.html":{},"injectables/MongooseConfigService.html":{},"injectables/MulterConfigService.html":{}}}],["single",{"_index":313,"title":{},"body":{"controllers/FeedController.html":{}}}],["sort",{"_index":230,"title":{},"body":{"interfaces/CollationDocument.html":{},"injectables/PaginateModel.html":{},"interfaces/PaginateOptions.html":{},"interfaces/PaginationResult.html":{},"interfaces/PopulateOptions.html":{}}}],["source",{"_index":4,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"interfaces/Author.html":{},"interfaces/CollationDocument.html":{},"interfaces/Course.html":{},"interfaces/CreateStudentDto.html":{},"interfaces/CreateTutorDto.html":{},"interfaces/CreateUserDto.html":{},"classes/Feed.html":{},"controllers/FeedController.html":{},"modules/FeedModule.html":{},"injectables/FeedService.html":{},"interfaces/IFeedController.html":{},"interfaces/IFeedService.html":{},"classes/JoiValidationPipe.html":{},"injectables/JwtAuthGuard.html":{},"injectables/JwtConfigService.html":{},"injectables/JwtStrategy.html":{},"interfaces/Learner.html":{},"injectables/LocalAuthGuard.html":{},"injectables/LocalStrategy.html":{},"classes/Material.html":{},"injectables/MongooseConfigService.html":{},"injectables/MulterConfigService.html":{},"injectables/PaginateModel.html":{},"interfaces/PaginateOptions.html":{},"interfaces/PaginationResult.html":{},"interfaces/PopulateOptions.html":{},"classes/Student.html":{},"interfaces/Todo.html":{},"classes/Tutor.html":{},"interfaces/User.html":{},"controllers/UserController.html":{},"modules/UserModule.html":{},"injectables/UserService.html":{},"index.html":{}}}],["sponsors",{"_index":726,"title":{},"body":{"index.html":{}}}],["src/.../configuration.ts",{"_index":764,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../constants.ts",{"_index":763,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../create",{"_index":761,"title":{},"body":{"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["src/.../feed.module.ts",{"_index":766,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../feed.schema.ts",{"_index":756,"title":{},"body":{"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["src/.../files.schema.ts",{"_index":757,"title":{},"body":{"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["src/.../hashing.ts",{"_index":765,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../main.ts",{"_index":685,"title":{},"body":{"miscellaneous/functions.html":{}}}],["src/.../modules.ts",{"_index":768,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../mongoosemodelfactories.ts",{"_index":769,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../student.schema.ts",{"_index":758,"title":{},"body":{"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["src/.../tutor.schema.ts",{"_index":759,"title":{},"body":{"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["src/.../user.controller.ts",{"_index":686,"title":{},"body":{"miscellaneous/functions.html":{}}}],["src/.../user.decorator.ts",{"_index":770,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../user.module.ts",{"_index":767,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../user.service.ts",{"_index":760,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["src/app.controller.ts",{"_index":6,"title":{},"body":{"controllers/AppController.html":{},"coverage.html":{}}}],["src/app.controller.ts:33",{"_index":18,"title":{},"body":{"controllers/AppController.html":{}}}],["src/app.controller.ts:39",{"_index":26,"title":{},"body":{"controllers/AppController.html":{}}}],["src/app.controller.ts:45",{"_index":34,"title":{},"body":{"controllers/AppController.html":{}}}],["src/app.controller.ts:62",{"_index":23,"title":{},"body":{"controllers/AppController.html":{}}}],["src/app.module.ts",{"_index":115,"title":{},"body":{"modules/AppModule.html":{}}}],["src/app.service.ts",{"_index":121,"title":{},"body":{"injectables/AppService.html":{},"interfaces/Todo.html":{},"coverage.html":{}}}],["src/app.service.ts:13",{"_index":124,"title":{},"body":{"injectables/AppService.html":{}}}],["src/app.service.ts:15",{"_index":125,"title":{},"body":{"injectables/AppService.html":{}}}],["src/app.service.ts:19",{"_index":126,"title":{},"body":{"injectables/AppService.html":{}}}],["src/auth/auth.module.ts",{"_index":147,"title":{},"body":{"modules/AuthModule.html":{}}}],["src/auth/auth.service.ts",{"_index":161,"title":{},"body":{"injectables/AuthService.html":{},"coverage.html":{}}}],["src/auth/auth.service.ts:15",{"_index":170,"title":{},"body":{"injectables/AuthService.html":{}}}],["src/auth/auth.service.ts:31",{"_index":167,"title":{},"body":{"injectables/AuthService.html":{}}}],["src/auth/auth.service.ts:9",{"_index":165,"title":{},"body":{"injectables/AuthService.html":{}}}],["src/auth/jwt",{"_index":366,"title":{},"body":{"injectables/JwtAuthGuard.html":{},"coverage.html":{}}}],["src/auth/jwt.strategy.ts",{"_index":444,"title":{},"body":{"injectables/JwtStrategy.html":{},"coverage.html":{}}}],["src/auth/jwt.strategy.ts:16",{"_index":448,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["src/auth/jwt.strategy.ts:7",{"_index":446,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["src/auth/local",{"_index":462,"title":{},"body":{"injectables/LocalAuthGuard.html":{},"coverage.html":{}}}],["src/auth/local.strategy.ts",{"_index":464,"title":{},"body":{"injectables/LocalStrategy.html":{},"coverage.html":{}}}],["src/auth/local.strategy.ts:13",{"_index":468,"title":{},"body":{"injectables/LocalStrategy.html":{}}}],["src/auth/local.strategy.ts:8",{"_index":466,"title":{},"body":{"injectables/LocalStrategy.html":{}}}],["src/config/configuration.ts",{"_index":387,"title":{},"body":{"injectables/JwtConfigService.html":{},"injectables/MongooseConfigService.html":{},"injectables/MulterConfigService.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/config/configuration.ts:32",{"_index":488,"title":{},"body":{"injectables/MongooseConfigService.html":{}}}],["src/config/configuration.ts:34",{"_index":489,"title":{},"body":{"injectables/MongooseConfigService.html":{}}}],["src/config/configuration.ts:48",{"_index":490,"title":{},"body":{"injectables/MulterConfigService.html":{}}}],["src/config/configuration.ts:50",{"_index":491,"title":{},"body":{"injectables/MulterConfigService.html":{}}}],["src/config/configuration.ts:70",{"_index":392,"title":{},"body":{"injectables/JwtConfigService.html":{}}}],["src/config/configuration.ts:72",{"_index":393,"title":{},"body":{"injectables/JwtConfigService.html":{}}}],["src/config/constants.ts",{"_index":628,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/config/modules.ts",{"_index":630,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/config/mongoosemodelfactories.ts",{"_index":631,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/decotators/user.decorator.ts",{"_index":633,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/feed/feed.controller.ts",{"_index":296,"title":{},"body":{"controllers/FeedController.html":{},"coverage.html":{}}}],["src/feed/feed.controller.ts:10",{"_index":305,"title":{},"body":{"controllers/FeedController.html":{}}}],["src/feed/feed.controller.ts:16",{"_index":304,"title":{},"body":{"controllers/FeedController.html":{}}}],["src/feed/feed.controller.ts:21",{"_index":303,"title":{},"body":{"controllers/FeedController.html":{}}}],["src/feed/feed.module.ts",{"_index":317,"title":{},"body":{"modules/FeedModule.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/feed/feed.service.ts",{"_index":326,"title":{},"body":{"injectables/FeedService.html":{},"coverage.html":{}}}],["src/feed/feed.service.ts:10",{"_index":329,"title":{},"body":{"injectables/FeedService.html":{}}}],["src/feed/feed.service.ts:18",{"_index":331,"title":{},"body":{"injectables/FeedService.html":{}}}],["src/feed/interfaces/feed",{"_index":343,"title":{},"body":{"interfaces/IFeedController.html":{},"interfaces/IFeedService.html":{},"coverage.html":{}}}],["src/feed/interfaces/feed.interface.ts",{"_index":257,"title":{},"body":{"interfaces/Course.html":{},"coverage.html":{}}}],["src/feed/schemas/feed.schema.ts",{"_index":275,"title":{},"body":{"classes/Feed.html":{},"coverage.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["src/feed/schemas/feed.schema.ts:10",{"_index":282,"title":{},"body":{"classes/Feed.html":{}}}],["src/feed/schemas/feed.schema.ts:13",{"_index":288,"title":{},"body":{"classes/Feed.html":{}}}],["src/feed/schemas/feed.schema.ts:16",{"_index":287,"title":{},"body":{"classes/Feed.html":{}}}],["src/feed/schemas/feed.schema.ts:19",{"_index":283,"title":{},"body":{"classes/Feed.html":{}}}],["src/feed/schemas/feed.schema.ts:22",{"_index":280,"title":{},"body":{"classes/Feed.html":{}}}],["src/feed/schemas/feed.schema.ts:25",{"_index":284,"title":{},"body":{"classes/Feed.html":{}}}],["src/feed/schemas/feed.schema.ts:28",{"_index":279,"title":{},"body":{"classes/Feed.html":{}}}],["src/feed/schemas/feed.schema.ts:31",{"_index":278,"title":{},"body":{"classes/Feed.html":{}}}],["src/feed/schemas/feed.schema.ts:34",{"_index":285,"title":{},"body":{"classes/Feed.html":{}}}],["src/feed/schemas/feed.schema.ts:37",{"_index":286,"title":{},"body":{"classes/Feed.html":{}}}],["src/feed/schemas/feed.schema.ts:40",{"_index":281,"title":{},"body":{"classes/Feed.html":{}}}],["src/main.ts",{"_index":635,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["src/providers/paginatemodel.provider.ts",{"_index":211,"title":{},"body":{"interfaces/CollationDocument.html":{},"injectables/PaginateModel.html":{},"interfaces/PaginateOptions.html":{},"interfaces/PaginationResult.html":{},"interfaces/PopulateOptions.html":{},"coverage.html":{}}}],["src/providers/paginatemodel.provider.ts:47",{"_index":494,"title":{},"body":{"injectables/PaginateModel.html":{}}}],["src/shared/hashing.ts",{"_index":640,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/shared/joivalidation.pipe.ts",{"_index":349,"title":{},"body":{"classes/JoiValidationPipe.html":{},"coverage.html":{}}}],["src/shared/joivalidation.pipe.ts:11",{"_index":358,"title":{},"body":{"classes/JoiValidationPipe.html":{}}}],["src/shared/joivalidation.pipe.ts:8",{"_index":354,"title":{},"body":{"classes/JoiValidationPipe.html":{}}}],["src/user/dto/create",{"_index":269,"title":{},"body":{"interfaces/CreateStudentDto.html":{},"interfaces/CreateTutorDto.html":{},"interfaces/CreateUserDto.html":{},"coverage.html":{},"miscellaneous/typealiases.html":{}}}],["src/user/interfaces/user.interface.ts",{"_index":199,"title":{},"body":{"interfaces/Author.html":{},"interfaces/Learner.html":{},"interfaces/User.html":{},"coverage.html":{}}}],["src/user/schemas/files.schema.ts",{"_index":473,"title":{},"body":{"classes/Material.html":{},"coverage.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["src/user/schemas/files.schema.ts:12",{"_index":479,"title":{},"body":{"classes/Material.html":{}}}],["src/user/schemas/files.schema.ts:15",{"_index":480,"title":{},"body":{"classes/Material.html":{}}}],["src/user/schemas/files.schema.ts:18",{"_index":476,"title":{},"body":{"classes/Material.html":{}}}],["src/user/schemas/files.schema.ts:21",{"_index":483,"title":{},"body":{"classes/Material.html":{}}}],["src/user/schemas/student.schema.ts",{"_index":495,"title":{},"body":{"classes/Student.html":{},"coverage.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["src/user/schemas/student.schema.ts:10",{"_index":498,"title":{},"body":{"classes/Student.html":{}}}],["src/user/schemas/student.schema.ts:13",{"_index":500,"title":{},"body":{"classes/Student.html":{}}}],["src/user/schemas/student.schema.ts:16",{"_index":502,"title":{},"body":{"classes/Student.html":{}}}],["src/user/schemas/student.schema.ts:19",{"_index":497,"title":{},"body":{"classes/Student.html":{}}}],["src/user/schemas/student.schema.ts:22",{"_index":504,"title":{},"body":{"classes/Student.html":{}}}],["src/user/schemas/student.schema.ts:25",{"_index":501,"title":{},"body":{"classes/Student.html":{}}}],["src/user/schemas/student.schema.ts:28",{"_index":499,"title":{},"body":{"classes/Student.html":{}}}],["src/user/schemas/student.schema.ts:31",{"_index":503,"title":{},"body":{"classes/Student.html":{}}}],["src/user/schemas/tutor.schema.ts",{"_index":514,"title":{},"body":{"classes/Tutor.html":{},"coverage.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["src/user/schemas/tutor.schema.ts:12",{"_index":517,"title":{},"body":{"classes/Tutor.html":{}}}],["src/user/schemas/tutor.schema.ts:15",{"_index":519,"title":{},"body":{"classes/Tutor.html":{}}}],["src/user/schemas/tutor.schema.ts:18",{"_index":520,"title":{},"body":{"classes/Tutor.html":{}}}],["src/user/schemas/tutor.schema.ts:21",{"_index":516,"title":{},"body":{"classes/Tutor.html":{}}}],["src/user/schemas/tutor.schema.ts:24",{"_index":521,"title":{},"body":{"classes/Tutor.html":{}}}],["src/user/schemas/tutor.schema.ts:27",{"_index":518,"title":{},"body":{"classes/Tutor.html":{}}}],["src/user/schemas/tutor.schema.ts:30",{"_index":515,"title":{},"body":{"classes/Tutor.html":{}}}],["src/user/schemas/validation/create",{"_index":642,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/user/user.controller.ts",{"_index":528,"title":{},"body":{"controllers/UserController.html":{},"coverage.html":{},"miscellaneous/functions.html":{}}}],["src/user/user.controller.ts:46",{"_index":534,"title":{},"body":{"controllers/UserController.html":{}}}],["src/user/user.controller.ts:57",{"_index":537,"title":{},"body":{"controllers/UserController.html":{}}}],["src/user/user.module.ts",{"_index":582,"title":{},"body":{"modules/UserModule.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/user/user.service.ts",{"_index":587,"title":{},"body":{"injectables/UserService.html":{},"coverage.html":{},"miscellaneous/typealiases.html":{}}}],["src/user/user.service.ts:16",{"_index":594,"title":{},"body":{"injectables/UserService.html":{}}}],["src/user/user.service.ts:22",{"_index":599,"title":{},"body":{"injectables/UserService.html":{}}}],["src/user/user.service.ts:30",{"_index":601,"title":{},"body":{"injectables/UserService.html":{}}}],["src/user/user.service.ts:39",{"_index":597,"title":{},"body":{"injectables/UserService.html":{}}}],["src/user/user.service.ts:48",{"_index":603,"title":{},"body":{"injectables/UserService.html":{}}}],["start",{"_index":708,"title":{},"body":{"index.html":{}}}],["start:dev",{"_index":711,"title":{},"body":{"index.html":{}}}],["start:prodtest",{"_index":713,"title":{},"body":{"index.html":{}}}],["started",{"_index":688,"title":{"index.html":{}},"body":{}}],["starter",{"_index":700,"title":{},"body":{"index.html":{}}}],["startindex",{"_index":252,"title":{},"body":{"interfaces/CollationDocument.html":{},"injectables/PaginateModel.html":{},"interfaces/PaginateOptions.html":{},"interfaces/PaginationResult.html":{},"interfaces/PopulateOptions.html":{}}}],["statements",{"_index":622,"title":{},"body":{"coverage.html":{}}}],["static",{"_index":656,"title":{},"body":{"dependencies.html":{}}}],["statuscode",{"_index":382,"title":{},"body":{"injectables/JwtAuthGuard.html":{}}}],["stay",{"_index":736,"title":{},"body":{"index.html":{}}}],["storage",{"_index":429,"title":{},"body":{"injectables/JwtConfigService.html":{},"injectables/MongooseConfigService.html":{},"injectables/MulterConfigService.html":{}}}],["str",{"_index":416,"title":{},"body":{"injectables/JwtConfigService.html":{},"injectables/MongooseConfigService.html":{},"injectables/MulterConfigService.html":{},"miscellaneous/variables.html":{}}}],["strategy",{"_index":451,"title":{},"body":{"injectables/JwtStrategy.html":{},"injectables/LocalStrategy.html":{}}}],["strength",{"_index":219,"title":{},"body":{"interfaces/CollationDocument.html":{},"injectables/PaginateModel.html":{},"interfaces/PaginateOptions.html":{},"interfaces/PaginationResult.html":{},"interfaces/PopulateOptions.html":{}}}],["string",{"_index":21,"title":{},"body":{"controllers/AppController.html":{},"injectables/AppService.html":{},"injectables/AuthService.html":{},"interfaces/Author.html":{},"interfaces/CollationDocument.html":{},"interfaces/Course.html":{},"interfaces/CreateStudentDto.html":{},"interfaces/CreateTutorDto.html":{},"interfaces/CreateUserDto.html":{},"classes/Feed.html":{},"injectables/JwtConfigService.html":{},"interfaces/Learner.html":{},"injectables/LocalStrategy.html":{},"classes/Material.html":{},"injectables/MongooseConfigService.html":{},"injectables/MulterConfigService.html":{},"injectables/PaginateModel.html":{},"interfaces/PaginateOptions.html":{},"interfaces/PaginationResult.html":{},"interfaces/PopulateOptions.html":{},"classes/Student.html":{},"interfaces/Todo.html":{},"classes/Tutor.html":{},"interfaces/User.html":{},"injectables/UserService.html":{},"miscellaneous/variables.html":{}}}],["student",{"_index":176,"title":{"classes/Student.html":{}},"body":{"injectables/AuthService.html":{},"classes/Student.html":{},"modules/UserModule.html":{},"injectables/UserService.html":{},"coverage.html":{}}}],["student.name",{"_index":586,"title":{},"body":{"modules/UserModule.html":{},"miscellaneous/variables.html":{}}}],["studentdocument",{"_index":505,"title":{},"body":{"classes/Student.html":{},"controllers/UserController.html":{},"injectables/UserService.html":{},"miscellaneous/typealiases.html":{}}}],["studentmodel",{"_index":593,"title":{},"body":{"injectables/UserService.html":{}}}],["studentnumber",{"_index":189,"title":{},"body":{"injectables/AuthService.html":{},"interfaces/Author.html":{},"injectables/JwtStrategy.html":{},"interfaces/Learner.html":{},"classes/Student.html":{},"interfaces/User.html":{},"controllers/UserController.html":{},"injectables/UserService.html":{},"miscellaneous/variables.html":{}}}],["studentschema",{"_index":507,"title":{},"body":{"classes/Student.html":{},"modules/UserModule.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["studentschema.virtual('fullname').get(function",{"_index":509,"title":{},"body":{"classes/Student.html":{}}}],["success",{"_index":567,"title":{},"body":{"controllers/UserController.html":{}}}],["super",{"_index":454,"title":{},"body":{"injectables/JwtStrategy.html":{},"injectables/LocalStrategy.html":{}}}],["super.canactivate(context",{"_index":381,"title":{},"body":{"injectables/JwtAuthGuard.html":{}}}],["support",{"_index":727,"title":{},"body":{"index.html":{},"modules.html":{}}}],["svg",{"_index":746,"title":{},"body":{"modules.html":{}}}],["swagger",{"_index":680,"title":{},"body":{"dependencies.html":{}}}],["table",{"_index":647,"title":{},"body":{"coverage.html":{}}}],["tablesort(document.getelementbyid('coverage",{"_index":646,"title":{},"body":{"coverage.html":{}}}],["test",{"_index":716,"title":{},"body":{"index.html":{}}}],["test:covsupport",{"_index":719,"title":{},"body":{"index.html":{}}}],["test:e2e",{"_index":718,"title":{},"body":{"index.html":{}}}],["tests",{"_index":715,"title":{},"body":{"index.html":{}}}],["thanks",{"_index":725,"title":{},"body":{"index.html":{}}}],["this.appservice.gettodos",{"_index":89,"title":{},"body":{"controllers/AppController.html":{}}}],["this.authservice.login(req.user",{"_index":77,"title":{},"body":{"controllers/AppController.html":{}}}],["this.authservice.validateuser(username",{"_index":470,"title":{},"body":{"injectables/LocalStrategy.html":{}}}],["this.configservice.get('database",{"_index":425,"title":{},"body":{"injectables/JwtConfigService.html":{},"injectables/MongooseConfigService.html":{},"injectables/MulterConfigService.html":{}}}],["this.configservice.get('jwtsecret",{"_index":440,"title":{},"body":{"injectables/JwtConfigService.html":{},"injectables/MongooseConfigService.html":{},"injectables/MulterConfigService.html":{}}}],["this.configservice.get('upload_path",{"_index":431,"title":{},"body":{"injectables/JwtConfigService.html":{},"injectables/MongooseConfigService.html":{},"injectables/MulterConfigService.html":{}}}],["this.feedservice.fetchfeeds",{"_index":312,"title":{},"body":{"controllers/FeedController.html":{}}}],["this.firstname",{"_index":510,"title":{},"body":{"classes/Student.html":{}}}],["this.httpservice.get('https://jsonplaceholder.typicode.com/todos",{"_index":140,"title":{},"body":{"injectables/AppService.html":{},"interfaces/Todo.html":{}}}],["this.jwtservice.sign(payload",{"_index":196,"title":{},"body":{"injectables/AuthService.html":{}}}],["this.materialmodel(body",{"_index":618,"title":{},"body":{"injectables/UserService.html":{}}}],["this.othernames",{"_index":512,"title":{},"body":{"classes/Student.html":{}}}],["this.paginate",{"_index":336,"title":{},"body":{"injectables/FeedService.html":{}}}],["this.paginatemodel",{"_index":337,"title":{},"body":{"injectables/FeedService.html":{}}}],["this.paginatemodel.paginate(this.feedmodel",{"_index":339,"title":{},"body":{"injectables/FeedService.html":{}}}],["this.schema.validate(value",{"_index":362,"title":{},"body":{"classes/JoiValidationPipe.html":{}}}],["this.studentmodel",{"_index":608,"title":{},"body":{"injectables/UserService.html":{}}}],["this.studentmodel(user",{"_index":614,"title":{},"body":{"injectables/UserService.html":{}}}],["this.studentmodel.findbyid(id",{"_index":610,"title":{},"body":{"injectables/UserService.html":{}}}],["this.surname",{"_index":511,"title":{},"body":{"classes/Student.html":{}}}],["this.userservice.createuser(body",{"_index":575,"title":{},"body":{"controllers/UserController.html":{}}}],["this.userservice.findone(username",{"_index":178,"title":{},"body":{"injectables/AuthService.html":{}}}],["this.userservice.profile(user.id",{"_index":566,"title":{},"body":{"controllers/UserController.html":{}}}],["this.userservice.uploadfile",{"_index":85,"title":{},"body":{"controllers/AppController.html":{}}}],["throw",{"_index":363,"title":{},"body":{"classes/JoiValidationPipe.html":{},"injectables/JwtAuthGuard.html":{},"injectables/LocalStrategy.html":{},"controllers/UserController.html":{}}}],["thumbnail",{"_index":265,"title":{},"body":{"interfaces/Course.html":{},"classes/Feed.html":{}}}],["title",{"_index":136,"title":{},"body":{"injectables/AppService.html":{},"interfaces/Author.html":{},"interfaces/Course.html":{},"classes/Feed.html":{},"interfaces/Learner.html":{},"interfaces/Todo.html":{},"classes/Tutor.html":{},"interfaces/User.html":{},"controllers/UserController.html":{}}}],["todo",{"_index":132,"title":{"interfaces/Todo.html":{}},"body":{"injectables/AppService.html":{},"interfaces/Todo.html":{},"coverage.html":{}}}],["todos",{"_index":90,"title":{},"body":{"controllers/AppController.html":{}}}],["todos.data",{"_index":94,"title":{},"body":{"controllers/AppController.html":{}}}],["totaldocs",{"_index":238,"title":{},"body":{"interfaces/CollationDocument.html":{},"injectables/PaginateModel.html":{},"interfaces/PaginateOptions.html":{},"interfaces/PaginationResult.html":{},"interfaces/PopulateOptions.html":{}}}],["totalpages",{"_index":241,"title":{},"body":{"interfaces/CollationDocument.html":{},"injectables/PaginateModel.html":{},"interfaces/PaginateOptions.html":{},"interfaces/PaginationResult.html":{},"interfaces/PopulateOptions.html":{}}}],["touch",{"_index":737,"title":{},"body":{"index.html":{}}}],["transform",{"_index":351,"title":{},"body":{"classes/JoiValidationPipe.html":{}}}],["transform(value",{"_index":355,"title":{},"body":{"classes/JoiValidationPipe.html":{}}}],["true",{"_index":250,"title":{},"body":{"interfaces/CollationDocument.html":{},"controllers/FeedController.html":{},"injectables/PaginateModel.html":{},"interfaces/PaginateOptions.html":{},"interfaces/PaginationResult.html":{},"interfaces/PopulateOptions.html":{},"classes/Student.html":{},"controllers/UserController.html":{},"miscellaneous/variables.html":{}}}],["try",{"_index":338,"title":{},"body":{"injectables/FeedService.html":{},"controllers/UserController.html":{},"injectables/UserService.html":{}}}],["tutor",{"_index":513,"title":{"classes/Tutor.html":{}},"body":{"classes/Tutor.html":{},"modules/UserModule.html":{},"coverage.html":{}}}],["tutordocument",{"_index":522,"title":{},"body":{"classes/Tutor.html":{},"controllers/UserController.html":{},"miscellaneous/typealiases.html":{}}}],["tutorschema",{"_index":525,"title":{},"body":{"classes/Tutor.html":{},"modules/UserModule.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["twitter",{"_index":742,"title":{},"body":{"index.html":{}}}],["type",{"_index":35,"title":{},"body":{"controllers/AppController.html":{},"injectables/AppService.html":{},"injectables/AuthService.html":{},"interfaces/Author.html":{},"interfaces/CollationDocument.html":{},"interfaces/Course.html":{},"interfaces/CreateStudentDto.html":{},"interfaces/CreateTutorDto.html":{},"interfaces/CreateUserDto.html":{},"classes/Feed.html":{},"injectables/FeedService.html":{},"interfaces/IFeedController.html":{},"interfaces/IFeedService.html":{},"classes/JoiValidationPipe.html":{},"injectables/JwtAuthGuard.html":{},"injectables/JwtConfigService.html":{},"injectables/JwtStrategy.html":{},"interfaces/Learner.html":{},"injectables/LocalStrategy.html":{},"classes/Material.html":{},"injectables/MongooseConfigService.html":{},"injectables/MulterConfigService.html":{},"injectables/PaginateModel.html":{},"interfaces/PaginateOptions.html":{},"interfaces/PaginationResult.html":{},"interfaces/PopulateOptions.html":{},"classes/Student.html":{},"interfaces/Todo.html":{},"classes/Tutor.html":{},"interfaces/User.html":{},"controllers/UserController.html":{},"injectables/UserService.html":{},"coverage.html":{},"miscellaneous/functions.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["typealiases",{"_index":754,"title":{"miscellaneous/typealiases.html":{}},"body":{}}],["typescript",{"_index":699,"title":{},"body":{"index.html":{}}}],["u",{"_index":182,"title":{},"body":{"injectables/AuthService.html":{},"controllers/UserController.html":{},"injectables/UserService.html":{}}}],["ui",{"_index":681,"title":{},"body":{"dependencies.html":{}}}],["unauthorized",{"_index":384,"title":{},"body":{"injectables/JwtAuthGuard.html":{}}}],["unauthorizedexception",{"_index":378,"title":{},"body":{"injectables/JwtAuthGuard.html":{},"injectables/LocalStrategy.html":{}}}],["unauthorizedexception('incorrect",{"_index":471,"title":{},"body":{"injectables/LocalStrategy.html":{}}}],["undefined",{"_index":482,"title":{},"body":{"classes/Material.html":{},"injectables/PaginateModel.html":{},"classes/Tutor.html":{}}}],["unique",{"_index":506,"title":{},"body":{"classes/Student.html":{},"dependencies.html":{},"miscellaneous/variables.html":{}}}],["unit",{"_index":714,"title":{},"body":{"index.html":{}}}],["unknown",{"_index":796,"title":{},"body":{"miscellaneous/variables.html":{}}}],["upload",{"_index":13,"title":{},"body":{"controllers/AppController.html":{},"injectables/JwtConfigService.html":{},"injectables/MongooseConfigService.html":{},"injectables/MulterConfigService.html":{}}}],["upload(@body",{"_index":80,"title":{},"body":{"controllers/AppController.html":{}}}],["upload(body",{"_index":31,"title":{},"body":{"controllers/AppController.html":{}}}],["upload_path",{"_index":411,"title":{},"body":{"injectables/JwtConfigService.html":{},"injectables/MongooseConfigService.html":{},"injectables/MulterConfigService.html":{}}}],["uploadedfile",{"_index":41,"title":{},"body":{"controllers/AppController.html":{}}}],["uploadfile",{"_index":591,"title":{},"body":{"injectables/UserService.html":{}}}],["uploadfile(body",{"_index":602,"title":{},"body":{"injectables/UserService.html":{}}}],["uri",{"_index":424,"title":{},"body":{"injectables/JwtConfigService.html":{},"injectables/MongooseConfigService.html":{},"injectables/MulterConfigService.html":{}}}],["useclass",{"_index":160,"title":{},"body":{"modules/AuthModule.html":{},"miscellaneous/variables.html":{}}}],["usefactory",{"_index":793,"title":{},"body":{"miscellaneous/variables.html":{}}}],["useguards",{"_index":42,"title":{},"body":{"controllers/AppController.html":{},"controllers/UserController.html":{}}}],["useguards(jwtauthguard",{"_index":86,"title":{},"body":{"controllers/AppController.html":{},"controllers/UserController.html":{}}}],["useguards(jwtauthguard)@get('profile",{"_index":533,"title":{},"body":{"controllers/UserController.html":{}}}],["useguards(localauthguard",{"_index":74,"title":{},"body":{"controllers/AppController.html":{}}}],["useguards(localauthguard)@post('auth/login",{"_index":25,"title":{},"body":{"controllers/AppController.html":{}}}],["useinterceptors",{"_index":43,"title":{},"body":{"controllers/AppController.html":{}}}],["useinterceptors(fileinterceptor('file",{"_index":79,"title":{},"body":{"controllers/AppController.html":{}}}],["usepipes",{"_index":541,"title":{},"body":{"controllers/UserController.html":{}}}],["usepipes(new",{"_index":571,"title":{},"body":{"controllers/UserController.html":{}}}],["user",{"_index":57,"title":{"interfaces/User.html":{}},"body":{"controllers/AppController.html":{},"injectables/AuthService.html":{},"interfaces/Author.html":{},"interfaces/CreateStudentDto.html":{},"interfaces/CreateTutorDto.html":{},"interfaces/CreateUserDto.html":{},"injectables/JwtAuthGuard.html":{},"interfaces/Learner.html":{},"injectables/LocalStrategy.html":{},"interfaces/User.html":{},"controllers/UserController.html":{},"injectables/UserService.html":{},"coverage.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["user._id",{"_index":184,"title":{},"body":{"injectables/AuthService.html":{}}}],["user.controller",{"_index":584,"title":{},"body":{"modules/UserModule.html":{}}}],["user.dto",{"_index":544,"title":{},"body":{"controllers/UserController.html":{},"injectables/UserService.html":{}}}],["user.dto.ts",{"_index":270,"title":{},"body":{"interfaces/CreateStudentDto.html":{},"interfaces/CreateTutorDto.html":{},"interfaces/CreateUserDto.html":{},"coverage.html":{},"miscellaneous/typealiases.html":{}}}],["user.email",{"_index":186,"title":{},"body":{"injectables/AuthService.html":{}}}],["user.isstudent",{"_index":188,"title":{},"body":{"injectables/AuthService.html":{}}}],["user.learningstyle",{"_index":192,"title":{},"body":{"injectables/AuthService.html":{}}}],["user.password",{"_index":611,"title":{},"body":{"injectables/UserService.html":{}}}],["user.schema",{"_index":547,"title":{},"body":{"controllers/UserController.html":{}}}],["user.schema.ts",{"_index":643,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["user.service",{"_index":548,"title":{},"body":{"controllers/UserController.html":{},"modules/UserModule.html":{}}}],["user.studentnumber",{"_index":190,"title":{},"body":{"injectables/AuthService.html":{}}}],["user/interfaces/user.interface",{"_index":175,"title":{},"body":{"injectables/AuthService.html":{},"interfaces/Course.html":{},"interfaces/CreateStudentDto.html":{},"interfaces/CreateTutorDto.html":{},"interfaces/CreateUserDto.html":{},"classes/Material.html":{},"classes/Student.html":{},"classes/Tutor.html":{}}}],["user/schemas/student.schema",{"_index":177,"title":{},"body":{"injectables/AuthService.html":{}}}],["user/user.module",{"_index":155,"title":{},"body":{"modules/AuthModule.html":{}}}],["user/user.service",{"_index":62,"title":{},"body":{"controllers/AppController.html":{},"injectables/AuthService.html":{},"injectables/LocalStrategy.html":{}}}],["user?.password",{"_index":181,"title":{},"body":{"injectables/AuthService.html":{}}}],["usercontroller",{"_index":527,"title":{"controllers/UserController.html":{}},"body":{"controllers/UserController.html":{},"modules/UserModule.html":{},"coverage.html":{}}}],["userdetails",{"_index":273,"title":{},"body":{"interfaces/CreateStudentDto.html":{},"interfaces/CreateTutorDto.html":{},"interfaces/CreateUserDto.html":{},"controllers/UserController.html":{},"injectables/UserService.html":{},"miscellaneous/typealiases.html":{}}}],["userid",{"_index":133,"title":{},"body":{"injectables/AppService.html":{},"interfaces/Todo.html":{},"injectables/UserService.html":{}}}],["usermodule",{"_index":111,"title":{"modules/UserModule.html":{}},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/UserModule.html":{},"modules.html":{},"overview.html":{},"miscellaneous/variables.html":{}}}],["username",{"_index":171,"title":{},"body":{"injectables/AuthService.html":{},"injectables/LocalStrategy.html":{},"injectables/UserService.html":{}}}],["users",{"_index":529,"title":{},"body":{"controllers/UserController.html":{}}}],["userservice",{"_index":61,"title":{"injectables/UserService.html":{}},"body":{"controllers/AppController.html":{},"injectables/AuthService.html":{},"controllers/UserController.html":{},"modules/UserModule.html":{},"injectables/UserService.html":{},"coverage.html":{},"overview.html":{}}}],["validate",{"_index":445,"title":{},"body":{"injectables/JwtStrategy.html":{},"injectables/LocalStrategy.html":{}}}],["validate(payload",{"_index":447,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["validate(username",{"_index":467,"title":{},"body":{"injectables/LocalStrategy.html":{}}}],["validatepassword",{"_index":172,"title":{},"body":{"injectables/AuthService.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["validatepassword(pass",{"_index":180,"title":{},"body":{"injectables/AuthService.html":{}}}],["validateuser",{"_index":162,"title":{},"body":{"injectables/AuthService.html":{}}}],["validateuser(username",{"_index":168,"title":{},"body":{"injectables/AuthService.html":{}}}],["validation",{"_index":670,"title":{},"body":{"dependencies.html":{},"miscellaneous/variables.html":{}}}],["value",{"_index":359,"title":{},"body":{"classes/JoiValidationPipe.html":{},"miscellaneous/variables.html":{}}}],["variable",{"_index":627,"title":{},"body":{"coverage.html":{}}}],["variables",{"_index":762,"title":{"miscellaneous/variables.html":{}},"body":{"miscellaneous/variables.html":{}}}],["watch",{"_index":709,"title":{},"body":{"index.html":{}}}],["website",{"_index":740,"title":{},"body":{"index.html":{}}}],["world",{"_index":73,"title":{},"body":{"controllers/AppController.html":{},"injectables/AppService.html":{},"interfaces/Todo.html":{}}}],["you'd",{"_index":730,"title":{},"body":{"index.html":{}}}],["zoom",{"_index":112,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/FeedModule.html":{},"modules/UserModule.html":{},"overview.html":{}}}]],"pipeline":["stemmer"]},
    "store": {"controllers/AppController.html":{"url":"controllers/AppController.html","title":"controller - AppController","body":"\n                   \n\n\n\n\n\n\n  Controllers\n  AppController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app.controller.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                getHello\n                            \n                            \n                                    Async\n                                getTodos\n                            \n                            \n                                    Async\n                                login\n                            \n                            \n                                    Async\n                                upload\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            getHello\n                        \n                        \n                    \n                \n            \n            \n                \ngetHello()\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get()@Render('index')\n                \n            \n\n            \n                \n                    Defined in src/app.controller.ts:33\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :     { message: string; }\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            getTodos\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    getTodos()\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get('todos')\n                \n            \n\n            \n                \n                    Defined in src/app.controller.ts:62\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :     {}\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            login\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    login(req)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @UseGuards(LocalAuthGuard)@Post('auth/login')\n                \n            \n\n            \n                \n                    Defined in src/app.controller.ts:39\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    req\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     {}\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            upload\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    upload(body, file: Express.Multer.File)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Post('upload')@UseInterceptors(undefined)\n                \n            \n\n            \n                \n                    Defined in src/app.controller.ts:45\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    body\n                                    \n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    file\n                                    \n                                            Express.Multer.File\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     {}\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n\n\n    \n        import {\n  Body,\n  Controller,\n  Get,\n  Post,\n  Render,\n  Request,\n  UploadedFile,\n  UseGuards,\n  UseInterceptors,\n} from '@nestjs/common';\nimport { AuthGuard } from '@nestjs/passport';\nimport { FileInterceptor } from '@nestjs/platform-express';\nimport { AuthService } from 'auth/auth.service';\nimport { JwtAuthGuard } from 'auth/jwt-auth.guard';\nimport { LocalAuthGuard } from 'auth/local-auth.guard';\nimport { User } from 'decotators/user.decorator';\nimport { AppService } from './app.service';\nimport { Express } from 'express';\nimport { UserService } from 'user/user.service';\nimport { diskStorage } from 'multer';\n\n@Controller()\nexport class AppController {\n  constructor(\n    private readonly appService: AppService,\n    private readonly authService: AuthService,\n    private readonly userService: UserService,\n  ) {}\n\n  @Get()\n  @Render('index')\n  getHello() {\n    return { message: 'Hello world!' };\n  }\n\n  @UseGuards(LocalAuthGuard)\n  @Post('auth/login')\n  async login(@Request() req) {\n    return this.authService.login(req.user);\n  }\n\n  @Post('upload')\n  @UseInterceptors(FileInterceptor('file'))\n  async upload(@Body() body, @UploadedFile() file: Express.Multer.File) {\n    console.log(file, body);\n    // const body: CreateMaterialDto = {\n\n    // }\n    // const result = this.userService.uploadFile()\n\n    return 'upload file';\n  }\n\n  // @UseGuards(JwtAuthGuard)\n  // @Get('profile')\n  // getProfile(@User() user) {\n  //   return user;\n  // }\n\n  @Get('todos')\n  async getTodos() {\n    const result = this.appService.getTodos();\n    const todos = await result.toPromise();\n    return { data: todos.data };\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/AppModule.html":{"url":"modules/AppModule.html","title":"module - AppModule","body":"\n                   \n\n\n\n\n    Modules\n    AppModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_AppModule\n\n\n\ncluster_AppModule_imports\n\n\n\ncluster_AppModule_providers\n\n\n\n\nAuthModule\n\nAuthModule\n\n\n\nAppModule\n\nAppModule\n\nAppModule -->\n\nAuthModule->AppModule\n\n\n\n\n\nFeedModule\n\nFeedModule\n\nAppModule -->\n\nFeedModule->AppModule\n\n\n\n\n\nUserModule\n\nUserModule\n\nAppModule -->\n\nUserModule->AppModule\n\n\n\n\n\nAppService\n\nAppService\n\nAppModule -->\n\nAppService->AppModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app.module.ts\n        \n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            AppService\n                        \n                    \n                \n                \n                    Controllers\n                    \n                        \n                            AppController\n                        \n                    \n                \n                \n                    Imports\n                    \n                        \n                            AuthModule\n                        \n                        \n                            FeedModule\n                        \n                        \n                            UserModule\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Module } from '@nestjs/common';\nimport { AppController } from './app.controller';\nimport { AppService } from './app.service';\nimport modules from './config/modules';\n\n@Module({\n  imports: [...modules],\n  controllers: [AppController],\n  providers: [AppService],\n})\nexport class AppModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/AppService.html":{"url":"injectables/AppService.html","title":"injectable - AppService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  AppService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app.service.ts\n        \n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                getHello\n                            \n                            \n                                getTodos\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(httpService: HttpService)\n                    \n                \n                        \n                            \n                                Defined in src/app.service.ts:13\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        httpService\n                                                  \n                                                        \n                                                                    HttpService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            getHello\n                        \n                        \n                    \n                \n            \n            \n                \ngetHello()\n                \n            \n\n\n            \n                \n                    Defined in src/app.service.ts:15\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         string\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            getTodos\n                        \n                        \n                    \n                \n            \n            \n                \ngetTodos()\n                \n            \n\n\n            \n                \n                    Defined in src/app.service.ts:19\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         Observable>\n\n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { HttpService, Injectable } from '@nestjs/common';\nimport { Observable } from 'rxjs';\nimport { AxiosResponse } from 'axios';\n\nexport interface Todo {\n  UserId: number;\n  Id: number;\n  Title: string;\n  Completed: boolean;\n}\n\n@Injectable()\nexport class AppService {\n  constructor(private httpService: HttpService) {}\n  getHello(): string {\n    return 'Hello World!';\n  }\n\n  getTodos(): Observable> {\n    return this.httpService.get('https://jsonplaceholder.typicode.com/todos');\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/AuthModule.html":{"url":"modules/AuthModule.html","title":"module - AuthModule","body":"\n                   \n\n\n\n\n    Modules\n    AuthModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_AuthModule\n\n\n\ncluster_AuthModule_exports\n\n\n\ncluster_AuthModule_imports\n\n\n\ncluster_AuthModule_providers\n\n\n\n\nUserModule\n\nUserModule\n\n\n\nAuthModule\n\nAuthModule\n\nAuthModule -->\n\nUserModule->AuthModule\n\n\n\n\n\nAuthService \n\nAuthService \n\nAuthService  -->\n\nAuthModule->AuthService \n\n\n\n\n\nAuthService\n\nAuthService\n\nAuthModule -->\n\nAuthService->AuthModule\n\n\n\n\n\nJwtStrategy\n\nJwtStrategy\n\nAuthModule -->\n\nJwtStrategy->AuthModule\n\n\n\n\n\nLocalStrategy\n\nLocalStrategy\n\nAuthModule -->\n\nLocalStrategy->AuthModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/auth/auth.module.ts\n        \n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            AuthService\n                        \n                        \n                            JwtStrategy\n                        \n                        \n                            LocalStrategy\n                        \n                    \n                \n                \n                    Imports\n                    \n                        \n                            UserModule\n                        \n                    \n                \n                \n                    Exports\n                    \n                        \n                            AuthService\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Module } from '@nestjs/common';\nimport { ConfigModule } from '@nestjs/config';\nimport { JwtModule } from '@nestjs/jwt';\nimport { PassportModule } from '@nestjs/passport';\nimport { JwtConfigService } from 'config/configuration';\nimport { UserModule } from 'user/user.module';\nimport { AuthService } from './auth.service';\nimport { JwtStrategy } from './jwt.strategy';\nimport { LocalStrategy } from './local.strategy';\n\n@Module({\n  imports: [\n    UserModule,\n    PassportModule,\n    ConfigModule,\n    JwtModule.registerAsync({\n      imports: [ConfigModule],\n      useClass: JwtConfigService,\n    }),\n  ],\n  controllers: [],\n  providers: [AuthService, LocalStrategy, JwtStrategy],\n  exports: [AuthService, JwtModule],\n})\nexport class AuthModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/AuthService.html":{"url":"injectables/AuthService.html","title":"injectable - AuthService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  AuthService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/auth/auth.service.ts\n        \n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                login\n                            \n                            \n                                    Async\n                                validateUser\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(userService: UserService, jwtService: JwtService)\n                    \n                \n                        \n                            \n                                Defined in src/auth/auth.service.ts:9\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        userService\n                                                  \n                                                        \n                                                                        UserService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        jwtService\n                                                  \n                                                        \n                                                                    JwtService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            login\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    login(user)\n                \n            \n\n\n            \n                \n                    Defined in src/auth/auth.service.ts:31\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    user\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     {}\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            validateUser\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    validateUser(username: string, pass: string)\n                \n            \n\n\n            \n                \n                    Defined in src/auth/auth.service.ts:15\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    username\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    pass\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     {}\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@nestjs/common';\nimport { JwtService } from '@nestjs/jwt';\nimport { validatePassword } from 'shared/hashing';\nimport { Learner } from 'user/interfaces/user.interface';\nimport { Student } from 'user/schemas/student.schema';\nimport { UserService } from 'user/user.service';\n\n@Injectable()\nexport class AuthService {\n  constructor(\n    private userService: UserService,\n    private jwtService: JwtService,\n  ) {}\n\n  async validateUser(username: string, pass: string) {\n    const user = await this.userService.findOne(username);\n    const pwdMatch = await validatePassword(pass, user?.password);\n    if (user && pwdMatch) {\n      const u = {\n        _id: user._id,\n        email: user.email,\n        isStudent: user.isStudent,\n        studentNumber: user.studentNumber,\n        learningStyle: user.learningStyle,\n      };\n      return u;\n    }\n    return null;\n  }\n\n  async login(user) {\n    const payload = { id: user._id, studentNumber: user.studentNumber };\n\n    return {\n      access_token: this.jwtService.sign(payload),\n      user: { ...user },\n    };\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/Author.html":{"url":"interfaces/Author.html","title":"interface - Author","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  Author\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/user/interfaces/user.interface.ts\n        \n\n\n            \n                Extends\n            \n            \n                        User\n            \n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                            Optional\n                                        coursesCreated\n                                \n                                \n                                        title\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        coursesCreated\n                                    \n                                \n                                \n                                    \n                                        coursesCreated:         Array\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         Array\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        title\n                                    \n                                \n                                \n                                    \n                                        title:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { Course } from 'feed/interfaces/feed.interface';\n\nexport interface User {\n  _id?: string;\n  firstname: string;\n  lastname: string;\n  email: string;\n  password: string;\n  isStudent: boolean;\n}\n\nexport interface Author extends User {\n  title: string;\n  coursesCreated?: Array;\n}\n\nexport interface Learner extends User {\n  level: string;\n  studentNumber: string;\n  learningStyle?: string;\n}\n\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/CollationDocument.html":{"url":"interfaces/CollationDocument.html","title":"interface - CollationDocument","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  CollationDocument\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/providers/PaginateModel.provider.ts\n        \n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        alternate\n                                \n                                \n                                        backwards\n                                \n                                \n                                        caseFirst\n                                \n                                \n                                        caseLevel\n                                \n                                \n                                        locale\n                                \n                                \n                                        maxVariable\n                                \n                                \n                                        numericOrdering\n                                \n                                \n                                        strength\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        alternate\n                                    \n                                \n                                \n                                    \n                                        alternate:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        backwards\n                                    \n                                \n                                \n                                    \n                                        backwards:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        caseFirst\n                                    \n                                \n                                \n                                    \n                                        caseFirst:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        caseLevel\n                                    \n                                \n                                \n                                    \n                                        caseLevel:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        locale\n                                    \n                                \n                                \n                                    \n                                        locale:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        maxVariable\n                                    \n                                \n                                \n                                    \n                                        maxVariable:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        numericOrdering\n                                    \n                                \n                                \n                                    \n                                        numericOrdering:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        strength\n                                    \n                                \n                                \n                                    \n                                        strength:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { Injectable } from '@nestjs/common';\nimport { FilterQuery, Document, Model } from 'mongoose';\n\nexport interface CollationDocument {\n  locale: string;\n  caseLevel: boolean;\n  caseFirst: string;\n  strength: number;\n  numericOrdering: boolean;\n  alternate: string;\n  maxVariable: string;\n  backwards: boolean;\n}\n\nexport interface PopulateOptions {\n  path: any;\n  select: any;\n  model: string | Model;\n  match: any;\n}\n\nexport interface PaginateOptions {\n  select?: Object | string;\n  sort?: Object | string;\n  page?: number;\n  limit?: number;\n  pagination?: boolean;\n  collation?: CollationDocument;\n  populate?: PopulateOptions;\n}\n\nexport interface PaginationResult {\n  docs: Array;\n  totalDocs: number;\n  limit: number;\n  hasPrevPage: boolean;\n  hasNextPage: boolean;\n  page: number;\n  totalPages: number;\n  prevPage: number | null;\n  nextPage: number | null;\n}\n\n@Injectable()\nexport class PaginateModel {\n  public async paginate(\n    model: Model,\n    query: (FilterQuery & Document) | {},\n    {\n      select = {},\n      sort = {},\n      page = 1,\n      limit = 10,\n      pagination = true,\n      collation,\n      populate,\n    }: PaginateOptions,\n  ): Promise {\n    const startIndex = (page - 1) * limit;\n    const endIndex = page * limit;\n    const dataLength = await model.countDocuments().exec();\n    const results: PaginationResult = {\n      docs: [],\n      totalDocs: null,\n      limit,\n      hasPrevPage: startIndex > 0,\n      hasNextPage: endIndex  0 ? page - 1 : null,\n      nextPage: endIndex \n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/Course.html":{"url":"interfaces/Course.html","title":"interface - Course","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  Course\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/feed/interfaces/feed.interface.ts\n        \n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        createdAt\n                                \n                                \n                                        createdBy\n                                \n                                \n                                        description\n                                \n                                \n                                        files\n                                \n                                \n                                        id\n                                \n                                \n                                        intro\n                                \n                                \n                                        learningStyle\n                                \n                                \n                                        objectives\n                                \n                                \n                                        requirements\n                                \n                                \n                                        thumbnail\n                                \n                                \n                                        title\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        createdAt\n                                    \n                                \n                                \n                                    \n                                        createdAt:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        createdBy\n                                    \n                                \n                                \n                                    \n                                        createdBy:         Author | string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         Author | string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        description\n                                    \n                                \n                                \n                                    \n                                        description:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        files\n                                    \n                                \n                                \n                                    \n                                        files:         any\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         any\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        id\n                                    \n                                \n                                \n                                    \n                                        id:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        intro\n                                    \n                                \n                                \n                                    \n                                        intro:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        learningStyle\n                                    \n                                \n                                \n                                    \n                                        learningStyle:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        objectives\n                                    \n                                \n                                \n                                    \n                                        objectives:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        requirements\n                                    \n                                \n                                \n                                    \n                                        requirements:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        thumbnail\n                                    \n                                \n                                \n                                    \n                                        thumbnail:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        title\n                                    \n                                \n                                \n                                    \n                                        title:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { Author } from 'user/interfaces/user.interface';\n\nexport interface Feed {\n  title: string;\n  image: string;\n  author: Author;\n  learningStyle: string;\n}\n\nexport interface Course {\n  id: string;\n  title: string;\n  thumbnail: string;\n  intro: string;\n  description: string;\n  learningStyle: string;\n  createdBy: Author | string;\n  createdAt: string;\n  objectives: string;\n  requirements: string;\n  files: any;\n}\n\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/CreateStudentDto.html":{"url":"interfaces/CreateStudentDto.html","title":"interface - CreateStudentDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  CreateStudentDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/user/dto/create-user.dto.ts\n        \n\n\n            \n                Extends\n            \n            \n                        Learner\n            \n\n\n\n\n    \n\n\n    \n        import { Author, Learner, User } from 'user/interfaces/user.interface';\n\nexport interface CreateUserDto extends User {\n  firstname: string;\n  lastname: string;\n  email: string;\n  password: string;\n}\n\nexport interface CreateStudentDto extends Learner {}\n\nexport interface CreateTutorDto extends Author {}\n\nexport type UserDetails = Learner & Author;\n\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/CreateTutorDto.html":{"url":"interfaces/CreateTutorDto.html","title":"interface - CreateTutorDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  CreateTutorDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/user/dto/create-user.dto.ts\n        \n\n\n            \n                Extends\n            \n            \n                        Author\n            \n\n\n\n\n    \n\n\n    \n        import { Author, Learner, User } from 'user/interfaces/user.interface';\n\nexport interface CreateUserDto extends User {\n  firstname: string;\n  lastname: string;\n  email: string;\n  password: string;\n}\n\nexport interface CreateStudentDto extends Learner {}\n\nexport interface CreateTutorDto extends Author {}\n\nexport type UserDetails = Learner & Author;\n\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/CreateUserDto.html":{"url":"interfaces/CreateUserDto.html","title":"interface - CreateUserDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  CreateUserDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/user/dto/create-user.dto.ts\n        \n\n\n            \n                Extends\n            \n            \n                        User\n            \n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        email\n                                \n                                \n                                        firstname\n                                \n                                \n                                        lastname\n                                \n                                \n                                        password\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        email\n                                    \n                                \n                                \n                                    \n                                        email:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        firstname\n                                    \n                                \n                                \n                                    \n                                        firstname:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        lastname\n                                    \n                                \n                                \n                                    \n                                        lastname:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        password\n                                    \n                                \n                                \n                                    \n                                        password:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { Author, Learner, User } from 'user/interfaces/user.interface';\n\nexport interface CreateUserDto extends User {\n  firstname: string;\n  lastname: string;\n  email: string;\n  password: string;\n}\n\nexport interface CreateStudentDto extends Learner {}\n\nexport interface CreateTutorDto extends Author {}\n\nexport type UserDetails = Learner & Author;\n\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/Feed.html":{"url":"classes/Feed.html","title":"class - Feed","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  Feed\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/feed/schemas/feed.schema.ts\n        \n\n\n\n            \n                Implements\n            \n            \n                            Course\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                createdAt\n                            \n                            \n                                createdBy\n                            \n                            \n                                description\n                            \n                            \n                                files\n                            \n                            \n                                id\n                            \n                            \n                                intro\n                            \n                            \n                                learningStyle\n                            \n                            \n                                objectives\n                            \n                            \n                                requirements\n                            \n                            \n                                thumbnail\n                            \n                            \n                                title\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            createdAt\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Prop()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/feed/schemas/feed.schema.ts:31\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            createdBy\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Prop()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/feed/schemas/feed.schema.ts:28\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            description\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Prop()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/feed/schemas/feed.schema.ts:22\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            files\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Prop()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/feed/schemas/feed.schema.ts:40\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            id\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Prop()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/feed/schemas/feed.schema.ts:10\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            intro\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Prop()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/feed/schemas/feed.schema.ts:19\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            learningStyle\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Prop()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/feed/schemas/feed.schema.ts:25\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            objectives\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Prop()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/feed/schemas/feed.schema.ts:34\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            requirements\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Prop()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/feed/schemas/feed.schema.ts:37\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            thumbnail\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Prop()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/feed/schemas/feed.schema.ts:16\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            title\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Prop()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/feed/schemas/feed.schema.ts:13\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { Prop, Schema, SchemaFactory } from '@nestjs/mongoose';\nimport { Course } from 'feed/interfaces/feed.interface';\nimport { Document } from 'mongoose';\n\nexport type FeedDocument = Feed & Document;\n\n@Schema()\nexport class Feed implements Course {\n  @Prop()\n  id: string;\n\n  @Prop()\n  title: string;\n\n  @Prop()\n  thumbnail: string;\n\n  @Prop()\n  intro: string;\n\n  @Prop()\n  description: string;\n\n  @Prop()\n  learningStyle: string;\n\n  @Prop()\n  createdBy: string;\n\n  @Prop()\n  createdAt: string;\n\n  @Prop()\n  objectives: string;\n\n  @Prop()\n  requirements: string;\n\n  @Prop()\n  files: string;\n}\n\nexport const FeedSchema = SchemaFactory.createForClass(Feed);\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"controllers/FeedController.html":{"url":"controllers/FeedController.html","title":"controller - FeedController","body":"\n                   \n\n\n\n\n\n\n  Controllers\n  FeedController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/feed/feed.controller.ts\n        \n\n            \n                Prefix\n            \n            \n                /feeds\n            \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                deleteFeed\n                            \n                            \n                                    Async\n                                getFeed\n                            \n                            \n                                    Async\n                                getFeeds\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            deleteFeed\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    deleteFeed()\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Delete()\n                \n            \n\n            \n                \n                    Defined in src/feed/feed.controller.ts:21\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :     {}\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            getFeed\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    getFeed()\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get()\n                \n            \n\n            \n                \n                    Defined in src/feed/feed.controller.ts:16\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :     {}\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            getFeeds\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    getFeeds()\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get()\n                \n            \n\n            \n                \n                    Defined in src/feed/feed.controller.ts:10\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :     Promise\n\n                    \n                \n            \n        \n    \n    \n\n\n    \n        import { Controller, Delete, Get } from '@nestjs/common';\nimport { FeedService } from './feed.service';\nimport { IFeedController } from './interfaces/feed-controller.interface';\n\n@Controller('/feeds')\nexport class FeedController implements IFeedController {\n  constructor(private readonly feedService: FeedService) {}\n\n  @Get()\n  async getFeeds(): Promise {\n    const feeds = await this.feedService.fetchFeeds();\n    return feeds;\n  }\n\n  @Get()\n  async getFeed() {\n    return 'get single feed route';\n  }\n\n  @Delete()\n  async deleteFeed() {\n    return true;\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/FeedModule.html":{"url":"modules/FeedModule.html","title":"module - FeedModule","body":"\n                   \n\n\n\n\n    Modules\n    FeedModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_FeedModule\n\n\n\ncluster_FeedModule_providers\n\n\n\n\nFeedService\n\nFeedService\n\n\n\nFeedModule\n\nFeedModule\n\nFeedModule -->\n\nFeedService->FeedModule\n\n\n\n\n\nPaginateModel\n\nPaginateModel\n\nFeedModule -->\n\nPaginateModel->FeedModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/feed/feed.module.ts\n        \n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            FeedService\n                        \n                        \n                            PaginateModel\n                        \n                    \n                \n                \n                    Controllers\n                    \n                        \n                            FeedController\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Module } from '@nestjs/common';\nimport { ModelDefinition, MongooseModule } from '@nestjs/mongoose';\nimport { PaginateModel } from 'providers/PaginateModel.provider';\nimport { FeedController } from './feed.controller';\nimport { FeedService } from './feed.service';\nimport { Feed, FeedSchema } from './schemas/feed.schema';\n\nconst models: ModelDefinition[] = [\n  {\n    name: Feed.name,\n    schema: FeedSchema,\n  },\n];\n\n@Module({\n  imports: [MongooseModule.forFeature(models)],\n  controllers: [FeedController],\n  providers: [FeedService, PaginateModel],\n  exports: [],\n})\nexport class FeedModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/FeedService.html":{"url":"injectables/FeedService.html","title":"injectable - FeedService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  FeedService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/feed/feed.service.ts\n        \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                paginate\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                fetchFeeds\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(feedModel: Model, paginateModel: PaginateModel)\n                    \n                \n                        \n                            \n                                Defined in src/feed/feed.service.ts:10\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        feedModel\n                                                  \n                                                        \n                                                                        Model\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        paginateModel\n                                                  \n                                                        \n                                                                        PaginateModel\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            fetchFeeds\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    fetchFeeds()\n                \n            \n\n\n            \n                \n                    Defined in src/feed/feed.service.ts:18\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :     {}\n\n                    \n                \n            \n        \n    \n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            paginate\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         PaginateModel\n\n                        \n                    \n                        \n                            \n                                    Defined in src/feed/feed.service.ts:10\n                            \n                        \n\n\n            \n        \n\n\n    \n\n\n    \n        import { Injectable } from '@nestjs/common';\nimport { InjectModel } from '@nestjs/mongoose';\nimport { Model } from 'mongoose';\nimport { PaginateModel } from 'providers/PaginateModel.provider';\nimport { IFeedService } from './interfaces/feed-service.interface';\nimport { Feed, FeedDocument } from './schemas/feed.schema';\n\n@Injectable()\nexport class FeedService {\n  paginate: PaginateModel;\n  constructor(\n    @InjectModel(Feed.name) private feedModel: Model,\n    private paginateModel: PaginateModel,\n  ) {\n    this.paginate = this.paginateModel;\n  }\n\n  async fetchFeeds() {\n    try {\n      return await this.paginateModel.paginate(this.feedModel, {}, {});\n    } catch (error) {\n      console.log(error);\n    }\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/IFeedController.html":{"url":"interfaces/IFeedController.html","title":"interface - IFeedController","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  IFeedController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/feed/interfaces/feed-controller.interface.ts\n        \n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        deleteFeed\n                                \n                                \n                                        getFeed\n                                \n                                \n                                        getFeeds\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        deleteFeed\n                                    \n                                \n                                \n                                    \n                                        deleteFeed:         function\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         function\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        getFeed\n                                    \n                                \n                                \n                                    \n                                        getFeed:         function\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         function\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        getFeeds\n                                    \n                                \n                                \n                                    \n                                        getFeeds:         function\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         function\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        export interface IFeedController {\n  getFeeds: () => Promise;\n  getFeed: () => Promise;\n  deleteFeed: () => Promise;\n}\n\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/IFeedService.html":{"url":"interfaces/IFeedService.html","title":"interface - IFeedService","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  IFeedService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/feed/interfaces/feed-service.interface.ts\n        \n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        deleteFeed\n                                \n                                \n                                        fetchFeed\n                                \n                                \n                                        fetchFeeds\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        deleteFeed\n                                    \n                                \n                                \n                                    \n                                        deleteFeed:         function\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         function\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        fetchFeed\n                                    \n                                \n                                \n                                    \n                                        fetchFeed:         function\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         function\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        fetchFeeds\n                                    \n                                \n                                \n                                    \n                                        fetchFeeds:         function\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         function\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        export interface IFeedService {\n  fetchFeeds: () => Promise;\n  fetchFeed: () => Promise;\n  deleteFeed: () => Promise;\n}\n\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/JoiValidationPipe.html":{"url":"classes/JoiValidationPipe.html","title":"class - JoiValidationPipe","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  JoiValidationPipe\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/shared/joiValidation.pipe.ts\n        \n\n\n\n            \n                Implements\n            \n            \n                            PipeTransform\n            \n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                transform\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(schema: ObjectSchema)\n                    \n                \n                        \n                            \n                                Defined in src/shared/joiValidation.pipe.ts:8\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        schema\n                                                  \n                                                        \n                                                                    ObjectSchema\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            transform\n                        \n                        \n                    \n                \n            \n            \n                \ntransform(value: any, metadata: ArgumentMetadata)\n                \n            \n\n\n            \n                \n                    Defined in src/shared/joiValidation.pipe.ts:11\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    value\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    metadata\n                                    \n                                            ArgumentMetadata\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import {\n  ArgumentMetadata,\n  BadRequestException,\n  PipeTransform,\n} from '@nestjs/common';\nimport { ObjectSchema } from 'joi';\n\nexport class JoiValidationPipe implements PipeTransform {\n  constructor(private schema: ObjectSchema) {}\n\n  transform(value: any, metadata: ArgumentMetadata) {\n    const { error } = this.schema.validate(value);\n    if (error) {\n      throw new BadRequestException(error.message);\n    }\n    return value;\n  }\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/JwtAuthGuard.html":{"url":"injectables/JwtAuthGuard.html","title":"injectable - JwtAuthGuard","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  JwtAuthGuard\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/auth/jwt-auth.guard.ts\n        \n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                canActivate\n                            \n                            \n                                handleRequest\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            canActivate\n                        \n                        \n                    \n                \n            \n            \n                \ncanActivate(context: ExecutionContext)\n                \n            \n\n\n            \n                \n                    Defined in src/auth/jwt-auth.guard.ts:11\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    context\n                                    \n                                            ExecutionContext\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            handleRequest\n                        \n                        \n                    \n                \n            \n            \n                \nhandleRequest(err, user, info)\n                \n            \n\n\n            \n                \n                    Defined in src/auth/jwt-auth.guard.ts:16\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    err\n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    user\n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    info\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import {\n  ExecutionContext,\n  HttpStatus,\n  Injectable,\n  UnauthorizedException,\n} from '@nestjs/common';\nimport { AuthGuard } from '@nestjs/passport';\n\n@Injectable()\nexport class JwtAuthGuard extends AuthGuard('jwt') {\n  canActivate(context: ExecutionContext) {\n    // console.log(context);\n    return super.canActivate(context);\n  }\n\n  handleRequest(err, user, info) {\n    if (err || !user) {\n      throw (\n        err ||\n        new UnauthorizedException(\n          {\n            statusCode: HttpStatus.UNAUTHORIZED,\n            message: 'Unauthorized',\n            info: info.message,\n          },\n          'An Error occured',\n        )\n      );\n    }\n\n    return user;\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/JwtConfigService.html":{"url":"injectables/JwtConfigService.html","title":"injectable - JwtConfigService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  JwtConfigService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/config/configuration.ts\n        \n\n\n\n            \n                Example\n            \n            \n            \n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                createJwtOptions\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(configService: ConfigService)\n                    \n                \n                        \n                            \n                                Defined in src/config/configuration.ts:70\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        configService\n                                                  \n                                                        \n                                                                    ConfigService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            createJwtOptions\n                        \n                        \n                    \n                \n            \n            \n                \ncreateJwtOptions()\n                \n            \n\n\n            \n                \n                    Defined in src/config/configuration.ts:72\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :     JwtModuleOptions\n\n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@nestjs/common';\nimport { ConfigService } from '@nestjs/config';\nimport {\n  MongooseModuleOptions,\n  MongooseOptionsFactory,\n} from '@nestjs/mongoose';\nimport {\n  MulterModuleOptions,\n  MulterOptionsFactory,\n} from '@nestjs/platform-express';\nimport { diskStorage } from 'multer';\nimport { extname } from 'path';\nimport * as _ from 'lodash';\nimport { JwtModuleOptions, JwtOptionsFactory } from '@nestjs/jwt';\n\n// config contants\nexport default () => ({\n  port: parseInt(process.env.PORT, 10) || 5000,\n  database: process.env.MONGODB_URI,\n  upload_path: './public/upload',\n  jwtSecret: process.env.JWTSECRET,\n});\n\n// get filename of file\nconst filename = (str: string) => _.split(str, '.')[0];\n\n/**\n * @class MongooseConfigService\n * @description Mongoose configuration service - Mongodb setup\n */\n@Injectable()\nexport class MongooseConfigService implements MongooseOptionsFactory {\n  constructor(private configService: ConfigService) {}\n  createMongooseOptions(): MongooseModuleOptions {\n    return {\n      uri: this.configService.get('database'),\n    };\n  }\n}\n\n/**\n * @class MulterConfigService\n * @description Multer configuration service -\n * Configuration for handling upload file\n *\n */\n@Injectable()\nexport class MulterConfigService implements MulterOptionsFactory {\n  constructor(private configService: ConfigService) {}\n  createMulterOptions(): MulterModuleOptions {\n    return {\n      storage: diskStorage({\n        destination: this.configService.get('upload_path'),\n        filename: (req, file, cb) => {\n          const name = filename(file.originalname);\n          return cb(null, `${name}${extname(file.originalname)}`);\n        },\n      }),\n    };\n  }\n}\n\n/**\n * @class JwtConfigService\n * @description Jwt configuration service -\n * Configuration for setting jwt options\n *\n */\n@Injectable()\nexport class JwtConfigService implements JwtOptionsFactory {\n  constructor(private configService: ConfigService) {}\n  createJwtOptions(): JwtModuleOptions {\n    return {\n      secret: this.configService.get('jwtSecret'),\n      signOptions: {\n        expiresIn: '1hr',\n      },\n    };\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/JwtStrategy.html":{"url":"injectables/JwtStrategy.html","title":"injectable - JwtStrategy","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  JwtStrategy\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/auth/jwt.strategy.ts\n        \n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                validate\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(configService: ConfigService)\n                    \n                \n                        \n                            \n                                Defined in src/auth/jwt.strategy.ts:7\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        configService\n                                                  \n                                                        \n                                                                    ConfigService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            validate\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    validate(payload: any)\n                \n            \n\n\n            \n                \n                    Defined in src/auth/jwt.strategy.ts:16\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    payload\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     {}\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@nestjs/common';\nimport { ConfigService } from '@nestjs/config';\nimport { PassportStrategy } from '@nestjs/passport';\nimport { ExtractJwt, Strategy } from 'passport-jwt';\n\n@Injectable()\nexport class JwtStrategy extends PassportStrategy(Strategy) {\n  constructor(private configService: ConfigService) {\n    super({\n      jwtFromRequest: ExtractJwt.fromAuthHeaderAsBearerToken(),\n      ignoreExpiration: false,\n      secretOrKey: process.env.JWTSECRET,\n    });\n  }\n\n  async validate(payload: any) {\n    return { id: payload.id, studentNumber: payload.studentNumber };\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/Learner.html":{"url":"interfaces/Learner.html","title":"interface - Learner","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  Learner\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/user/interfaces/user.interface.ts\n        \n\n\n            \n                Extends\n            \n            \n                        User\n            \n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                            Optional\n                                        learningStyle\n                                \n                                \n                                        level\n                                \n                                \n                                        studentNumber\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        learningStyle\n                                    \n                                \n                                \n                                    \n                                        learningStyle:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        level\n                                    \n                                \n                                \n                                    \n                                        level:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        studentNumber\n                                    \n                                \n                                \n                                    \n                                        studentNumber:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { Course } from 'feed/interfaces/feed.interface';\n\nexport interface User {\n  _id?: string;\n  firstname: string;\n  lastname: string;\n  email: string;\n  password: string;\n  isStudent: boolean;\n}\n\nexport interface Author extends User {\n  title: string;\n  coursesCreated?: Array;\n}\n\nexport interface Learner extends User {\n  level: string;\n  studentNumber: string;\n  learningStyle?: string;\n}\n\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/LocalAuthGuard.html":{"url":"injectables/LocalAuthGuard.html","title":"injectable - LocalAuthGuard","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  LocalAuthGuard\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/auth/local-auth.guard.ts\n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { Injectable } from '@nestjs/common';\nimport { AuthGuard } from '@nestjs/passport';\n\n@Injectable()\nexport class LocalAuthGuard extends AuthGuard('local') {}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/LocalStrategy.html":{"url":"injectables/LocalStrategy.html","title":"injectable - LocalStrategy","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  LocalStrategy\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/auth/local.strategy.ts\n        \n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                validate\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(authService: AuthService)\n                    \n                \n                        \n                            \n                                Defined in src/auth/local.strategy.ts:8\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        authService\n                                                  \n                                                        \n                                                                        AuthService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            validate\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    validate(username: string, password: string)\n                \n            \n\n\n            \n                \n                    Defined in src/auth/local.strategy.ts:13\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    username\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    password\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     {}\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable, UnauthorizedException } from '@nestjs/common';\nimport { PassportStrategy } from '@nestjs/passport';\nimport { Strategy } from 'passport-local';\nimport { User } from 'user/user.service';\nimport { AuthService } from './auth.service';\n\n@Injectable()\nexport class LocalStrategy extends PassportStrategy(Strategy) {\n  constructor(private authService: AuthService) {\n    super();\n  }\n\n  async validate(username: string, password: string) {\n    const user = await this.authService.validateUser(username, password);\n\n    if (!user) {\n      throw new UnauthorizedException('Incorrect username or password');\n    }\n    return user;\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/Material.html":{"url":"classes/Material.html","title":"class - Material","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  Material\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/user/schemas/files.schema.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                contentType\n                            \n                            \n                                data\n                            \n                            \n                                filename\n                            \n                            \n                                othernames\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            contentType\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Prop()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/user/schemas/files.schema.ts:18\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            data\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     Buffer\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Prop({type: 'Buffer'})\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/user/schemas/files.schema.ts:12\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            filename\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Prop()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/user/schemas/files.schema.ts:15\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            othernames\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Date\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Prop({type: Date, default: undefined})\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/user/schemas/files.schema.ts:21\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { Prop, Schema, SchemaFactory } from '@nestjs/mongoose';\nimport { Document } from 'mongoose';\nimport { Learner } from 'user/interfaces/user.interface';\n\nexport type MaterialDocument = Material & Document;\n\n// export interface CreateMaterialDto extends Material {}\n\n@Schema()\nexport class Material {\n  @Prop({ type: 'Buffer' })\n  data: Buffer;\n\n  @Prop()\n  filename: string;\n\n  @Prop()\n  contentType: string;\n\n  @Prop({ type: Date, default: Date.now() })\n  othernames: Date;\n}\n\nexport const MaterialSchema = SchemaFactory.createForClass(Material);\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/MongooseConfigService.html":{"url":"injectables/MongooseConfigService.html","title":"injectable - MongooseConfigService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  MongooseConfigService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/config/configuration.ts\n        \n\n\n\n            \n                Example\n            \n            \n            \n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                createMongooseOptions\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(configService: ConfigService)\n                    \n                \n                        \n                            \n                                Defined in src/config/configuration.ts:32\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        configService\n                                                  \n                                                        \n                                                                    ConfigService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            createMongooseOptions\n                        \n                        \n                    \n                \n            \n            \n                \ncreateMongooseOptions()\n                \n            \n\n\n            \n                \n                    Defined in src/config/configuration.ts:34\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :     MongooseModuleOptions\n\n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@nestjs/common';\nimport { ConfigService } from '@nestjs/config';\nimport {\n  MongooseModuleOptions,\n  MongooseOptionsFactory,\n} from '@nestjs/mongoose';\nimport {\n  MulterModuleOptions,\n  MulterOptionsFactory,\n} from '@nestjs/platform-express';\nimport { diskStorage } from 'multer';\nimport { extname } from 'path';\nimport * as _ from 'lodash';\nimport { JwtModuleOptions, JwtOptionsFactory } from '@nestjs/jwt';\n\n// config contants\nexport default () => ({\n  port: parseInt(process.env.PORT, 10) || 5000,\n  database: process.env.MONGODB_URI,\n  upload_path: './public/upload',\n  jwtSecret: process.env.JWTSECRET,\n});\n\n// get filename of file\nconst filename = (str: string) => _.split(str, '.')[0];\n\n/**\n * @class MongooseConfigService\n * @description Mongoose configuration service - Mongodb setup\n */\n@Injectable()\nexport class MongooseConfigService implements MongooseOptionsFactory {\n  constructor(private configService: ConfigService) {}\n  createMongooseOptions(): MongooseModuleOptions {\n    return {\n      uri: this.configService.get('database'),\n    };\n  }\n}\n\n/**\n * @class MulterConfigService\n * @description Multer configuration service -\n * Configuration for handling upload file\n *\n */\n@Injectable()\nexport class MulterConfigService implements MulterOptionsFactory {\n  constructor(private configService: ConfigService) {}\n  createMulterOptions(): MulterModuleOptions {\n    return {\n      storage: diskStorage({\n        destination: this.configService.get('upload_path'),\n        filename: (req, file, cb) => {\n          const name = filename(file.originalname);\n          return cb(null, `${name}${extname(file.originalname)}`);\n        },\n      }),\n    };\n  }\n}\n\n/**\n * @class JwtConfigService\n * @description Jwt configuration service -\n * Configuration for setting jwt options\n *\n */\n@Injectable()\nexport class JwtConfigService implements JwtOptionsFactory {\n  constructor(private configService: ConfigService) {}\n  createJwtOptions(): JwtModuleOptions {\n    return {\n      secret: this.configService.get('jwtSecret'),\n      signOptions: {\n        expiresIn: '1hr',\n      },\n    };\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/MulterConfigService.html":{"url":"injectables/MulterConfigService.html","title":"injectable - MulterConfigService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  MulterConfigService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/config/configuration.ts\n        \n\n\n\n            \n                Example\n            \n            \n            \n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                createMulterOptions\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(configService: ConfigService)\n                    \n                \n                        \n                            \n                                Defined in src/config/configuration.ts:48\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        configService\n                                                  \n                                                        \n                                                                    ConfigService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            createMulterOptions\n                        \n                        \n                    \n                \n            \n            \n                \ncreateMulterOptions()\n                \n            \n\n\n            \n                \n                    Defined in src/config/configuration.ts:50\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :     MulterModuleOptions\n\n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@nestjs/common';\nimport { ConfigService } from '@nestjs/config';\nimport {\n  MongooseModuleOptions,\n  MongooseOptionsFactory,\n} from '@nestjs/mongoose';\nimport {\n  MulterModuleOptions,\n  MulterOptionsFactory,\n} from '@nestjs/platform-express';\nimport { diskStorage } from 'multer';\nimport { extname } from 'path';\nimport * as _ from 'lodash';\nimport { JwtModuleOptions, JwtOptionsFactory } from '@nestjs/jwt';\n\n// config contants\nexport default () => ({\n  port: parseInt(process.env.PORT, 10) || 5000,\n  database: process.env.MONGODB_URI,\n  upload_path: './public/upload',\n  jwtSecret: process.env.JWTSECRET,\n});\n\n// get filename of file\nconst filename = (str: string) => _.split(str, '.')[0];\n\n/**\n * @class MongooseConfigService\n * @description Mongoose configuration service - Mongodb setup\n */\n@Injectable()\nexport class MongooseConfigService implements MongooseOptionsFactory {\n  constructor(private configService: ConfigService) {}\n  createMongooseOptions(): MongooseModuleOptions {\n    return {\n      uri: this.configService.get('database'),\n    };\n  }\n}\n\n/**\n * @class MulterConfigService\n * @description Multer configuration service -\n * Configuration for handling upload file\n *\n */\n@Injectable()\nexport class MulterConfigService implements MulterOptionsFactory {\n  constructor(private configService: ConfigService) {}\n  createMulterOptions(): MulterModuleOptions {\n    return {\n      storage: diskStorage({\n        destination: this.configService.get('upload_path'),\n        filename: (req, file, cb) => {\n          const name = filename(file.originalname);\n          return cb(null, `${name}${extname(file.originalname)}`);\n        },\n      }),\n    };\n  }\n}\n\n/**\n * @class JwtConfigService\n * @description Jwt configuration service -\n * Configuration for setting jwt options\n *\n */\n@Injectable()\nexport class JwtConfigService implements JwtOptionsFactory {\n  constructor(private configService: ConfigService) {}\n  createJwtOptions(): JwtModuleOptions {\n    return {\n      secret: this.configService.get('jwtSecret'),\n      signOptions: {\n        expiresIn: '1hr',\n      },\n    };\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/PaginateModel.html":{"url":"injectables/PaginateModel.html","title":"injectable - PaginateModel","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  PaginateModel\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/providers/PaginateModel.provider.ts\n        \n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                    Async\n                                paginate\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            Async\n                            paginate\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    paginate(model: Model, query:  | literal type, undefined: PaginateOptions)\n                \n            \n\n\n            \n                \n                    Defined in src/providers/PaginateModel.provider.ts:47\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    model\n                                    \n                                            Model\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    query\n                                    \n                                             | literal type\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    \n                                                PaginateOptions\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@nestjs/common';\nimport { FilterQuery, Document, Model } from 'mongoose';\n\nexport interface CollationDocument {\n  locale: string;\n  caseLevel: boolean;\n  caseFirst: string;\n  strength: number;\n  numericOrdering: boolean;\n  alternate: string;\n  maxVariable: string;\n  backwards: boolean;\n}\n\nexport interface PopulateOptions {\n  path: any;\n  select: any;\n  model: string | Model;\n  match: any;\n}\n\nexport interface PaginateOptions {\n  select?: Object | string;\n  sort?: Object | string;\n  page?: number;\n  limit?: number;\n  pagination?: boolean;\n  collation?: CollationDocument;\n  populate?: PopulateOptions;\n}\n\nexport interface PaginationResult {\n  docs: Array;\n  totalDocs: number;\n  limit: number;\n  hasPrevPage: boolean;\n  hasNextPage: boolean;\n  page: number;\n  totalPages: number;\n  prevPage: number | null;\n  nextPage: number | null;\n}\n\n@Injectable()\nexport class PaginateModel {\n  public async paginate(\n    model: Model,\n    query: (FilterQuery & Document) | {},\n    {\n      select = {},\n      sort = {},\n      page = 1,\n      limit = 10,\n      pagination = true,\n      collation,\n      populate,\n    }: PaginateOptions,\n  ): Promise {\n    const startIndex = (page - 1) * limit;\n    const endIndex = page * limit;\n    const dataLength = await model.countDocuments().exec();\n    const results: PaginationResult = {\n      docs: [],\n      totalDocs: null,\n      limit,\n      hasPrevPage: startIndex > 0,\n      hasNextPage: endIndex  0 ? page - 1 : null,\n      nextPage: endIndex \n    \n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/PaginateOptions.html":{"url":"interfaces/PaginateOptions.html","title":"interface - PaginateOptions","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  PaginateOptions\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/providers/PaginateModel.provider.ts\n        \n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                            Optional\n                                        collation\n                                \n                                \n                                            Optional\n                                        limit\n                                \n                                \n                                            Optional\n                                        page\n                                \n                                \n                                            Optional\n                                        pagination\n                                \n                                \n                                            Optional\n                                        populate\n                                \n                                \n                                            Optional\n                                        select\n                                \n                                \n                                            Optional\n                                        sort\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        collation\n                                    \n                                \n                                \n                                    \n                                        collation:         CollationDocument\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         CollationDocument\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        limit\n                                    \n                                \n                                \n                                    \n                                        limit:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        page\n                                    \n                                \n                                \n                                    \n                                        page:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        pagination\n                                    \n                                \n                                \n                                    \n                                        pagination:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        populate\n                                    \n                                \n                                \n                                    \n                                        populate:         PopulateOptions\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         PopulateOptions\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        select\n                                    \n                                \n                                \n                                    \n                                        select:     Object | string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     Object | string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        sort\n                                    \n                                \n                                \n                                    \n                                        sort:     Object | string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     Object | string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { Injectable } from '@nestjs/common';\nimport { FilterQuery, Document, Model } from 'mongoose';\n\nexport interface CollationDocument {\n  locale: string;\n  caseLevel: boolean;\n  caseFirst: string;\n  strength: number;\n  numericOrdering: boolean;\n  alternate: string;\n  maxVariable: string;\n  backwards: boolean;\n}\n\nexport interface PopulateOptions {\n  path: any;\n  select: any;\n  model: string | Model;\n  match: any;\n}\n\nexport interface PaginateOptions {\n  select?: Object | string;\n  sort?: Object | string;\n  page?: number;\n  limit?: number;\n  pagination?: boolean;\n  collation?: CollationDocument;\n  populate?: PopulateOptions;\n}\n\nexport interface PaginationResult {\n  docs: Array;\n  totalDocs: number;\n  limit: number;\n  hasPrevPage: boolean;\n  hasNextPage: boolean;\n  page: number;\n  totalPages: number;\n  prevPage: number | null;\n  nextPage: number | null;\n}\n\n@Injectable()\nexport class PaginateModel {\n  public async paginate(\n    model: Model,\n    query: (FilterQuery & Document) | {},\n    {\n      select = {},\n      sort = {},\n      page = 1,\n      limit = 10,\n      pagination = true,\n      collation,\n      populate,\n    }: PaginateOptions,\n  ): Promise {\n    const startIndex = (page - 1) * limit;\n    const endIndex = page * limit;\n    const dataLength = await model.countDocuments().exec();\n    const results: PaginationResult = {\n      docs: [],\n      totalDocs: null,\n      limit,\n      hasPrevPage: startIndex > 0,\n      hasNextPage: endIndex  0 ? page - 1 : null,\n      nextPage: endIndex \n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/PaginationResult.html":{"url":"interfaces/PaginationResult.html","title":"interface - PaginationResult","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  PaginationResult\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/providers/PaginateModel.provider.ts\n        \n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        docs\n                                \n                                \n                                        hasNextPage\n                                \n                                \n                                        hasPrevPage\n                                \n                                \n                                        limit\n                                \n                                \n                                        nextPage\n                                \n                                \n                                        page\n                                \n                                \n                                        prevPage\n                                \n                                \n                                        totalDocs\n                                \n                                \n                                        totalPages\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        docs\n                                    \n                                \n                                \n                                    \n                                        docs:     Array\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     Array\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        hasNextPage\n                                    \n                                \n                                \n                                    \n                                        hasNextPage:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        hasPrevPage\n                                    \n                                \n                                \n                                    \n                                        hasPrevPage:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        limit\n                                    \n                                \n                                \n                                    \n                                        limit:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        nextPage\n                                    \n                                \n                                \n                                    \n                                        nextPage:     number | null\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     number | null\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        page\n                                    \n                                \n                                \n                                    \n                                        page:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        prevPage\n                                    \n                                \n                                \n                                    \n                                        prevPage:     number | null\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     number | null\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        totalDocs\n                                    \n                                \n                                \n                                    \n                                        totalDocs:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        totalPages\n                                    \n                                \n                                \n                                    \n                                        totalPages:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { Injectable } from '@nestjs/common';\nimport { FilterQuery, Document, Model } from 'mongoose';\n\nexport interface CollationDocument {\n  locale: string;\n  caseLevel: boolean;\n  caseFirst: string;\n  strength: number;\n  numericOrdering: boolean;\n  alternate: string;\n  maxVariable: string;\n  backwards: boolean;\n}\n\nexport interface PopulateOptions {\n  path: any;\n  select: any;\n  model: string | Model;\n  match: any;\n}\n\nexport interface PaginateOptions {\n  select?: Object | string;\n  sort?: Object | string;\n  page?: number;\n  limit?: number;\n  pagination?: boolean;\n  collation?: CollationDocument;\n  populate?: PopulateOptions;\n}\n\nexport interface PaginationResult {\n  docs: Array;\n  totalDocs: number;\n  limit: number;\n  hasPrevPage: boolean;\n  hasNextPage: boolean;\n  page: number;\n  totalPages: number;\n  prevPage: number | null;\n  nextPage: number | null;\n}\n\n@Injectable()\nexport class PaginateModel {\n  public async paginate(\n    model: Model,\n    query: (FilterQuery & Document) | {},\n    {\n      select = {},\n      sort = {},\n      page = 1,\n      limit = 10,\n      pagination = true,\n      collation,\n      populate,\n    }: PaginateOptions,\n  ): Promise {\n    const startIndex = (page - 1) * limit;\n    const endIndex = page * limit;\n    const dataLength = await model.countDocuments().exec();\n    const results: PaginationResult = {\n      docs: [],\n      totalDocs: null,\n      limit,\n      hasPrevPage: startIndex > 0,\n      hasNextPage: endIndex  0 ? page - 1 : null,\n      nextPage: endIndex \n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/PopulateOptions.html":{"url":"interfaces/PopulateOptions.html","title":"interface - PopulateOptions","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  PopulateOptions\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/providers/PaginateModel.provider.ts\n        \n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        match\n                                \n                                \n                                        model\n                                \n                                \n                                        path\n                                \n                                \n                                        select\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        match\n                                    \n                                \n                                \n                                    \n                                        match:         any\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         any\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        model\n                                    \n                                \n                                \n                                    \n                                        model:     string | Model\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string | Model\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        path\n                                    \n                                \n                                \n                                    \n                                        path:         any\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         any\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        select\n                                    \n                                \n                                \n                                    \n                                        select:         any\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         any\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { Injectable } from '@nestjs/common';\nimport { FilterQuery, Document, Model } from 'mongoose';\n\nexport interface CollationDocument {\n  locale: string;\n  caseLevel: boolean;\n  caseFirst: string;\n  strength: number;\n  numericOrdering: boolean;\n  alternate: string;\n  maxVariable: string;\n  backwards: boolean;\n}\n\nexport interface PopulateOptions {\n  path: any;\n  select: any;\n  model: string | Model;\n  match: any;\n}\n\nexport interface PaginateOptions {\n  select?: Object | string;\n  sort?: Object | string;\n  page?: number;\n  limit?: number;\n  pagination?: boolean;\n  collation?: CollationDocument;\n  populate?: PopulateOptions;\n}\n\nexport interface PaginationResult {\n  docs: Array;\n  totalDocs: number;\n  limit: number;\n  hasPrevPage: boolean;\n  hasNextPage: boolean;\n  page: number;\n  totalPages: number;\n  prevPage: number | null;\n  nextPage: number | null;\n}\n\n@Injectable()\nexport class PaginateModel {\n  public async paginate(\n    model: Model,\n    query: (FilterQuery & Document) | {},\n    {\n      select = {},\n      sort = {},\n      page = 1,\n      limit = 10,\n      pagination = true,\n      collation,\n      populate,\n    }: PaginateOptions,\n  ): Promise {\n    const startIndex = (page - 1) * limit;\n    const endIndex = page * limit;\n    const dataLength = await model.countDocuments().exec();\n    const results: PaginationResult = {\n      docs: [],\n      totalDocs: null,\n      limit,\n      hasPrevPage: startIndex > 0,\n      hasNextPage: endIndex  0 ? page - 1 : null,\n      nextPage: endIndex \n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/Student.html":{"url":"classes/Student.html","title":"class - Student","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  Student\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/user/schemas/student.schema.ts\n        \n\n\n\n            \n                Implements\n            \n            \n                            Learner\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                email\n                            \n                            \n                                firstname\n                            \n                            \n                                isStudent\n                            \n                            \n                                lastname\n                            \n                            \n                                learningStyle\n                            \n                            \n                                level\n                            \n                            \n                                password\n                            \n                            \n                                studentNumber\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            email\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Prop({unique: true})\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/user/schemas/student.schema.ts:19\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            firstname\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Prop()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/user/schemas/student.schema.ts:10\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            isStudent\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         boolean\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Prop()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/user/schemas/student.schema.ts:28\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            lastname\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Prop()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/user/schemas/student.schema.ts:13\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            learningStyle\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Prop()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/user/schemas/student.schema.ts:25\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            level\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Prop()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/user/schemas/student.schema.ts:16\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            password\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Prop()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/user/schemas/student.schema.ts:31\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            studentNumber\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Prop({unique: true})\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/user/schemas/student.schema.ts:22\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { Prop, Schema, SchemaFactory } from '@nestjs/mongoose';\nimport { Document } from 'mongoose';\nimport { Learner } from 'user/interfaces/user.interface';\n\nexport type StudentDocument = Student & Document;\n\n@Schema()\nexport class Student implements Learner {\n  @Prop()\n  firstname: string;\n\n  @Prop()\n  lastname: string;\n\n  @Prop()\n  level: string;\n\n  @Prop({ unique: true })\n  email: string;\n\n  @Prop({ unique: true })\n  studentNumber: string;\n\n  @Prop()\n  learningStyle: string;\n\n  @Prop()\n  isStudent: boolean;\n\n  @Prop()\n  password: string;\n}\n\nconst StudentSchema = SchemaFactory.createForClass(Student);\n\nStudentSchema.virtual('fullName').get(function () {\n  return `${this.firstname} ${this.surname} ${this.othernames}`;\n});\n\nexport { StudentSchema };\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/Todo.html":{"url":"interfaces/Todo.html","title":"interface - Todo","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  Todo\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app.service.ts\n        \n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        Completed\n                                \n                                \n                                        Id\n                                \n                                \n                                        Title\n                                \n                                \n                                        UserId\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        Completed\n                                    \n                                \n                                \n                                    \n                                        Completed:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        Id\n                                    \n                                \n                                \n                                    \n                                        Id:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        Title\n                                    \n                                \n                                \n                                    \n                                        Title:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        UserId\n                                    \n                                \n                                \n                                    \n                                        UserId:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { HttpService, Injectable } from '@nestjs/common';\nimport { Observable } from 'rxjs';\nimport { AxiosResponse } from 'axios';\n\nexport interface Todo {\n  UserId: number;\n  Id: number;\n  Title: string;\n  Completed: boolean;\n}\n\n@Injectable()\nexport class AppService {\n  constructor(private httpService: HttpService) {}\n  getHello(): string {\n    return 'Hello World!';\n  }\n\n  getTodos(): Observable> {\n    return this.httpService.get('https://jsonplaceholder.typicode.com/todos');\n  }\n}\n\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/Tutor.html":{"url":"classes/Tutor.html","title":"class - Tutor","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  Tutor\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/user/schemas/tutor.schema.ts\n        \n\n\n\n            \n                Implements\n            \n            \n                            Author\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                coursesCreated\n                            \n                            \n                                email\n                            \n                            \n                                firstname\n                            \n                            \n                                isStudent\n                            \n                            \n                                lastname\n                            \n                            \n                                password\n                            \n                            \n                                title\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            coursesCreated\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Array\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Prop({type: undefined})\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/user/schemas/tutor.schema.ts:30\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            email\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Prop()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/user/schemas/tutor.schema.ts:21\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            firstname\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Prop()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/user/schemas/tutor.schema.ts:12\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            isStudent\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         boolean\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Prop()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/user/schemas/tutor.schema.ts:27\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            lastname\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Prop()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/user/schemas/tutor.schema.ts:15\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            password\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Prop()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/user/schemas/tutor.schema.ts:18\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            title\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Prop()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/user/schemas/tutor.schema.ts:24\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { Prop, Schema, SchemaFactory } from '@nestjs/mongoose';\nimport { Course } from 'feed/interfaces/feed.interface';\nimport * as mongoose from 'mongoose';\nimport { Document } from 'mongoose';\nimport { Author } from 'user/interfaces/user.interface';\n\nexport type TutorDocument = Tutor & Document;\n\n@Schema()\nexport class Tutor implements Author {\n  @Prop()\n  firstname: string;\n\n  @Prop()\n  lastname: string;\n\n  @Prop()\n  password: string;\n\n  @Prop()\n  email: string;\n\n  @Prop()\n  title: string;\n\n  @Prop()\n  isStudent: boolean;\n\n  @Prop({ type: [{ type: mongoose.Schema.Types.ObjectId, ref: 'Course' }] })\n  coursesCreated: Array;\n}\n\nexport const TutorSchema = SchemaFactory.createForClass(Tutor);\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/User.html":{"url":"interfaces/User.html","title":"interface - User","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  User\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/user/interfaces/user.interface.ts\n        \n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                            Optional\n                                        _id\n                                \n                                \n                                        email\n                                \n                                \n                                        firstname\n                                \n                                \n                                        isStudent\n                                \n                                \n                                        lastname\n                                \n                                \n                                        password\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        _id\n                                    \n                                \n                                \n                                    \n                                        _id:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        email\n                                    \n                                \n                                \n                                    \n                                        email:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        firstname\n                                    \n                                \n                                \n                                    \n                                        firstname:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        isStudent\n                                    \n                                \n                                \n                                    \n                                        isStudent:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        lastname\n                                    \n                                \n                                \n                                    \n                                        lastname:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        password\n                                    \n                                \n                                \n                                    \n                                        password:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { Course } from 'feed/interfaces/feed.interface';\n\nexport interface User {\n  _id?: string;\n  firstname: string;\n  lastname: string;\n  email: string;\n  password: string;\n  isStudent: boolean;\n}\n\nexport interface Author extends User {\n  title: string;\n  coursesCreated?: Array;\n}\n\nexport interface Learner extends User {\n  level: string;\n  studentNumber: string;\n  learningStyle?: string;\n}\n\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"controllers/UserController.html":{"url":"controllers/UserController.html","title":"controller - UserController","body":"\n                   \n\n\n\n\n\n\n  Controllers\n  UserController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/user/user.controller.ts\n        \n\n            \n                Prefix\n            \n            \n                users\n            \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                getProfile\n                            \n                            \n                                    Async\n                                register\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            getProfile\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    getProfile(user)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @UseGuards(JwtAuthGuard)@Get('profile')\n                \n            \n\n            \n                \n                    Defined in src/user/user.controller.ts:46\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    user\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     {}\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            register\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    register(body: UserDetails)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Post('register')@UsePipes(new JoiValidationPipe())\n                \n            \n\n            \n                \n                    Defined in src/user/user.controller.ts:57\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    body\n                                    \n                                                UserDetails\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     {}\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n\n\n    \n        import {\n  BadRequestException,\n  Body,\n  Controller,\n  Get,\n  NotAcceptableException,\n  NotFoundException,\n  Param,\n  Post,\n  UseGuards,\n  UsePipes,\n} from '@nestjs/common';\nimport { JoiValidationPipe } from 'shared/joiValidation.pipe';\nimport { UserDetails } from './dto/create-user.dto';\nimport { createUserSchema } from './schemas/validation/create-user.schema';\nimport { UserService } from './user.service';\nimport MongooseError from 'mongoose/lib/error';\nimport { JwtAuthGuard } from 'auth/jwt-auth.guard';\nimport { User } from 'decotators/user.decorator';\nimport { StudentDocument } from './schemas/student.schema';\nimport { TutorDocument } from './schemas/tutor.schema';\n\nfunction formatUserResponseData(data: any): Omit {\n  const user: Omit = {\n    firstname: data.firstname,\n    _id: data._id,\n    lastname: data.lastname,\n    email: data.email,\n    isStudent: data.isStudent,\n    title: data.title,\n    coursesCreated: data.coursesCreated,\n    level: data.level,\n    studentNumber: data.studentNumber,\n    learningStyle: data.learningStyle,\n  };\n\n  return user;\n}\n\n@Controller('users')\nexport class UserController {\n  constructor(private userService: UserService) {}\n\n  @UseGuards(JwtAuthGuard)\n  @Get('profile')\n  async getProfile(@User() user) {\n    try {\n      const u = await this.userService.profile(user.id);\n      return { success: true, data: { ...formatUserResponseData(u) } };\n    } catch (err) {\n      throw new NotFoundException(err.message);\n    }\n  }\n\n  @Post('register')\n  @UsePipes(new JoiValidationPipe(createUserSchema))\n  async register(@Body() body: UserDetails) {\n    try {\n      const createdUser = await this.userService.createUser(body);\n      return {\n        success: true,\n        data: { ...formatUserResponseData(createdUser) },\n      };\n    } catch (error) {\n      console.log(error.keyValue);\n      throw new BadRequestException(error);\n    }\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/UserModule.html":{"url":"modules/UserModule.html","title":"module - UserModule","body":"\n                   \n\n\n\n\n    Modules\n    UserModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_UserModule\n\n\n\ncluster_UserModule_exports\n\n\n\ncluster_UserModule_providers\n\n\n\n\nUserService \n\nUserService \n\n\n\nUserModule\n\nUserModule\n\nUserService  -->\n\nUserModule->UserService \n\n\n\n\n\nUserService\n\nUserService\n\nUserModule -->\n\nUserService->UserModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/user/user.module.ts\n        \n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            UserService\n                        \n                    \n                \n                \n                    Controllers\n                    \n                        \n                            UserController\n                        \n                    \n                \n                \n                    Exports\n                    \n                        \n                            UserService\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Module } from '@nestjs/common';\nimport { ModelDefinition, MongooseModule } from '@nestjs/mongoose';\nimport { Material, MaterialSchema } from './schemas/files.schema';\nimport { Student, StudentSchema } from './schemas/student.schema';\nimport { Tutor, TutorSchema } from './schemas/tutor.schema';\nimport { UserController } from './user.controller';\nimport { UserService } from './user.service';\n\nconst models: ModelDefinition[] = [\n  {\n    name: Material.name,\n    schema: MaterialSchema,\n  },\n  {\n    name: Student.name,\n    schema: StudentSchema,\n  },\n];\n\n@Module({\n  imports: [MongooseModule.forFeature(models)],\n  providers: [UserService],\n  controllers: [UserController],\n  exports: [UserService],\n})\nexport class UserModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/UserService.html":{"url":"injectables/UserService.html","title":"injectable - UserService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  UserService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/user/user.service.ts\n        \n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                createUser\n                            \n                            \n                                    Async\n                                findOne\n                            \n                            \n                                    Async\n                                profile\n                            \n                            \n                                    Async\n                                uploadFile\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(materialModel: Model, studentModel: Model)\n                    \n                \n                        \n                            \n                                Defined in src/user/user.service.ts:16\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        materialModel\n                                                  \n                                                        \n                                                                        Model\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        studentModel\n                                                  \n                                                        \n                                                                        Model\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            createUser\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    createUser(body: UserDetails)\n                \n            \n\n\n            \n                \n                    Defined in src/user/user.service.ts:39\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    body\n                                    \n                                                UserDetails\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            findOne\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    findOne(username: string)\n                \n            \n\n\n            \n                \n                    Defined in src/user/user.service.ts:22\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    username\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            profile\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    profile(id: string)\n                \n            \n\n\n            \n                \n                    Defined in src/user/user.service.ts:30\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     {}\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            uploadFile\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    uploadFile(body)\n                \n            \n\n\n            \n                \n                    Defined in src/user/user.service.ts:48\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    body\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     {}\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Inject, Injectable } from '@nestjs/common';\nimport { InjectModel } from '@nestjs/mongoose';\nimport { Model } from 'mongoose';\nimport { hashPassword } from 'shared/hashing';\nimport { UserDetails } from './dto/create-user.dto';\nimport { Material, MaterialDocument } from './schemas/files.schema';\nimport { Student, StudentDocument } from './schemas/student.schema';\n\nexport type User = {\n  userId: number;\n  username: string;\n  password: string;\n};\n\n@Injectable()\nexport class UserService {\n  constructor(\n    @InjectModel(Material.name) private materialModel: Model,\n    @InjectModel(Student.name) private studentModel: Model,\n  ) {}\n\n  async findOne(username: string): Promise {\n    const user = await this.studentModel\n      .findOne({ studentNumber: username })\n      .exec();\n\n    return user;\n  }\n\n  async profile(id: string) {\n    try {\n      const user = await this.studentModel.findById(id);\n      return user;\n    } catch (error) {\n      console.log(error);\n    }\n  }\n\n  async createUser(body: UserDetails): Promise {\n    const user = body;\n    user.password = await hashPassword(user.password);\n    const newUser = new this.studentModel(user);\n    const savedUser = await newUser.save();\n    // const { password, ...u } = newUser;\n    return savedUser;\n  }\n\n  async uploadFile(body) {\n    const newFile = new this.materialModel(body);\n    return newFile;\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"coverage.html":{"url":"coverage.html","title":"coverage - coverage","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n    Documentation coverage\n\n\n\n    \n\n\n\n    \n        \n            File\n            Type\n            Identifier\n            Statements\n        \n    \n    \n        \n            \n                \n                src/app.controller.ts\n            \n            controller\n            AppController\n            \n                0 %\n                (0/5)\n            \n        \n        \n            \n                \n                src/app.service.ts\n            \n            injectable\n            AppService\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                src/app.service.ts\n            \n            interface\n            Todo\n            \n                0 %\n                (0/5)\n            \n        \n        \n            \n                \n                src/auth/auth.service.ts\n            \n            injectable\n            AuthService\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                src/auth/jwt-auth.guard.ts\n            \n            injectable\n            JwtAuthGuard\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/auth/jwt.strategy.ts\n            \n            injectable\n            JwtStrategy\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/auth/local-auth.guard.ts\n            \n            injectable\n            LocalAuthGuard\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/auth/local.strategy.ts\n            \n            injectable\n            LocalStrategy\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/config/configuration.ts\n            \n            injectable\n            JwtConfigService\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/config/configuration.ts\n            \n            injectable\n            MongooseConfigService\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/config/configuration.ts\n            \n            injectable\n            MulterConfigService\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/config/configuration.ts\n            \n            variable\n            filename\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/config/constants.ts\n            \n            variable\n            CONFIG_MODULE_OPTIONS\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/config/modules.ts\n            \n            variable\n            modules\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/config/mongooseModelFactories.ts\n            \n            variable\n            mongooseModelFactories\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/decotators/user.decorator.ts\n            \n            variable\n            User\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/feed/feed.controller.ts\n            \n            controller\n            FeedController\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                src/feed/feed.module.ts\n            \n            variable\n            models\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/feed/feed.service.ts\n            \n            injectable\n            FeedService\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                src/feed/interfaces/feed-controller.interface.ts\n            \n            interface\n            IFeedController\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                src/feed/interfaces/feed-service.interface.ts\n            \n            interface\n            IFeedService\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                src/feed/interfaces/feed.interface.ts\n            \n            interface\n            Course\n            \n                0 %\n                (0/12)\n            \n        \n        \n            \n                \n                src/feed/interfaces/feed.interface.ts\n            \n            interface\n            Feed\n            \n                0 %\n                (0/5)\n            \n        \n        \n            \n                \n                src/feed/schemas/feed.schema.ts\n            \n            class\n            Feed\n            \n                0 %\n                (0/12)\n            \n        \n        \n            \n                \n                src/feed/schemas/feed.schema.ts\n            \n            variable\n            FeedSchema\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/main.ts\n            \n            function\n            bootstrap\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/providers/PaginateModel.provider.ts\n            \n            injectable\n            PaginateModel\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/providers/PaginateModel.provider.ts\n            \n            interface\n            CollationDocument\n            \n                0 %\n                (0/9)\n            \n        \n        \n            \n                \n                src/providers/PaginateModel.provider.ts\n            \n            interface\n            PaginateOptions\n            \n                0 %\n                (0/8)\n            \n        \n        \n            \n                \n                src/providers/PaginateModel.provider.ts\n            \n            interface\n            PaginationResult\n            \n                0 %\n                (0/10)\n            \n        \n        \n            \n                \n                src/providers/PaginateModel.provider.ts\n            \n            interface\n            PopulateOptions\n            \n                0 %\n                (0/5)\n            \n        \n        \n            \n                \n                src/shared/hashing.ts\n            \n            variable\n            hashPassword\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/shared/hashing.ts\n            \n            variable\n            validatePassword\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/shared/joiValidation.pipe.ts\n            \n            class\n            JoiValidationPipe\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/user/dto/create-user.dto.ts\n            \n            interface\n            CreateStudentDto\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/user/dto/create-user.dto.ts\n            \n            interface\n            CreateTutorDto\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/user/dto/create-user.dto.ts\n            \n            interface\n            CreateUserDto\n            \n                0 %\n                (0/5)\n            \n        \n        \n            \n                \n                src/user/interfaces/user.interface.ts\n            \n            interface\n            Author\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/user/interfaces/user.interface.ts\n            \n            interface\n            Learner\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                src/user/interfaces/user.interface.ts\n            \n            interface\n            User\n            \n                0 %\n                (0/7)\n            \n        \n        \n            \n                \n                src/user/schemas/files.schema.ts\n            \n            class\n            Material\n            \n                0 %\n                (0/5)\n            \n        \n        \n            \n                \n                src/user/schemas/files.schema.ts\n            \n            variable\n            MaterialSchema\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/user/schemas/student.schema.ts\n            \n            class\n            Student\n            \n                0 %\n                (0/9)\n            \n        \n        \n            \n                \n                src/user/schemas/student.schema.ts\n            \n            variable\n            StudentSchema\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/user/schemas/tutor.schema.ts\n            \n            class\n            Tutor\n            \n                0 %\n                (0/8)\n            \n        \n        \n            \n                \n                src/user/schemas/tutor.schema.ts\n            \n            variable\n            TutorSchema\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/user/schemas/validation/create-user.schema.ts\n            \n            variable\n            createUserSchema\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/user/user.controller.ts\n            \n            controller\n            UserController\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/user/user.controller.ts\n            \n            function\n            formatUserResponseData\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/user/user.module.ts\n            \n            variable\n            models\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/user/user.service.ts\n            \n            injectable\n            UserService\n            \n                0 %\n                (0/6)\n            \n        \n    \n\n\n\n\n\n    new Tablesort(document.getElementById('coverage-table'));\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"dependencies.html":{"url":"dependencies.html","title":"package-dependencies - dependencies","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n        Dependencies\n    \n    \n        \n            @nestjs/common : ^7.6.15\n        \n            @nestjs/config : ^0.6.3\n        \n            @nestjs/core : ^7.6.15\n        \n            @nestjs/jwt : ^7.2.0\n        \n            @nestjs/mongoose : ^7.2.4\n        \n            @nestjs/passport : ^7.1.5\n        \n            @nestjs/platform-express : ^7.6.15\n        \n            @nestjs/serve-static : ^2.1.4\n        \n            @nestjs/swagger : ^4.8.0\n        \n            bcrypt : ^5.0.1\n        \n            hbs : ^4.1.2\n        \n            joi : ^17.4.0\n        \n            lodash : ^4.17.21\n        \n            mongoose : ^5.12.7\n        \n            mongoose-autopopulate : ^0.14.0\n        \n            mongoose-beautiful-unique-validation : ^7.1.1\n        \n            passport : ^0.4.1\n        \n            passport-jwt : ^4.0.0\n        \n            passport-local : ^1.0.0\n        \n            reflect-metadata : ^0.1.13\n        \n            rimraf : ^3.0.2\n        \n            rxjs : ^6.6.6\n        \n            swagger-ui-express : ^4.1.6\n    \n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/functions.html":{"url":"miscellaneous/functions.html","title":"miscellaneous-functions - functions","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n  Miscellaneous\n  Functions\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            bootstrap   (src/.../main.ts)\n                        \n                        \n                            formatUserResponseData   (src/.../user.controller.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    src/main.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        \n                            bootstrap\n                        \n                        \n                    \n                \n            \n            \n                \nbootstrap()\n                \n            \n\n\n\n\n        \n    \n    src/user/user.controller.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        \n                            formatUserResponseData\n                        \n                        \n                    \n                \n            \n            \n                \nformatUserResponseData(data: any)\n                \n            \n\n\n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    data\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Omit\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"index.html":{"url":"index.html","title":"getting-started - index","body":"\n                   \n\n\n  \n\n\n  A progressive Node.js framework for building efficient and scalable server-side applications.\n    \n\n\n\n\n\n\n\n\n  \n    \n  \n\n  \n\nDescription\nNest framework TypeScript starter repository.\nInstallation\n$ npm installRunning the app\n# development\n$ npm run start\n\n# watch mode\n$ npm run start:dev\n\n# production mode\n$ npm run start:prodTest\n# unit tests\n$ npm run test\n\n# e2e tests\n$ npm run test:e2e\n\n# test coverage\n$ npm run test:covSupport\nNest is an MIT-licensed open source project. It can grow thanks to the sponsors and support by the amazing backers. If you'd like to join them, please read more here.\nStay in touch\n\nAuthor - Kamil Myśliwiec\nWebsite - https://nestjs.com\nTwitter - @nestframework\n\nLicense\nNest is MIT licensed.\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules.html":{"url":"modules.html","title":"modules - modules","body":"\n                   \n\n\n\n\n    Modules\n\n\n    \n            \n                \n                    \n                        AppModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        AuthModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        FeedModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        UserModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n    \n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"overview.html":{"url":"overview.html","title":"overview - overview","body":"\n                   \n\n\n\n    Overview\n\n  \n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_AppModule\n\n\n\ncluster_AppModule_imports\n\n\n\ncluster_AppModule_providers\n\n\n\ncluster_AuthModule\n\n\n\ncluster_AuthModule_exports\n\n\n\ncluster_AuthModule_providers\n\n\n\ncluster_FeedModule\n\n\n\ncluster_FeedModule_providers\n\n\n\ncluster_UserModule\n\n\n\ncluster_UserModule_exports\n\n\n\ncluster_UserModule_providers\n\n\n\n\nAuthModule\n\nAuthModule\n\n\n\nAppModule\n\nAppModule\n\nAppModule -->\n\nAuthModule->AppModule\n\n\n\n\n\nAuthService \n\nAuthService \n\nAuthService  -->\n\nAuthModule->AuthService \n\n\n\n\n\nFeedModule\n\nFeedModule\n\nAppModule -->\n\nFeedModule->AppModule\n\n\n\n\n\nUserModule\n\nUserModule\n\nAuthModule -->\n\nUserModule->AuthModule\n\n\n\nAppModule -->\n\nUserModule->AppModule\n\n\n\n\n\nUserService \n\nUserService \n\nUserService  -->\n\nUserModule->UserService \n\n\n\n\n\nAppService\n\nAppService\n\nAppModule -->\n\nAppService->AppModule\n\n\n\n\n\nAuthService\n\nAuthService\n\nAuthModule -->\n\nAuthService->AuthModule\n\n\n\n\n\nJwtStrategy\n\nJwtStrategy\n\nAuthModule -->\n\nJwtStrategy->AuthModule\n\n\n\n\n\nLocalStrategy\n\nLocalStrategy\n\nAuthModule -->\n\nLocalStrategy->AuthModule\n\n\n\n\n\nFeedService\n\nFeedService\n\nFeedModule -->\n\nFeedService->FeedModule\n\n\n\n\n\nPaginateModel\n\nPaginateModel\n\nFeedModule -->\n\nPaginateModel->FeedModule\n\n\n\n\n\nUserService\n\nUserService\n\nUserModule -->\n\nUserService->UserModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n  \n\n    \n        \n            \n                \n                    \n                    \n                        4 Modules\n                    \n                \n            \n        \n        \n            \n                \n                    \n                    3 Controllers\n                \n            \n        \n        \n            \n                \n                    \n                    12 Injectables\n                \n            \n        \n        \n            \n                \n                    \n                    5 Classes\n                \n            \n        \n        \n            \n                \n                    \n                    15 Interfaces\n                \n            \n        \n    \n\n\n \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/typealiases.html":{"url":"miscellaneous/typealiases.html","title":"miscellaneous-typealiases - typealiases","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n  Miscellaneous\n  Type aliases\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            FeedDocument   (src/.../feed.schema.ts)\n                        \n                        \n                            MaterialDocument   (src/.../files.schema.ts)\n                        \n                        \n                            StudentDocument   (src/.../student.schema.ts)\n                        \n                        \n                            TutorDocument   (src/.../tutor.schema.ts)\n                        \n                        \n                            User   (src/.../user.service.ts)\n                        \n                        \n                            UserDetails   (src/.../create-user.dto.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    src/feed/schemas/feed.schema.ts\n    \n    \n        \n            \n                \n                    \n                    FeedDocument\n                \n            \n            \n                \n                        \n\n                \n            \n        \n    \n    src/user/schemas/files.schema.ts\n    \n    \n        \n            \n                \n                    \n                    MaterialDocument\n                \n            \n            \n                \n                        \n\n                \n            \n        \n    \n    src/user/schemas/student.schema.ts\n    \n    \n        \n            \n                \n                    \n                    StudentDocument\n                \n            \n            \n                \n                        \n\n                \n            \n        \n    \n    src/user/schemas/tutor.schema.ts\n    \n    \n        \n            \n                \n                    \n                    TutorDocument\n                \n            \n            \n                \n                        \n\n                \n            \n        \n    \n    src/user/user.service.ts\n    \n    \n        \n            \n                \n                    \n                    User\n                \n            \n            \n                \n                        literal type\n\n                \n            \n        \n    \n    src/user/dto/create-user.dto.ts\n    \n    \n        \n            \n                \n                    \n                    UserDetails\n                \n            \n            \n                \n                        \n\n                \n            \n        \n    \n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/variables.html":{"url":"miscellaneous/variables.html","title":"miscellaneous-variables - variables","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n  Miscellaneous\n  Variables\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            CONFIG_MODULE_OPTIONS   (src/.../constants.ts)\n                        \n                        \n                            createUserSchema   (src/.../create-user.schema.ts)\n                        \n                        \n                            FeedSchema   (src/.../feed.schema.ts)\n                        \n                        \n                            filename   (src/.../configuration.ts)\n                        \n                        \n                            hashPassword   (src/.../hashing.ts)\n                        \n                        \n                            MaterialSchema   (src/.../files.schema.ts)\n                        \n                        \n                            models   (src/.../feed.module.ts)\n                        \n                        \n                            models   (src/.../user.module.ts)\n                        \n                        \n                            modules   (src/.../modules.ts)\n                        \n                        \n                            mongooseModelFactories   (src/.../mongooseModelFactories.ts)\n                        \n                        \n                            StudentSchema   (src/.../student.schema.ts)\n                        \n                        \n                            TutorSchema   (src/.../tutor.schema.ts)\n                        \n                        \n                            User   (src/.../user.decorator.ts)\n                        \n                        \n                            validatePassword   (src/.../hashing.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    src/config/constants.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            CONFIG_MODULE_OPTIONS\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     ConfigModuleOptions\n\n                        \n                    \n                    \n                        \n                            Default value : {\n  isGlobal: true,\n  load: [configuration],\n}\n                        \n                    \n\n\n            \n        \n\n    src/user/schemas/validation/create-user.schema.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            createUserSchema\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : Joi.object().keys({\n  email: Joi.string().email().required(),\n  firstname: Joi.string().required(),\n  lastname: Joi.string().required(),\n  level: Joi.string().required(),\n  password: Joi.string().min(6).required(),\n  learningStyle: Joi.string(),\n  isStudent: Joi.boolean().required(),\n  studentNumber: Joi.string().required(),\n})\n                        \n                    \n\n\n            \n        \n\n    src/feed/schemas/feed.schema.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            FeedSchema\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : SchemaFactory.createForClass(Feed)\n                        \n                    \n\n\n            \n        \n\n    src/config/configuration.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            filename\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : (str: string) => _.split(str, '.')[0]\n                        \n                    \n\n\n            \n        \n\n    src/shared/hashing.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            hashPassword\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : async (password: string): Promise => {\n  const saltRounds = 10;\n  const salt = await bcrypt.genSalt(saltRounds);\n  const hash = await bcrypt.hash(password, salt);\n  return hash;\n}\n                        \n                    \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            validatePassword\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : async (\n  password: string,\n  hashed: string,\n): Promise => {\n  const match = await bcrypt.compare(password, hashed);\n  return match;\n}\n                        \n                    \n\n\n            \n        \n\n    src/user/schemas/files.schema.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            MaterialSchema\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : SchemaFactory.createForClass(Material)\n                        \n                    \n\n\n            \n        \n\n    src/feed/feed.module.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            models\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     ModelDefinition[]\n\n                        \n                    \n                    \n                        \n                            Default value : [\n  {\n    name: Feed.name,\n    schema: FeedSchema,\n  },\n]\n                        \n                    \n\n\n            \n        \n\n    src/user/user.module.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            models\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     ModelDefinition[]\n\n                        \n                    \n                    \n                        \n                            Default value : [\n  {\n    name: Material.name,\n    schema: MaterialSchema,\n  },\n  {\n    name: Student.name,\n    schema: StudentSchema,\n  },\n]\n                        \n                    \n\n\n            \n        \n\n    src/config/modules.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            modules\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     any[]\n\n                        \n                    \n                    \n                        \n                            Default value : [\n  ConfigModule.forRoot(CONFIG_MODULE_OPTIONS),\n  MongooseModule.forRootAsync({\n    imports: [ConfigModule],\n    useClass: MongooseConfigService,\n  }),\n  MongooseModule.forFeatureAsync(mongooseModelFactories),\n  MulterModule.registerAsync({\n    imports: [ConfigModule],\n    useClass: MulterConfigService,\n  }),\n  FeedModule,\n  AuthModule,\n  UserModule,\n  HttpModule,\n]\n                        \n                    \n\n\n            \n        \n\n    src/config/mongooseModelFactories.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            mongooseModelFactories\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     AsyncModelFactory[]\n\n                        \n                    \n                    \n                        \n                            Default value : [\n  {\n    name: Student.name,\n    useFactory: () => {\n      const schema = StudentSchema;\n      schema.plugin(require('mongoose-beautiful-unique-validation'));\n      return schema;\n    },\n  },\n]\n                        \n                    \n\n\n            \n        \n\n    src/user/schemas/student.schema.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            StudentSchema\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : SchemaFactory.createForClass(Student)\n                        \n                    \n\n\n            \n        \n\n    src/user/schemas/tutor.schema.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            TutorSchema\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : SchemaFactory.createForClass(Tutor)\n                        \n                    \n\n\n            \n        \n\n    src/decotators/user.decorator.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            User\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : createParamDecorator(\n  (data: unknown, ctx: ExecutionContext) => {\n    const request = ctx.switchToHttp().getRequest();\n    return request.user;\n  },\n)\n                        \n                    \n\n\n            \n        \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"}}
}
