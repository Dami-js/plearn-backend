var COMPODOC_SEARCH_INDEX = {
    "index": {"version":"2.3.9","fields":["title","body"],"fieldVectors":[["title/controllers/AppController.html",[0,1.974,1,2.495]],["body/controllers/AppController.html",[0,2.805,1,3.544,2,1.955,3,0.193,4,0.168,5,0.144,6,3.276,7,0.27,8,1.663,9,4.714,10,2.043,11,4.714,12,4.396,13,3.165,14,0.021,15,3.828,16,1.521,17,3.828,18,1.78,19,4.396,20,0.475,21,5.136,22,3.828,23,3.828,24,3.828,25,3.828,26,1.176,27,1.005,28,0.857,29,3.254,30,0.455,31,2.913,32,3.828,33,2.913,34,3.276,35,0.576,36,3.165,37,3.828,38,2.642,39,3.828,40,3.276,41,3.165,42,3.276,43,2.779,44,3.276,45,0.193,46,0.297,47,1.379,48,3.165,49,4.961,50,3.828,51,1.521,52,2.913,53,2.913,54,3.828,55,3.828,56,3.828,57,3.828,58,0.923,59,0.014,60,3.828,61,3.828,62,1.239,63,3.828,64,2.245,65,3.828,66,0.014,67,0.01]],["title/modules/AppModule.html",[68,1.733,69,2.495]],["body/modules/AppModule.html",[1,4.312,2,2.902,3,0.225,4,0.196,5,0.168,14,0.02,30,0.463,35,0.672,41,3.789,42,3.825,45,0.225,46,0.346,59,0.012,66,0.015,67,0.012,68,2.995,69,5.069,70,2.995,71,2.44,72,2.831,73,2.831,74,2.44,75,3.958,76,2.831,77,3.825,78,3.825,79,3.825,80,3.856,81,3.856,82,3.591,83,3.6,84,2.831,85,2.831,86,4.468,87,3.6,88,4.468,89,4.468]],["title/injectables/AppService.html",[41,1.974,90,0.418]],["body/injectables/AppService.html",[3,0.222,4,0.194,5,0.166,7,0.311,8,1.823,9,4.978,11,4.978,14,0.02,16,1.629,18,1.73,20,0.77,26,1.353,27,1.157,28,0.987,30,0.438,35,0.663,41,3.075,45,0.283,46,0.342,47,1.587,51,1.478,52,3.353,53,3.353,59,0.012,66,0.015,67,0.012,90,0.652,91,1.676,92,3.353,93,4.406,94,5.917,95,4.406,96,0.28,97,4.406,98,4.406,99,4.724,100,3.041,101,3.771,102,3.771,103,0.251,104,3.041,105,3.041,106,2.264,107,2.251,108,1.504,109,3.771,110,1.426,111,2.112,112,3.771]],["title/modules/AuthModule.html",[68,1.733,80,2.12]],["body/modules/AuthModule.html",[2,2.004,3,0.197,4,0.172,5,0.148,14,0.021,30,0.495,35,0.59,36,3.936,45,0.197,46,0.304,59,0.011,66,0.014,67,0.011,68,2.813,70,1.881,71,2.142,72,2.486,73,2.486,74,2.142,75,3.717,76,3.717,80,4.252,82,3.657,83,3.308,84,2.486,85,2.486,87,3.717,113,3.358,114,3.358,115,3.923,116,3.358,117,4.243,118,4.243,119,3.923,120,5.022,121,2.142,122,5.221,123,2.301,124,5.221,125,2.301,126,3.062,127,3.923,128,3.923,129,3.358,130,3.923,131,3.923,132,3.923,133,3.358]],["title/injectables/AuthService.html",[36,1.974,90,0.418]],["body/injectables/AuthService.html",[3,0.183,4,0.16,5,0.137,7,0.257,8,1.608,10,2.013,12,4.25,14,0.021,16,1.483,18,1.525,20,0.813,26,1.735,27,1.483,28,1.266,30,0.428,35,0.548,36,2.712,43,3.142,44,3.117,45,0.183,46,0.282,47,1.788,48,2.712,51,1.593,58,1.09,59,0.01,62,1.608,66,0.014,67,0.01,90,0.575,91,1.385,96,0.316,107,1.86,123,2.136,134,3.117,135,4.966,136,3.642,137,6.707,138,3.642,139,4.966,140,3.642,141,2.056,142,4.966,143,5.65,144,3.642,145,2.514,146,2.772,147,2.772,148,3.642,149,4.966,150,3.642,151,3.642,152,3.427,153,1.989,154,4.966,155,1.385,156,2.772,157,2.113,158,4.25,159,1.746,160,2.772,161,1.179,162,3.642,163,2.113,164,3.117,165,3.642,166,3.642]],["title/interfaces/Author.html",[103,0.206,167,1.538]],["body/interfaces/Author.html",[3,0.232,4,0.203,5,0.174,7,0.325,14,0.02,20,0.905,28,1.299,30,0.325,45,0.319,59,0.013,66,0.016,67,0.013,96,0.369,103,0.361,108,2.271,110,1.493,141,2.153,153,2.519,155,1.754,157,1.963,159,2.211,161,1.493,167,2.467,168,1.276,169,3.183,170,2.698,171,1.444,172,3.901,173,2.396,174,1.854,175,2.922,176,2.081,177,2.081,178,1.854,179,2.211,180,1.963]],["title/interfaces/CollationDocument.html",[103,0.206,181,1.846]],["body/interfaces/CollationDocument.html",[3,0.146,4,0.127,5,0.109,7,0.204,10,0.89,14,0.021,20,0.869,30,0.298,35,0.436,45,0.306,46,0.225,58,1.093,59,0.008,62,0.938,66,0.012,67,0.012,90,0.489,96,0.41,103,0.332,106,2.718,110,2.213,163,2.333,168,0.802,171,1.053,173,1.044,181,2.548,182,1.583,183,3.215,184,3.215,185,3.215,186,3.215,187,3.215,188,3.215,189,3.215,190,3.215,191,2.925,192,2.005,193,2.905,194,0.845,195,2.159,196,1.389,197,2.925,198,1.583,199,2.548,200,2.308,201,2.478,202,2.917,203,3.569,204,2.478,205,2.478,206,2.478,207,2.159,208,2.478,209,2.478,210,2.478,211,2.478,212,1.7,213,1.7,214,2.478,215,2.159,216,2.391,217,2.333,218,1.165,219,1.7,220,1.7,221,1.102,222,1.7,223,2.251,224,1.308,225,0.989,226,2.478,227,2.925,228,1.7,229,1.7,230,1.798]],["title/interfaces/Course.html",[103,0.206,174,1.453]],["body/interfaces/Course.html",[3,0.198,4,0.173,5,0.148,7,0.278,14,0.02,20,0.939,30,0.278,45,0.264,59,0.011,66,0.014,67,0.011,96,0.456,103,0.298,108,2.227,161,2.112,167,2.503,168,1.091,171,1.305,174,2.696,180,2.667,231,3.375,232,3.676,233,4.326,234,4.77,235,4.326,236,2.828,237,4.326,238,3.423,239,4.06,240,2.312,241,2.014,242,3.943]],["title/interfaces/CreateFeedDTO.html",[103,0.206,243,2.12]],["body/interfaces/CreateFeedDTO.html",[3,0.207,4,0.181,5,0.155,7,0.29,14,0.02,20,0.939,45,0.207,59,0.011,66,0.015,67,0.011,96,0.459,103,0.234,108,2.176,161,2.064,168,1.139,171,1.343,174,2.563,180,2.713,232,3.739,233,4.4,234,4.852,235,4.4,236,2.877,237,4.4,238,3.482,239,4.147,243,3.161,244,3.525,245,3.525]],["title/interfaces/CreateStudentDto.html",[103,0.206,246,2.29]],["body/interfaces/CreateStudentDto.html",[3,0.249,4,0.217,5,0.186,14,0.02,20,0.845,30,0.349,45,0.343,59,0.013,66,0.016,67,0.013,96,0.315,103,0.372,141,1.96,155,1.881,167,2.784,168,1.368,170,2.901,176,2.231,177,2.231,178,1.988,179,3.268,240,2.9,246,3.835,247,3.133,248,3.133,249,3.133,250,3.133,251,2.701]],["title/interfaces/CreateTutorDto.html",[103,0.206,250,2.29]],["body/interfaces/CreateTutorDto.html",[3,0.249,4,0.217,5,0.186,14,0.02,20,0.845,30,0.349,45,0.343,59,0.013,66,0.016,67,0.013,96,0.315,103,0.372,141,1.96,155,1.881,167,2.901,168,1.368,170,2.901,176,2.231,177,2.231,178,1.988,179,3.136,240,2.9,246,3.133,247,3.133,248,3.133,249,3.133,250,3.835,251,2.701]],["title/interfaces/CreateUserDto.html",[103,0.206,249,2.29]],["body/interfaces/CreateUserDto.html",[3,0.227,4,0.198,5,0.17,7,0.318,14,0.02,20,0.912,30,0.318,45,0.332,59,0.012,66,0.016,67,0.012,96,0.433,103,0.357,141,2.031,155,2.508,167,2.669,168,1.247,170,2.807,171,1.423,176,2.976,177,2.976,178,2.652,179,3.007,240,2.643,246,2.855,247,2.855,248,2.855,249,3.62,250,2.855,251,2.461]],["title/classes/Feed.html",[46,0.28,241,1.846]],["body/classes/Feed.html",[3,0.17,4,0.148,5,0.127,7,0.237,13,3.805,14,0.021,16,1.829,20,0.908,30,0.382,45,0.273,46,0.261,58,0.605,59,0.009,66,0.013,67,0.009,96,0.451,108,1.851,161,1.756,171,1.172,174,2.572,175,2.135,180,2.308,192,1.892,194,0.982,232,3.18,233,3.743,234,4.127,235,3.743,236,2.447,237,3.743,238,2.962,239,4.052,241,2.77,252,1.976,253,2.325,254,2.256,255,5.08,256,3.369,257,3.369,258,3.369,259,2.564,260,2.76,261,2.564,262,3.369,263,3.369,264,3.369,265,3.369,266,3.369,267,3.369,268,3.369,269,3.369,270,2.404,271,2.325,272,1.214,273,2.325,274,2.884,275,2.325,276,2.884]],["title/controllers/FeedController.html",[0,1.974,277,2.495]],["body/controllers/FeedController.html",[0,1.279,2,1.196,3,0.118,4,0.103,5,0.165,7,0.165,8,1.166,10,2.006,13,2.692,14,0.021,16,1.294,18,1.514,20,0.66,26,1.514,27,1.475,28,1.104,30,0.437,31,2.742,35,0.352,45,0.118,46,0.182,47,0.844,48,1.967,49,2.005,51,1.536,58,1.202,59,0.014,62,1.819,64,1.374,66,0.01,67,0.006,96,0.372,108,1.23,121,1.279,161,1.166,173,1.581,202,2.363,216,2.363,221,1.37,223,1.626,225,0.8,236,1.626,237,2.486,241,1.84,243,2.891,254,1.123,277,2.486,278,2.005,279,2.005,280,5.852,281,3.084,282,3.758,283,3.341,284,3.084,285,2.342,286,3.123,287,3.603,288,2.342,289,4.554,290,2.342,291,2.342,292,4.219,293,2.342,294,4.929,295,2.342,296,2.342,297,2.342,298,3.12,299,2.342,300,3.603,301,2.342,302,2.742,303,1.782,304,2.342,305,3.603,306,3.603,307,2.005,308,2.781,309,3.603,310,1.484,311,1.484,312,1.782,313,2.342,314,1.484,315,2.005,316,1.374,317,1.782,318,2.397,319,2.005,320,2.486,321,2.342,322,2.342,323,1.782,324,2.005,325,2.342,326,2.342,327,3.084,328,2.342,329,4.39,330,3.603,331,2.342,332,2.342,333,2.342,334,4.39,335,2.342,336,2.342,337,2.342,338,2.342,339,2.342,340,2.342,341,2.005,342,2.342,343,3.603,344,1.484,345,2.342,346,2.113,347,1.374,348,3.603,349,2.342,350,2.105,351,1.981,352,2.005,353,1.616,354,2.342,355,2.342,356,3.603,357,2.342,358,2.342,359,2.342,360,2.113,361,1.84,362,2.742,363,2.342,364,2.342,365,2.005]],["title/modules/FeedModule.html",[68,1.733,81,2.12]],["body/modules/FeedModule.html",[2,2.836,3,0.217,4,0.189,5,0.162,14,0.021,27,1.131,30,0.484,35,0.648,45,0.217,46,0.334,58,0.774,59,0.012,66,0.015,67,0.012,68,2.945,70,2.066,71,2.353,72,2.73,73,2.73,74,2.353,75,3.891,76,3.518,81,4.154,83,3.518,84,2.73,85,2.73,87,2.73,218,2.763,241,2.201,270,2.201,272,1.552,275,3.832,277,4.239,318,3.753,319,3.689,366,3.689,367,3.689,368,3.28,369,4.225,370,3.689,371,3.28,372,4.31,373,3.28,374,2.974,375,3.689,376,3.689]],["title/injectables/FeedService.html",[90,0.418,318,1.974]],["body/injectables/FeedService.html",[3,0.111,4,0.097,5,0.083,7,0.156,8,1.116,10,2.101,14,0.021,16,1.557,18,1.687,20,0.735,26,1.761,27,1.505,28,1.284,30,0.387,35,0.333,45,0.111,46,0.172,47,1.242,48,1.883,51,1.441,58,0.987,59,0.006,62,1.856,66,0.009,67,0.006,90,0.399,91,0.842,96,0.377,103,0.126,106,0.89,107,1.131,108,1.957,161,1.372,163,0.942,171,0.859,174,0.89,180,0.942,192,0.89,193,2.587,194,0.645,202,2.293,216,2.031,217,1.803,218,2.449,232,1.298,238,1.209,241,1.762,243,2.805,272,0.797,273,1.528,283,1.685,298,2.023,303,1.685,316,1.298,317,1.685,318,1.883,346,3.22,350,2.485,351,2.587,360,3.22,361,2.805,371,1.685,373,1.685,377,1.685,378,3.224,379,3.449,380,2.952,381,2.952,382,3.449,383,3.449,384,3.449,385,2.214,386,3.449,387,2.952,388,2.952,389,2.214,390,2.952,391,2.214,392,2.952,393,4.299,394,2.214,395,4.237,396,2.952,397,2.214,398,2.952,399,2.214,400,2.952,401,2.214,402,1.528,403,1.895,404,1.895,405,1.895,406,3.626,407,4.094,408,3.626,409,3.301,410,4.908,411,1.895,412,4.7,413,1.895,414,2.952,415,3.626,416,3.626,417,1.895,418,2.952,419,1.895,420,1.895,421,2.952,422,1.895,423,3.626,424,1.895,425,1.895,426,1.895]],["title/interfaces/FetchArg.html",[103,0.206,393,2.495]],["body/interfaces/FetchArg.html",[3,0.131,4,0.114,5,0.098,7,0.183,10,1.797,14,0.021,20,0.774,28,1.311,30,0.412,35,0.391,45,0.131,46,0.202,47,0.937,48,2.131,51,1.536,58,1.051,59,0.007,62,1.964,66,0.011,67,0.007,90,0.451,96,0.298,103,0.148,106,1.882,108,1.997,161,1.894,163,1.107,168,0.72,171,0.972,174,1.046,180,1.107,192,1.046,193,2.515,194,0.758,202,2.909,216,2.805,217,1.992,218,2.091,232,1.526,238,1.421,241,1.993,243,2.288,272,0.937,273,1.795,283,1.98,298,1.526,303,1.98,316,1.526,317,1.98,318,1.421,346,3.432,350,2.672,351,2.738,360,3.432,361,2.989,371,1.98,373,1.98,377,1.98,378,1.98,387,2.227,388,2.227,390,2.227,392,2.227,393,3.846,396,2.227,398,2.227,400,2.227,402,1.795,403,2.227,404,2.227,405,2.227,406,4.007,407,4.452,408,4.007,409,3.59,410,5.194,411,2.227,412,5.008,413,2.227,414,3.34,415,4.007,416,4.007,417,2.227,418,3.34,419,2.227,420,2.227,421,3.34,422,2.227,423,4.007,424,2.227,425,2.227,426,2.227]],["title/interfaces/IFeedController.html",[103,0.206,320,2.495]],["body/interfaces/IFeedController.html",[3,0.242,4,0.211,5,0.181,7,0.339,14,0.02,20,0.837,45,0.242,59,0.013,66,0.016,67,0.013,96,0.411,103,0.274,107,2.457,108,1.642,161,1.557,168,1.33,171,1.482,221,2.457,281,5.778,282,5.778,284,5.778,289,4.117,292,4.117,320,4.107,327,4.117,427,3.66,428,4.117,429,4.878]],["title/interfaces/IFeedService.html",[103,0.206,430,2.751]],["body/interfaces/IFeedService.html",[3,0.251,4,0.219,5,0.187,7,0.351,14,0.02,45,0.251,59,0.014,66,0.017,67,0.014,96,0.417,103,0.283,168,1.377,171,1.514,221,2.495,380,5.847,381,5.847,427,3.787,429,4.919,430,4.625,431,4.26,432,6.832]],["title/classes/JoiValidationPipe.html",[46,0.28,314,2.29]],["body/classes/JoiValidationPipe.html",[3,0.221,4,0.192,5,0.165,7,0.309,8,1.817,14,0.02,16,1.473,18,1.346,26,1.723,27,1.473,28,1.257,30,0.396,35,0.659,45,0.221,46,0.34,47,1.578,51,1.15,58,0.787,59,0.012,66,0.015,67,0.012,96,0.357,111,2.101,252,2.57,254,2.69,270,2.866,302,3.334,314,3.555,350,2.101,351,1.977,361,2.866,362,3.334,433,3.75,434,6.19,435,5.611,436,4.381,437,6.527,438,4.381,439,5.611,440,5.299,441,6.527,442,4.381,443,4.803,444,3.75,445,4.381,446,4.381,447,4.381,448,4.381,449,3.75,450,4.381,451,4.381,452,4.381,453,4.381]],["title/injectables/JwtAuthGuard.html",[90,0.418,454,2.495]],["body/injectables/JwtAuthGuard.html",[3,0.336,4,0.187,5,0.16,7,0.3,8,1.782,14,0.021,16,1.445,18,1.69,19,3.639,26,1.69,27,1.445,28,1.233,30,0.388,35,0.64,45,0.214,46,0.33,51,1.445,59,0.012,66,0.015,67,0.012,90,0.637,91,1.617,96,0.27,125,2.493,141,2.164,170,1.809,350,2.038,351,1.918,361,2.172,454,3.798,455,5.223,456,3.235,457,4.711,458,5.503,459,4.711,460,4.912,461,4.251,462,3.639,463,5.503,464,4.251,465,5.223,466,4.251,467,4.188,468,3.639,469,4.251,470,4.251,471,4.251,472,4.251,473,4.251,474,4.251,475,4.251,476,4.251]],["title/injectables/JwtConfigService.html",[90,0.418,126,2.12]],["body/injectables/JwtConfigService.html",[3,0.154,4,0.134,5,0.211,7,0.215,8,1.42,14,0.021,16,1.151,18,0.937,20,0.378,26,0.937,27,1.151,28,0.683,29,1.932,30,0.46,35,0.459,45,0.299,46,0.48,47,1.098,51,1.474,58,0.788,59,0.008,66,0.012,67,0.008,90,0.65,91,1.16,96,0.194,111,2.462,121,1.665,123,1.788,126,3.011,194,0.889,196,1.462,217,1.298,224,1.376,225,1.497,230,1.298,254,2.462,260,1.788,272,1.098,308,4.276,310,1.932,311,1.932,344,1.932,347,1.788,353,2.105,477,1.932,478,2.321,479,4.273,480,2.105,481,3.05,482,3.05,483,3.907,484,3.337,485,3.337,486,3.337,487,3.337,488,3.026,489,3.337,490,2.321,491,2.321,492,2.105,493,3.337,494,2.321,495,2.321,496,2.321,497,2.321,498,2.321,499,2.321,500,3.337,501,2.105,502,2.321,503,2.321,504,2.321,505,2.105,506,2.321,507,2.105,508,2.321,509,2.778,510,2.105,511,2.105,512,2.572,513,3.544,514,4.105,515,3.907,516,2.321,517,2.321,518,2.321,519,2.321,520,2.321,521,2.321,522,2.105,523,2.321,524,2.321,525,2.572,526,2.321,527,2.321,528,2.105,529,2.321,530,2.105,531,2.105,532,2.105,533,2.105,534,2.778,535,2.321,536,2.321,537,2.321,538,2.321,539,2.321,540,2.321]],["title/injectables/JwtStrategy.html",[90,0.418,117,2.29]],["body/injectables/JwtStrategy.html",[3,0.221,4,0.192,5,0.165,7,0.309,8,1.817,10,1.901,14,0.021,16,1.473,18,1.346,26,1.723,27,1.473,28,1.257,30,0.46,35,0.659,45,0.221,46,0.34,47,1.578,51,1.15,59,0.012,66,0.015,67,0.012,90,0.649,91,1.666,96,0.357,107,2.238,111,2.101,117,3.555,121,2.393,125,2.57,157,1.865,164,3.75,170,1.865,308,4.373,480,3.024,507,3.024,522,3.024,534,2.776,541,3.75,542,4.803,543,4.381,544,5.611,545,4.381,546,3.75,547,4.381,548,3.75,549,3.334,550,3.75,551,3.75,552,4.381,553,4.381,554,4.381,555,4.381,556,4.381,557,4.381]],["title/interfaces/Learner.html",[103,0.206,179,1.733]],["body/interfaces/Learner.html",[3,0.228,4,0.199,5,0.17,7,0.319,14,0.02,20,0.912,28,1.282,30,0.319,45,0.316,59,0.012,66,0.016,67,0.012,96,0.4,103,0.357,108,1.543,110,1.463,141,2.137,153,2.468,155,1.719,157,1.923,159,3.165,161,2.137,167,1.923,168,1.25,169,3.119,170,2.673,171,1.426,172,2.651,173,2.378,174,1.817,175,2.864,176,2.039,177,2.039,178,1.817,179,2.744,180,2.81]],["title/injectables/LocalAuthGuard.html",[38,2.495,90,0.418]],["body/injectables/LocalAuthGuard.html",[3,0.271,4,0.237,5,0.203,14,0.02,30,0.449,35,0.81,38,4.397,45,0.271,46,0.418,59,0.015,66,0.017,67,0.015,90,0.737,91,2.048,125,3.158,170,2.292,456,4.098,468,4.609,558,4.609,559,5.385]],["title/injectables/LocalStrategy.html",[90,0.418,118,2.29]],["body/injectables/LocalStrategy.html",[3,0.214,4,0.187,5,0.16,7,0.3,8,1.782,10,1.874,14,0.021,16,1.445,18,1.306,20,0.849,26,1.69,27,1.445,28,1.233,30,0.455,35,0.64,36,3.74,45,0.214,46,0.33,47,1.531,51,1.116,58,0.764,59,0.012,62,1.376,66,0.015,67,0.012,90,0.637,91,1.617,96,0.35,111,2.038,118,3.487,125,2.493,129,3.639,141,1.976,145,3.798,170,1.809,178,2.687,350,2.038,351,1.918,467,3.235,542,4.711,546,3.639,548,3.639,549,3.235,550,3.639,551,3.639,560,3.639,561,4.251,562,4.251,563,5.503,564,4.251,565,3.639,566,4.251,567,4.251]],["title/classes/Material.html",[46,0.28,236,1.631]],["body/classes/Material.html",[3,0.209,4,0.183,5,0.157,7,0.293,13,3.496,14,0.02,16,1.68,20,0.794,30,0.383,45,0.322,46,0.323,58,0.748,59,0.011,64,3.542,66,0.015,67,0.011,96,0.441,103,0.237,170,1.771,171,1.352,192,2.182,194,1.213,236,2.888,239,4.418,252,2.441,255,4.786,259,4.131,260,3.183,261,3.167,270,2.772,271,2.872,272,1.499,274,3.562,509,3.827,568,2.872,569,6.04,570,6.04,571,4.162,572,6.401,573,4.162,574,4.162,575,4.162,576,2.872,577,4.162,578,2.872,579,3.562]],["title/injectables/MongooseConfigService.html",[90,0.418,512,2.12]],["body/injectables/MongooseConfigService.html",[3,0.154,4,0.134,5,0.211,7,0.215,8,1.42,14,0.021,16,1.151,18,0.937,20,0.378,26,0.937,27,1.151,28,0.683,29,1.932,30,0.46,35,0.459,45,0.299,46,0.48,47,1.098,51,1.474,58,0.788,59,0.008,66,0.012,67,0.008,90,0.65,91,1.16,96,0.194,111,2.462,121,1.665,123,1.788,126,2.572,194,0.889,196,1.462,217,1.298,224,1.376,225,1.497,230,1.298,254,2.462,260,1.788,272,1.098,308,4.276,310,1.932,311,1.932,344,1.932,347,1.788,353,2.105,477,1.932,478,2.321,479,2.321,480,2.105,483,3.337,484,3.907,485,3.337,486,3.337,487,3.337,488,3.026,489,3.337,490,2.321,491,2.321,492,2.105,493,3.337,494,2.321,495,2.321,496,2.321,497,2.321,498,2.321,499,2.321,500,3.337,501,2.105,502,2.321,503,2.321,504,2.321,505,2.105,506,2.321,507,2.105,508,2.321,509,2.778,510,2.105,511,2.105,512,3.011,513,3.544,514,4.105,515,3.907,516,2.321,517,2.321,518,4.273,519,2.321,520,2.321,521,2.321,522,2.105,523,2.321,524,2.321,525,2.572,526,2.321,527,2.321,528,2.105,529,2.321,530,2.105,531,2.105,532,2.105,533,2.105,534,2.778,535,2.321,536,2.321,537,2.321,538,2.321,539,2.321,540,2.321,580,3.05,581,3.05]],["title/injectables/MulterConfigService.html",[90,0.418,525,2.12]],["body/injectables/MulterConfigService.html",[3,0.154,4,0.134,5,0.211,7,0.215,8,1.42,14,0.021,16,1.151,18,0.937,20,0.378,26,0.937,27,1.151,28,0.683,29,1.932,30,0.46,35,0.459,45,0.299,46,0.48,47,1.098,51,1.474,58,0.788,59,0.008,66,0.012,67,0.008,90,0.65,91,1.16,96,0.194,111,2.462,121,1.665,123,1.788,126,2.572,194,0.889,196,1.462,217,1.298,224,1.376,225,1.497,230,1.298,254,2.462,260,1.788,272,1.098,308,4.276,310,1.932,311,1.932,344,1.932,347,1.788,353,2.105,477,1.932,478,2.321,479,2.321,480,2.105,483,3.337,484,3.337,485,3.337,486,3.907,487,3.337,488,3.026,489,3.337,490,2.321,491,2.321,492,2.105,493,3.337,494,2.321,495,2.321,496,2.321,497,2.321,498,2.321,499,2.321,500,3.337,501,2.105,502,2.321,503,2.321,504,2.321,505,2.105,506,2.321,507,2.105,508,2.321,509,2.778,510,2.105,511,2.105,512,2.572,513,3.544,514,4.105,515,3.907,516,2.321,517,2.321,518,2.321,519,2.321,520,2.321,521,2.321,522,2.105,523,2.321,524,2.321,525,3.011,526,2.321,527,4.273,528,2.105,529,2.321,530,2.105,531,2.105,532,2.105,533,2.105,534,2.778,535,2.321,536,2.321,537,2.321,538,2.321,539,2.321,540,2.321,582,3.05,583,3.05]],["title/injectables/PaginateModel.html",[90,0.418,218,1.453]],["body/injectables/PaginateModel.html",[3,0.156,4,0.136,5,0.117,7,0.219,8,1.438,10,1.593,14,0.021,16,0.815,18,0.953,20,0.795,26,0.953,27,0.815,28,0.695,30,0.313,35,0.467,45,0.314,46,0.241,58,1.119,59,0.008,62,1.005,66,0.012,67,0.012,90,0.514,91,1.18,96,0.197,103,0.341,106,2.685,110,2.017,163,2.408,173,1.118,181,2.268,182,1.695,183,1.82,184,1.82,185,1.82,186,1.82,187,1.82,188,1.82,189,1.82,190,1.82,191,3.041,192,2.085,193,2.96,194,0.905,195,2.268,196,1.488,197,3.041,198,1.695,199,2.649,200,2.425,201,2.604,202,2.987,203,3.653,204,2.604,205,2.604,206,2.604,207,2.268,208,2.604,209,2.604,210,2.604,211,2.604,212,1.82,213,1.82,214,2.604,215,2.891,216,2.486,217,2.408,218,1.785,219,3.041,220,2.604,221,1.689,222,2.604,223,2.34,224,1.4,225,1.059,226,2.604,227,3.041,228,1.82,229,1.82,230,1.89,378,3.379,584,3.104]],["title/interfaces/PaginateModelArgs.html",[103,0.206,215,1.846]],["body/interfaces/PaginateModelArgs.html",[3,0.154,4,0.134,5,0.115,7,0.215,10,0.937,14,0.021,20,0.791,28,1.258,30,0.309,35,0.459,45,0.312,46,0.236,58,1.113,59,0.008,62,0.987,66,0.012,67,0.012,90,0.507,96,0.378,103,0.338,106,2.673,110,2.005,163,2.389,168,0.844,171,1.092,173,1.098,181,2.24,182,1.665,183,1.788,184,1.788,185,1.788,186,1.788,187,1.788,188,1.788,189,1.788,190,1.788,191,3.011,192,2.064,193,3.143,194,0.889,195,2.24,196,1.462,197,3.011,198,1.665,199,3.038,200,2.395,201,2.572,202,2.969,203,3.632,204,2.572,205,2.572,206,2.572,207,2.24,208,2.572,209,2.572,210,2.572,211,2.572,212,1.788,213,1.788,214,2.572,215,2.623,216,2.969,217,2.715,218,1.226,219,1.788,220,1.788,221,1.16,222,1.788,223,2.317,224,1.376,225,1.041,226,2.572,227,3.011,228,1.788,229,1.788,230,1.866,286,2.778]],["title/interfaces/PaginateOptions.html",[103,0.206,199,1.846]],["body/interfaces/PaginateOptions.html",[3,0.142,4,0.124,5,0.106,7,0.199,10,0.866,14,0.021,20,0.834,28,1.552,30,0.292,35,0.424,45,0.303,46,0.219,58,1.083,59,0.008,62,0.913,66,0.011,67,0.011,90,0.479,96,0.396,103,0.328,106,2.761,110,2.069,163,2.303,168,0.78,171,1.032,173,1.016,181,2.764,182,1.54,183,1.654,184,1.654,185,1.654,186,1.654,187,1.654,188,1.654,189,1.654,190,1.654,191,2.88,192,1.974,193,2.883,194,0.822,195,2.764,196,1.352,197,3.534,198,1.54,199,2.764,200,3.291,201,3.381,202,3.126,203,3.824,204,3.381,205,3.381,206,3.381,207,2.116,208,2.43,209,2.43,210,2.43,211,2.43,212,1.654,213,1.654,214,2.43,215,2.116,216,2.354,217,2.303,218,1.134,219,1.654,220,1.654,221,1.073,222,1.654,223,2.216,224,1.273,225,0.963,226,2.43,227,2.88,228,1.654,229,1.654,230,1.763]],["title/interfaces/PaginationResult.html",[103,0.206,207,1.846]],["body/interfaces/PaginationResult.html",[3,0.142,4,0.124,5,0.106,7,0.199,10,0.866,14,0.021,20,0.772,30,0.292,35,0.424,45,0.303,46,0.219,58,1.083,59,0.008,62,0.913,66,0.011,67,0.011,90,0.479,96,0.415,103,0.328,106,2.893,110,2.146,163,2.719,168,0.78,171,1.032,173,1.769,181,2.116,182,1.54,183,1.654,184,1.654,185,1.654,186,1.654,187,1.654,188,1.654,189,1.654,190,1.654,191,2.88,192,1.974,193,2.883,194,0.822,195,2.116,196,1.352,197,2.88,198,1.54,199,2.508,200,2.262,201,2.43,202,3.126,203,3.824,204,2.43,205,2.43,206,2.43,207,2.508,208,3.381,209,3.381,210,3.381,211,3.381,212,3.174,213,3.174,214,3.381,215,2.116,216,2.354,217,2.303,218,1.134,219,1.654,220,1.654,221,1.073,222,1.654,223,2.216,224,1.273,225,0.963,226,2.43,227,2.88,228,1.654,229,1.654,230,1.763]],["title/interfaces/PopulateOptions.html",[103,0.206,195,1.846]],["body/interfaces/PopulateOptions.html",[3,0.154,4,0.135,5,0.116,7,0.216,10,0.942,14,0.021,20,0.826,30,0.31,35,0.462,45,0.312,46,0.238,58,1.115,59,0.008,62,0.993,66,0.012,67,0.012,90,0.51,96,0.358,103,0.339,106,2.677,110,2.009,163,2.395,168,0.849,171,1.097,173,1.105,181,2.249,182,1.675,183,1.799,184,1.799,185,1.799,186,1.799,187,1.799,188,1.799,189,1.799,190,1.799,191,3.021,192,2.071,193,3.146,194,0.894,195,2.631,196,2.699,197,3.639,198,3.074,199,2.631,200,2.405,201,2.582,202,2.975,203,3.639,204,2.582,205,2.582,206,2.582,207,2.249,208,2.582,209,2.582,210,2.582,211,2.582,212,1.799,213,1.799,214,2.582,215,2.249,216,2.47,217,2.395,218,1.233,219,1.799,220,1.799,221,1.167,222,1.799,223,2.324,224,1.384,225,1.047,226,2.582,227,3.021,228,1.799,229,1.799,230,1.874]],["title/interfaces/QuestionnaireBody.html",[103,0.206,585,2.495]],["body/interfaces/QuestionnaireBody.html",[3,0.099,4,0.086,5,0.074,7,0.221,10,1.601,14,0.021,20,0.646,30,0.401,35,0.295,43,0.94,45,0.197,46,0.152,47,0.706,48,2.137,51,1.436,58,1.267,59,0.005,62,2.054,66,0.009,67,0.005,90,0.363,96,0.311,103,0.112,105,1.353,106,1.573,107,1.999,110,0.635,141,2.183,145,2.701,147,1.492,152,2.162,153,1.711,155,1.859,156,3.402,157,1.666,159,1.876,160,2.385,161,1.014,163,1.333,168,0.542,171,0.78,173,1.41,178,1.573,193,2.017,194,0.571,221,1.489,223,1.414,236,0.885,251,2.137,272,0.706,286,1.985,298,2.295,316,1.15,346,2.295,350,2.343,351,2.565,360,2.295,361,2.284,402,1.353,409,1.353,576,1.353,585,2.701,586,1.353,587,3.72,588,1.353,589,1.492,590,1.492,591,1.071,592,1.353,593,1.492,594,1.15,595,1.353,596,1.492,597,1.678,598,1.678,599,1.678,600,1.678,601,1.678,602,1.678,603,1.678,604,1.678,605,3.35,606,2.682,607,1.678,608,1.678,609,1.678,610,2.682,611,1.678,612,1.678,613,4.462,614,3.35,615,3.827,616,1.678,617,1.678,618,1.678,619,1.678,620,2.682,621,2.682,622,3.827,623,2.682,624,3.35,625,2.682,626,3.827,627,1.678,628,3.827,629,2.682,630,2.682,631,1.678,632,1.678,633,1.678,634,1.678,635,2.682,636,1.678,637,1.678,638,1.678,639,1.678,640,1.678,641,1.678,642,1.678,643,1.678,644,1.678,645,1.678,646,1.678,647,1.678,648,1.678,649,1.678,650,1.678,651,1.678,652,1.678,653,1.678,654,1.678,655,1.678,656,2.682,657,1.678,658,2.682,659,1.678,660,2.682,661,1.678,662,2.682,663,1.678,664,2.682,665,1.678,666,1.678,667,1.678,668,1.678,669,1.678,670,1.678,671,1.678,672,4.462,673,4.462,674,4.462,675,4.462,676,1.678,677,1.678,678,1.678,679,1.678,680,1.678,681,2.682,682,1.678,683,1.678,684,1.678,685,2.682,686,1.678]],["title/guards/RolesGaurd.html",[687,2.751,688,2.495]],["body/guards/RolesGaurd.html",[3,0.236,4,0.206,5,0.177,7,0.331,8,1.898,14,0.021,16,1.232,18,1.442,26,1.442,27,1.232,28,1.052,30,0.413,33,3.573,35,0.706,45,0.236,46,0.364,51,1.232,58,0.844,59,0.013,66,0.016,67,0.013,90,0.678,96,0.299,99,4.864,100,3.24,110,1.898,221,2.229,225,1.603,254,2.251,457,5.897,459,4.019,460,5.094,462,5.017,688,4.046,689,4.695,690,4.019,691,4.695,692,4.695,693,4.695]],["title/classes/Student.html",[46,0.28,591,1.974]],["body/classes/Student.html",[3,0.18,4,0.157,5,0.135,7,0.253,13,3.714,14,0.021,16,1.785,20,0.881,30,0.395,45,0.282,46,0.278,51,0.941,58,0.644,59,0.01,66,0.013,67,0.01,96,0.439,110,1.59,155,2.131,157,2.384,159,2.686,161,1.814,171,1.223,173,1.769,176,2.528,177,2.528,178,2.253,179,2.686,180,2.384,192,1.975,194,1.045,225,2.058,240,2.102,252,2.102,254,2.355,255,4.937,270,2.509,271,2.473,272,1.291,591,3.06,592,2.473,694,2.473,695,4.204,696,3.584,697,3.584,698,3.584,699,3.584,700,3.584,701,3.584,702,3.584,703,3.584,704,3.584,705,3.39,706,3.584,707,3.39,708,3.068,709,3.584,710,3.584,711,3.584,712,3.584]],["title/interfaces/Todo.html",[103,0.206,104,2.495]],["body/interfaces/Todo.html",[3,0.222,4,0.194,5,0.166,7,0.311,9,3.353,11,3.353,14,0.021,20,0.811,30,0.438,35,0.663,41,2.406,45,0.283,46,0.342,51,1.478,52,3.353,53,3.353,59,0.012,66,0.015,67,0.012,90,0.652,92,3.353,94,5.312,96,0.416,99,4.286,100,3.041,101,3.771,102,3.771,103,0.251,104,3.887,105,4.514,106,2.779,107,3.341,108,2.233,109,5.598,110,2.009,111,2.112,112,3.771,168,1.219,171,1.403]],["title/classes/Tutor.html",[46,0.28,594,2.12]],["body/classes/Tutor.html",[3,0.185,4,0.161,5,0.138,7,0.259,13,3.669,14,0.021,16,1.764,20,0.869,30,0.449,45,0.285,46,0.284,58,0.659,59,0.01,66,0.014,67,0.01,96,0.446,108,1.936,110,1.615,155,2.157,157,2.413,167,2.413,171,1.243,172,3.325,173,1.797,174,2.006,175,2.324,176,2.559,177,2.559,178,2.28,192,2.006,194,1.653,225,1.703,240,2.151,252,2.151,254,2.392,255,4.954,259,2.791,261,2.791,270,2.548,271,2.531,272,1.321,594,3.325,595,2.531,695,3.139,705,2.531,713,2.531,714,3.667,715,3.667,716,3.667,717,3.667,718,3.667,719,3.667,720,3.667,721,3.667,722,3.667,723,2.531,724,3.139]],["title/interfaces/User.html",[103,0.206,141,1.17]],["body/interfaces/User.html",[3,0.216,4,0.188,5,0.161,7,0.302,14,0.02,20,0.925,28,1.239,30,0.302,45,0.308,59,0.012,66,0.015,67,0.012,96,0.437,103,0.349,108,1.463,110,1.983,141,2.096,153,3.535,155,2.462,157,2.755,159,2.055,161,1.388,167,1.824,168,1.186,169,2.958,170,2.354,171,1.378,172,2.514,173,1.993,174,1.723,175,2.716,176,2.921,177,2.921,178,2.603,179,2.055,180,1.824]],["title/controllers/UserController.html",[0,1.974,725,2.495]],["body/controllers/UserController.html",[0,1.43,2,1.338,3,0.132,4,0.115,5,0.099,7,0.185,8,1.269,10,2.057,13,2.85,14,0.021,16,1.37,18,1.603,26,1.603,27,1.37,28,1.169,30,0.441,31,1.993,34,2.241,35,0.394,40,2.241,43,2.253,45,0.132,46,0.203,51,1.467,58,1.004,59,0.007,62,1.69,64,3.061,66,0.011,67,0.007,96,0.249,108,0.894,111,1.255,141,2.108,152,1.807,153,1.43,155,0.996,157,1.114,158,2.241,159,1.255,161,0.848,172,1.536,176,1.182,177,1.182,180,1.114,225,1.782,251,3.321,279,2.241,298,3.567,302,1.993,307,2.241,314,2.978,315,2.241,316,1.536,324,2.241,341,3.356,346,3.061,350,2.679,351,2.522,360,3.061,361,2.401,362,3.577,365,4.467,429,1.807,454,1.807,465,2.241,467,1.993,587,1.993,589,1.993,591,1.43,688,1.807,725,2.706,726,1.993,727,2.619,728,3.921,729,3.921,730,3.921,731,3.921,732,2.619,733,2.619,734,3.921,735,2.619,736,2.619,737,2.619,738,2.619,739,2.619,740,2.619,741,2.619,742,2.619,743,2.619,744,2.619,745,2.619,746,1.993,747,1.993,748,2.619,749,2.241,750,2.619,751,2.619,752,2.619,753,2.241,754,3.356,755,2.619,756,2.619,757,2.619,758,2.619,759,2.619,760,2.619,761,2.619,762,2.619,763,2.619,764,2.619,765,2.619,766,3.921,767,2.619,768,2.619,769,2.619,770,2.619,771,2.619,772,2.619,773,2.619,774,2.619,775,3.921,776,2.619,777,3.921,778,2.619,779,2.619,780,2.619,781,2.619,782,2.619,783,2.619,784,2.619,785,2.619,786,2.619,787,2.619,788,2.619,789,2.619,790,2.619]],["title/modules/UserModule.html",[68,1.733,82,1.974]],["body/modules/UserModule.html",[2,2.739,3,0.206,4,0.179,5,0.154,14,0.021,27,1.572,30,0.487,35,0.615,43,3.477,45,0.206,46,0.317,58,0.734,59,0.011,66,0.015,67,0.011,68,2.87,70,1.959,71,2.231,72,2.589,73,2.589,74,2.231,75,3.793,76,3.793,82,3.77,83,3.398,84,2.589,85,2.589,87,2.589,236,1.844,270,3.058,272,1.472,369,4.081,370,3.497,374,2.82,376,3.497,578,3.701,590,3.11,591,2.231,593,3.11,594,2.396,596,3.11,707,3.701,723,3.701,725,4.132,749,3.497,791,3.497,792,3.497,793,3.497,794,3.11,795,4.086,796,3.497,797,3.497,798,3.497]],["title/injectables/UserService.html",[43,1.733,90,0.418]],["body/injectables/UserService.html",[3,0.087,4,0.076,5,0.065,7,0.199,8,0.914,10,2.004,14,0.021,16,1.362,18,1.509,20,0.672,26,1.594,27,1.362,28,1.162,30,0.382,35,0.259,43,1.354,45,0.181,46,0.134,47,1.017,48,1.959,51,1.362,58,1.245,59,0.005,62,1.987,66,0.008,67,0.005,90,0.327,91,0.656,96,0.357,103,0.098,105,1.19,106,1.442,107,1.832,110,0.558,141,2.07,145,2.862,147,1.312,152,1.949,153,1.542,155,1.74,156,3.156,157,1.526,159,1.72,160,2.149,161,0.914,163,1.202,173,0.621,178,1.442,193,2.603,194,0.503,221,1.869,223,1.274,236,0.778,251,2.833,272,0.621,286,1.789,298,3.043,316,1.011,346,2.104,350,2.194,351,2.443,360,2.104,361,2.118,402,1.19,409,1.19,576,1.19,585,2.862,586,1.19,587,2.149,588,1.19,589,1.312,590,1.312,591,0.942,592,1.19,593,1.312,594,1.011,595,1.19,596,1.312,597,1.476,598,2.417,599,1.476,600,3.07,601,1.476,602,3.07,603,2.417,604,1.476,605,3.07,606,2.417,607,1.476,608,1.476,609,1.476,610,2.417,611,1.476,612,1.476,613,4.206,614,3.07,615,4.206,616,3.07,617,1.476,618,1.476,619,2.417,620,2.417,621,2.417,622,3.55,623,2.417,624,3.07,625,2.417,626,3.55,627,1.476,628,3.55,629,2.417,630,2.417,631,2.417,632,1.476,633,1.476,634,2.417,635,2.417,636,1.476,637,2.417,638,1.476,639,1.476,640,1.476,641,1.476,642,1.476,643,1.476,644,1.476,645,1.476,646,1.476,647,1.476,648,1.476,649,1.476,650,1.476,651,1.476,652,1.476,653,1.476,654,1.476,655,1.476,656,2.417,657,1.476,658,2.417,659,1.476,660,2.417,661,1.476,662,2.417,663,1.476,664,2.417,665,1.476,666,1.476,667,1.476,668,1.476,669,1.476,670,1.476,671,1.476,672,4.206,673,4.206,674,4.206,675,4.206,676,1.476,677,1.476,678,1.476,679,1.476,680,1.476,681,2.417,682,1.476,683,1.476,684,1.476,685,2.417,686,1.476,799,2.824,800,2.824,801,2.824,802,2.824,803,1.724,804,1.724,805,1.724,806,1.724,807,1.724,808,1.724,809,1.724,810,1.724,811,1.724]],["title/coverage.html",[812,3.76]],["body/coverage.html",[0,2.452,1,1.676,5,0.091,6,2.079,14,0.021,36,1.326,38,1.676,41,1.326,43,1.164,46,0.419,59,0.007,66,0.01,67,0.007,70,1.164,74,1.326,90,0.762,92,2.819,96,0.155,103,0.398,104,1.676,117,1.539,118,1.539,126,1.424,134,2.079,141,1.199,146,1.848,167,1.034,169,3.099,174,0.976,179,1.164,181,1.241,182,3.113,195,1.241,199,1.241,207,1.241,215,1.241,218,0.976,230,3.202,231,3.171,236,1.096,241,1.892,243,1.424,244,2.079,245,2.079,246,1.539,247,2.845,248,2.845,249,1.539,250,1.539,253,2.557,275,1.676,277,1.676,278,2.079,312,1.848,314,1.539,318,1.326,320,1.676,323,1.848,347,2.172,351,1.096,368,1.848,374,2.557,377,2.819,393,1.676,427,2.819,428,2.079,429,2.557,430,1.848,431,2.079,433,2.079,454,1.676,455,2.079,456,2.819,477,3.183,512,1.424,525,1.424,541,2.079,558,2.079,560,2.079,568,2.557,578,1.676,585,1.676,586,2.557,588,1.676,591,1.326,594,1.424,687,1.848,688,1.676,690,2.079,694,2.557,707,1.676,713,2.557,723,1.676,725,1.676,726,2.819,746,1.848,747,1.848,794,1.848,812,1.848,813,2.429,814,2.429,815,2.429,816,6.111,817,5.928,818,6.262,819,7.116,820,6.947,821,2.079,822,2.079,823,2.079,824,2.079,825,2.079,826,2.079,827,4.49,828,4.49,829,2.079,830,2.079,831,3.704,832,2.079,833,4.49,834,2.429,835,3.171,836,3.171,837,2.429,838,3.171,839,3.171,840,2.079,841,2.429,842,2.429]],["title/dependencies.html",[71,2.375,843,3.015]],["body/dependencies.html",[14,0.021,35,0.678,59,0.012,66,0.016,67,0.012,71,2.461,100,3.11,121,2.461,123,2.643,125,2.643,194,1.828,272,1.623,310,2.855,311,3.62,440,3.858,444,3.858,492,3.11,534,2.855,549,4.774,565,3.858,705,3.11,844,6.273,845,4.507,846,4.507,847,4.507,848,4.507,849,4.507,850,4.507,851,4.507,852,4.507,853,4.507,854,4.507,855,4.507,856,4.507,857,4.507,858,4.507,859,4.507,860,4.507,861,4.507,862,4.507,863,4.507,864,3.858,865,3.858,866,4.507,867,4.507,868,4.507,869,4.507,870,4.507,871,4.507,872,4.507,873,4.507,874,4.507,875,4.507,876,4.507,877,4.507]],["title/miscellaneous/functions.html",[878,1.768,879,3.723]],["body/miscellaneous/functions.html",[7,0.382,14,0.019,18,1.665,26,1.665,27,1.423,28,1.215,59,0.015,64,3.18,66,0.017,67,0.015,74,3.717,96,0.345,726,4.126,753,4.641,754,4.641,832,4.641,840,5.476,878,3.18,879,4.641,880,5.422,881,5.422]],["title/index.html",[7,0.213,882,3.015,883,3.015]],["body/index.html",[4,0.192,14,0.02,59,0.012,66,0.015,67,0.012,167,1.859,238,2.386,352,3.74,449,3.74,501,3.016,513,3.016,812,3.325,884,4.369,885,4.369,886,5.601,887,4.369,888,4.369,889,4.369,890,4.369,891,4.369,892,4.369,893,6.182,894,4.369,895,4.369,896,4.369,897,7.014,898,4.369,899,4.369,900,6.898,901,4.369,902,4.369,903,5.601,904,4.369,905,4.369,906,4.369,907,5.601,908,5.601,909,4.369,910,4.369,911,4.369,912,5.601,913,5.601,914,4.369,915,4.369,916,4.369,917,4.369,918,4.369,919,3.74,920,4.369,921,4.369,922,4.369,923,4.369,924,4.369,925,4.369,926,4.369,927,4.369,928,4.369,929,4.369,930,4.369,931,4.369,932,4.369,933,4.369,934,4.369,935,4.369]],["title/modules.html",[70,2.369]],["body/modules.html",[14,0.017,59,0.015,66,0.017,67,0.015,69,3.755,70,2.609,80,3.191,81,3.191,82,2.971,919,6.024,936,7.038,937,7.038,938,7.038]],["title/overview.html",[939,4.229]],["body/overview.html",[2,2.109,14,0.02,36,3.78,41,3.286,43,3.318,59,0.011,66,0.015,67,0.011,68,1.979,69,4.944,70,1.979,71,2.255,72,2.616,73,2.616,74,2.255,75,2.616,76,2.616,77,3.534,78,3.534,79,3.534,80,4.259,81,4.059,82,3.78,83,3.421,84,2.616,85,2.616,91,1.57,113,3.534,114,3.534,116,3.534,117,3.812,118,3.812,168,1.142,218,2.419,223,1.863,252,2.421,318,3.286,366,3.534,367,3.534,687,3.142,791,3.534,792,3.534,793,3.534,939,3.534,940,4.129,941,4.129,942,4.129,943,4.129,944,4.129]],["title/miscellaneous/typealiases.html",[878,1.768,945,4.35]],["body/miscellaneous/typealiases.html",[7,0.369,14,0.017,59,0.014,66,0.017,67,0.014,96,0.399,141,2.03,247,3.321,248,3.973,251,3.424,253,3.618,273,4.327,286,3.321,568,3.618,576,4.327,586,3.618,592,4.327,595,4.327,694,3.618,713,3.618,878,3.074,946,5.242,947,4.487,948,4.487,949,4.487,950,4.487,951,5.242,952,4.487]],["title/miscellaneous/variables.html",[878,1.768,953,3.723]],["body/miscellaneous/variables.html",[5,0.092,7,0.173,10,1.146,14,0.021,20,0.673,27,1.502,29,1.553,33,1.866,51,1.502,58,1.068,59,0.007,62,1.462,64,1.438,66,0.01,67,0.007,70,1.789,80,1.438,81,1.438,82,1.339,87,2.364,96,0.364,108,1.274,120,3.193,133,3.193,141,1.208,146,2.839,155,1.419,157,1.588,159,1.175,161,1.208,172,1.438,174,0.986,176,1.683,177,1.683,178,2.029,180,1.588,198,2.037,200,1.339,221,1.419,224,1.106,225,0.837,230,1.588,232,1.438,233,1.692,235,1.692,238,1.339,253,1.692,260,4.08,270,2.922,275,3.117,276,2.098,312,2.839,323,2.839,344,1.553,347,2.96,368,1.866,369,2.839,374,3.484,375,2.098,443,5.955,460,1.866,477,1.553,488,1.692,505,1.692,509,1.553,510,2.575,511,2.575,512,1.438,514,1.692,525,1.438,528,2.575,530,1.692,531,1.692,532,1.692,533,1.692,568,1.692,578,3.117,579,2.098,588,2.575,694,1.692,705,1.692,707,3.484,708,2.098,713,1.692,723,3.117,724,2.098,746,2.839,747,2.839,794,1.866,796,2.098,797,3.193,798,2.098,821,2.098,822,3.193,823,2.098,824,2.098,825,3.193,826,2.098,829,2.098,830,3.193,835,2.098,836,2.098,838,2.098,839,3.865,864,2.098,865,2.098,878,1.438,947,2.098,948,2.098,949,2.098,950,2.098,952,3.865,953,2.098,954,2.452,955,2.452,956,3.731,957,3.731,958,2.452,959,2.452,960,2.452,961,2.452,962,2.452,963,2.452,964,2.452,965,2.452,966,4.516,967,6.81,968,3.731,969,3.731,970,2.452,971,2.452,972,2.452,973,2.452,974,2.452,975,3.731,976,2.452,977,3.731,978,2.452,979,3.731,980,2.452,981,2.452,982,2.452,983,2.452,984,2.452,985,2.452,986,2.452,987,2.452,988,2.452,989,2.452,990,2.452,991,2.452,992,2.452,993,2.452]]],"invertedIndex":[["",{"_index":14,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"interfaces/Author.html":{},"interfaces/CollationDocument.html":{},"interfaces/Course.html":{},"interfaces/CreateFeedDTO.html":{},"interfaces/CreateStudentDto.html":{},"interfaces/CreateTutorDto.html":{},"interfaces/CreateUserDto.html":{},"classes/Feed.html":{},"controllers/FeedController.html":{},"modules/FeedModule.html":{},"injectables/FeedService.html":{},"interfaces/FetchArg.html":{},"interfaces/IFeedController.html":{},"interfaces/IFeedService.html":{},"classes/JoiValidationPipe.html":{},"injectables/JwtAuthGuard.html":{},"injectables/JwtConfigService.html":{},"injectables/JwtStrategy.html":{},"interfaces/Learner.html":{},"injectables/LocalAuthGuard.html":{},"injectables/LocalStrategy.html":{},"classes/Material.html":{},"injectables/MongooseConfigService.html":{},"injectables/MulterConfigService.html":{},"injectables/PaginateModel.html":{},"interfaces/PaginateModelArgs.html":{},"interfaces/PaginateOptions.html":{},"interfaces/PaginationResult.html":{},"interfaces/PopulateOptions.html":{},"interfaces/QuestionnaireBody.html":{},"guards/RolesGaurd.html":{},"classes/Student.html":{},"interfaces/Todo.html":{},"classes/Tutor.html":{},"interfaces/User.html":{},"controllers/UserController.html":{},"modules/UserModule.html":{},"injectables/UserService.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/functions.html":{},"index.html":{},"modules.html":{},"overview.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["0",{"_index":230,"title":{},"body":{"interfaces/CollationDocument.html":{},"injectables/JwtConfigService.html":{},"injectables/MongooseConfigService.html":{},"injectables/MulterConfigService.html":{},"injectables/PaginateModel.html":{},"interfaces/PaginateModelArgs.html":{},"interfaces/PaginateOptions.html":{},"interfaces/PaginationResult.html":{},"interfaces/PopulateOptions.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["0.1.13",{"_index":871,"title":{},"body":{"dependencies.html":{}}}],["0.14.0",{"_index":863,"title":{},"body":{"dependencies.html":{}}}],["0.4.1",{"_index":867,"title":{},"body":{"dependencies.html":{}}}],["0.6.3",{"_index":845,"title":{},"body":{"dependencies.html":{}}}],["0/1",{"_index":819,"title":{},"body":{"coverage.html":{}}}],["0/10",{"_index":834,"title":{},"body":{"coverage.html":{}}}],["0/12",{"_index":827,"title":{},"body":{"coverage.html":{}}}],["0/2",{"_index":831,"title":{},"body":{"coverage.html":{}}}],["0/3",{"_index":818,"title":{},"body":{"coverage.html":{}}}],["0/4",{"_index":816,"title":{},"body":{"coverage.html":{}}}],["0/5",{"_index":817,"title":{},"body":{"coverage.html":{}}}],["0/7",{"_index":837,"title":{},"body":{"coverage.html":{}}}],["0/8",{"_index":833,"title":{},"body":{"coverage.html":{}}}],["0/9",{"_index":828,"title":{},"body":{"coverage.html":{}}}],["1",{"_index":223,"title":{},"body":{"interfaces/CollationDocument.html":{},"controllers/FeedController.html":{},"injectables/PaginateModel.html":{},"interfaces/PaginateModelArgs.html":{},"interfaces/PaginateOptions.html":{},"interfaces/PaginationResult.html":{},"interfaces/PopulateOptions.html":{},"interfaces/QuestionnaireBody.html":{},"injectables/UserService.html":{},"overview.html":{}}}],["1.0.0",{"_index":869,"title":{},"body":{"dependencies.html":{}}}],["10",{"_index":224,"title":{},"body":{"interfaces/CollationDocument.html":{},"injectables/JwtConfigService.html":{},"injectables/MongooseConfigService.html":{},"injectables/MulterConfigService.html":{},"injectables/PaginateModel.html":{},"interfaces/PaginateModelArgs.html":{},"interfaces/PaginateOptions.html":{},"interfaces/PaginationResult.html":{},"interfaces/PopulateOptions.html":{},"miscellaneous/variables.html":{}}}],["12",{"_index":942,"title":{},"body":{"overview.html":{}}}],["17",{"_index":646,"title":{},"body":{"interfaces/QuestionnaireBody.html":{},"injectables/UserService.html":{}}}],["17.4.0",{"_index":859,"title":{},"body":{"dependencies.html":{}}}],["19",{"_index":944,"title":{},"body":{"overview.html":{}}}],["1hr",{"_index":540,"title":{},"body":{"injectables/JwtConfigService.html":{},"injectables/MongooseConfigService.html":{},"injectables/MulterConfigService.html":{}}}],["2.1.4",{"_index":852,"title":{},"body":{"dependencies.html":{}}}],["26",{"_index":649,"title":{},"body":{"interfaces/QuestionnaireBody.html":{},"injectables/UserService.html":{}}}],["3",{"_index":941,"title":{},"body":{"overview.html":{}}}],["3.0.2",{"_index":873,"title":{},"body":{"dependencies.html":{}}}],["35",{"_index":652,"title":{},"body":{"interfaces/QuestionnaireBody.html":{},"injectables/UserService.html":{}}}],["4",{"_index":940,"title":{},"body":{"overview.html":{}}}],["4.0.0",{"_index":868,"title":{},"body":{"dependencies.html":{}}}],["4.1.2",{"_index":858,"title":{},"body":{"dependencies.html":{}}}],["4.1.6",{"_index":877,"title":{},"body":{"dependencies.html":{}}}],["4.17.21",{"_index":860,"title":{},"body":{"dependencies.html":{}}}],["4.8.0",{"_index":854,"title":{},"body":{"dependencies.html":{}}}],["5",{"_index":943,"title":{},"body":{"overview.html":{}}}],["5.0.1",{"_index":856,"title":{},"body":{"dependencies.html":{}}}],["5.12.7",{"_index":861,"title":{},"body":{"dependencies.html":{}}}],["5000",{"_index":498,"title":{},"body":{"injectables/JwtConfigService.html":{},"injectables/MongooseConfigService.html":{},"injectables/MulterConfigService.html":{}}}],["6.6.6",{"_index":874,"title":{},"body":{"dependencies.html":{}}}],["7.1.1",{"_index":866,"title":{},"body":{"dependencies.html":{}}}],["7.1.5",{"_index":849,"title":{},"body":{"dependencies.html":{}}}],["7.2.0",{"_index":847,"title":{},"body":{"dependencies.html":{}}}],["7.2.4",{"_index":848,"title":{},"body":{"dependencies.html":{}}}],["7.6.15",{"_index":844,"title":{},"body":{"dependencies.html":{}}}],["8",{"_index":643,"title":{},"body":{"interfaces/QuestionnaireBody.html":{},"injectables/UserService.html":{}}}],["9",{"_index":608,"title":{},"body":{"interfaces/QuestionnaireBody.html":{},"injectables/UserService.html":{}}}],["9._",{"_index":607,"title":{},"body":{"interfaces/QuestionnaireBody.html":{},"injectables/UserService.html":{}}}],["_",{"_index":491,"title":{},"body":{"injectables/JwtConfigService.html":{},"injectables/MongooseConfigService.html":{},"injectables/MulterConfigService.html":{}}}],["_.split(str",{"_index":511,"title":{},"body":{"injectables/JwtConfigService.html":{},"injectables/MongooseConfigService.html":{},"injectables/MulterConfigService.html":{},"miscellaneous/variables.html":{}}}],["_id",{"_index":153,"title":{},"body":{"injectables/AuthService.html":{},"interfaces/Author.html":{},"interfaces/Learner.html":{},"interfaces/QuestionnaireBody.html":{},"interfaces/User.html":{},"controllers/UserController.html":{},"injectables/UserService.html":{}}}],["_r",{"_index":666,"title":{},"body":{"interfaces/QuestionnaireBody.html":{},"injectables/UserService.html":{}}}],["_r.foreach((i",{"_index":680,"title":{},"body":{"interfaces/QuestionnaireBody.html":{},"injectables/UserService.html":{}}}],["_r[0",{"_index":672,"title":{},"body":{"interfaces/QuestionnaireBody.html":{},"injectables/UserService.html":{}}}],["_r[1",{"_index":673,"title":{},"body":{"interfaces/QuestionnaireBody.html":{},"injectables/UserService.html":{}}}],["_r[2",{"_index":674,"title":{},"body":{"interfaces/QuestionnaireBody.html":{},"injectables/UserService.html":{}}}],["_r[3",{"_index":675,"title":{},"body":{"interfaces/QuestionnaireBody.html":{},"injectables/UserService.html":{}}}],["_r[index",{"_index":681,"title":{},"body":{"interfaces/QuestionnaireBody.html":{},"injectables/UserService.html":{}}}],["access_token",{"_index":165,"title":{},"body":{"injectables/AuthService.html":{}}}],["activist",{"_index":668,"title":{},"body":{"interfaces/QuestionnaireBody.html":{},"injectables/UserService.html":{}}}],["activistanswers",{"_index":641,"title":{},"body":{"interfaces/QuestionnaireBody.html":{},"injectables/UserService.html":{}}}],["activistsum",{"_index":658,"title":{},"body":{"interfaces/QuestionnaireBody.html":{},"injectables/UserService.html":{}}}],["aliases",{"_index":946,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["allowed",{"_index":786,"title":{},"body":{"controllers/UserController.html":{}}}],["alternate",{"_index":183,"title":{},"body":{"interfaces/CollationDocument.html":{},"injectables/PaginateModel.html":{},"interfaces/PaginateModelArgs.html":{},"interfaces/PaginateOptions.html":{},"interfaces/PaginationResult.html":{},"interfaces/PopulateOptions.html":{}}}],["amazing",{"_index":920,"title":{},"body":{"index.html":{}}}],["ans",{"_index":654,"title":{},"body":{"interfaces/QuestionnaireBody.html":{},"injectables/UserService.html":{}}}],["ans.reduce((prev",{"_index":655,"title":{},"body":{"interfaces/QuestionnaireBody.html":{},"injectables/UserService.html":{}}}],["answers",{"_index":587,"title":{},"body":{"interfaces/QuestionnaireBody.html":{},"controllers/UserController.html":{},"injectables/UserService.html":{}}}],["answers.map((i",{"_index":639,"title":{},"body":{"interfaces/QuestionnaireBody.html":{},"injectables/UserService.html":{}}}],["app",{"_index":899,"title":{},"body":{"index.html":{}}}],["app.controller",{"_index":88,"title":{},"body":{"modules/AppModule.html":{}}}],["app.service",{"_index":42,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{}}}],["appcontroller",{"_index":1,"title":{"controllers/AppController.html":{}},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"coverage.html":{}}}],["applications",{"_index":892,"title":{},"body":{"index.html":{}}}],["appmodule",{"_index":69,"title":{"modules/AppModule.html":{}},"body":{"modules/AppModule.html":{},"modules.html":{},"overview.html":{}}}],["appservice",{"_index":41,"title":{"injectables/AppService.html":{}},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"interfaces/Todo.html":{},"coverage.html":{},"overview.html":{}}}],["arg",{"_index":395,"title":{},"body":{"injectables/FeedService.html":{}}}],["arg.learningstyle",{"_index":413,"title":{},"body":{"injectables/FeedService.html":{},"interfaces/FetchArg.html":{}}}],["arg.page",{"_index":408,"title":{},"body":{"injectables/FeedService.html":{},"interfaces/FetchArg.html":{}}}],["args",{"_index":222,"title":{},"body":{"interfaces/CollationDocument.html":{},"injectables/PaginateModel.html":{},"interfaces/PaginateModelArgs.html":{},"interfaces/PaginateOptions.html":{},"interfaces/PaginationResult.html":{},"interfaces/PopulateOptions.html":{}}}],["argumentmetadata",{"_index":441,"title":{},"body":{"classes/JoiValidationPipe.html":{}}}],["array",{"_index":173,"title":{},"body":{"interfaces/Author.html":{},"interfaces/CollationDocument.html":{},"controllers/FeedController.html":{},"interfaces/Learner.html":{},"injectables/PaginateModel.html":{},"interfaces/PaginateModelArgs.html":{},"interfaces/PaginateOptions.html":{},"interfaces/PaginationResult.html":{},"interfaces/PopulateOptions.html":{},"interfaces/QuestionnaireBody.html":{},"classes/Student.html":{},"classes/Tutor.html":{},"interfaces/User.html":{},"injectables/UserService.html":{}}}],["async",{"_index":10,"title":{},"body":{"controllers/AppController.html":{},"injectables/AuthService.html":{},"interfaces/CollationDocument.html":{},"controllers/FeedController.html":{},"injectables/FeedService.html":{},"interfaces/FetchArg.html":{},"injectables/JwtStrategy.html":{},"injectables/LocalStrategy.html":{},"injectables/PaginateModel.html":{},"interfaces/PaginateModelArgs.html":{},"interfaces/PaginateOptions.html":{},"interfaces/PaginationResult.html":{},"interfaces/PopulateOptions.html":{},"interfaces/QuestionnaireBody.html":{},"controllers/UserController.html":{},"injectables/UserService.html":{},"miscellaneous/variables.html":{}}}],["asyncmodelfactory",{"_index":986,"title":{},"body":{"miscellaneous/variables.html":{}}}],["auth.guard",{"_index":40,"title":{},"body":{"controllers/AppController.html":{},"controllers/UserController.html":{}}}],["auth.guard.ts",{"_index":456,"title":{},"body":{"injectables/JwtAuthGuard.html":{},"injectables/LocalAuthGuard.html":{},"coverage.html":{}}}],["auth.guard.ts:11",{"_index":461,"title":{},"body":{"injectables/JwtAuthGuard.html":{}}}],["auth.guard.ts:16",{"_index":464,"title":{},"body":{"injectables/JwtAuthGuard.html":{}}}],["auth.service",{"_index":129,"title":{},"body":{"modules/AuthModule.html":{},"injectables/LocalStrategy.html":{}}}],["auth/auth.service",{"_index":37,"title":{},"body":{"controllers/AppController.html":{}}}],["auth/jwt",{"_index":750,"title":{},"body":{"controllers/UserController.html":{}}}],["auth/local",{"_index":39,"title":{},"body":{"controllers/AppController.html":{}}}],["authguard",{"_index":468,"title":{},"body":{"injectables/JwtAuthGuard.html":{},"injectables/LocalAuthGuard.html":{}}}],["authguard('jwt",{"_index":469,"title":{},"body":{"injectables/JwtAuthGuard.html":{}}}],["authguard('local",{"_index":559,"title":{},"body":{"injectables/LocalAuthGuard.html":{}}}],["authmodule",{"_index":80,"title":{"modules/AuthModule.html":{}},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules.html":{},"overview.html":{},"miscellaneous/variables.html":{}}}],["author",{"_index":167,"title":{"interfaces/Author.html":{}},"body":{"interfaces/Author.html":{},"interfaces/Course.html":{},"interfaces/CreateStudentDto.html":{},"interfaces/CreateTutorDto.html":{},"interfaces/CreateUserDto.html":{},"interfaces/Learner.html":{},"classes/Tutor.html":{},"interfaces/User.html":{},"coverage.html":{},"index.html":{}}}],["authservice",{"_index":36,"title":{"injectables/AuthService.html":{}},"body":{"controllers/AppController.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"injectables/LocalStrategy.html":{},"coverage.html":{},"overview.html":{}}}],["autopopulate",{"_index":862,"title":{},"body":{"dependencies.html":{}}}],["await",{"_index":62,"title":{},"body":{"controllers/AppController.html":{},"injectables/AuthService.html":{},"interfaces/CollationDocument.html":{},"controllers/FeedController.html":{},"injectables/FeedService.html":{},"interfaces/FetchArg.html":{},"injectables/LocalStrategy.html":{},"injectables/PaginateModel.html":{},"interfaces/PaginateModelArgs.html":{},"interfaces/PaginateOptions.html":{},"interfaces/PaginationResult.html":{},"interfaces/PopulateOptions.html":{},"interfaces/QuestionnaireBody.html":{},"controllers/UserController.html":{},"injectables/UserService.html":{},"miscellaneous/variables.html":{}}}],["axios",{"_index":102,"title":{},"body":{"injectables/AppService.html":{},"interfaces/Todo.html":{}}}],["axiosresponse",{"_index":101,"title":{},"body":{"injectables/AppService.html":{},"interfaces/Todo.html":{}}}],["backers",{"_index":921,"title":{},"body":{"index.html":{}}}],["backwards",{"_index":184,"title":{},"body":{"interfaces/CollationDocument.html":{},"injectables/PaginateModel.html":{},"interfaces/PaginateModelArgs.html":{},"interfaces/PaginateOptions.html":{},"interfaces/PaginationResult.html":{},"interfaces/PopulateOptions.html":{}}}],["badrequestexception",{"_index":302,"title":{},"body":{"controllers/FeedController.html":{},"classes/JoiValidationPipe.html":{},"controllers/UserController.html":{}}}],["badrequestexception(error.message",{"_index":362,"title":{},"body":{"controllers/FeedController.html":{},"classes/JoiValidationPipe.html":{},"controllers/UserController.html":{}}}],["bcrypt",{"_index":855,"title":{},"body":{"dependencies.html":{}}}],["bcrypt.compare(password",{"_index":980,"title":{},"body":{"miscellaneous/variables.html":{}}}],["bcrypt.gensalt(saltrounds",{"_index":976,"title":{},"body":{"miscellaneous/variables.html":{}}}],["bcrypt.hash(password",{"_index":978,"title":{},"body":{"miscellaneous/variables.html":{}}}],["beautiful",{"_index":864,"title":{},"body":{"dependencies.html":{},"miscellaneous/variables.html":{}}}],["body",{"_index":298,"title":{},"body":{"controllers/FeedController.html":{},"injectables/FeedService.html":{},"interfaces/FetchArg.html":{},"interfaces/QuestionnaireBody.html":{},"controllers/UserController.html":{},"injectables/UserService.html":{}}}],["body.answers",{"_index":789,"title":{},"body":{"controllers/UserController.html":{}}}],["body.title.tolowercase",{"_index":417,"title":{},"body":{"injectables/FeedService.html":{},"interfaces/FetchArg.html":{}}}],["boolean",{"_index":110,"title":{},"body":{"injectables/AppService.html":{},"interfaces/Author.html":{},"interfaces/CollationDocument.html":{},"interfaces/Learner.html":{},"injectables/PaginateModel.html":{},"interfaces/PaginateModelArgs.html":{},"interfaces/PaginateOptions.html":{},"interfaces/PaginationResult.html":{},"interfaces/PopulateOptions.html":{},"interfaces/QuestionnaireBody.html":{},"guards/RolesGaurd.html":{},"classes/Student.html":{},"interfaces/Todo.html":{},"classes/Tutor.html":{},"interfaces/User.html":{},"injectables/UserService.html":{}}}],["bootstrap",{"_index":74,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/FeedModule.html":{},"modules/UserModule.html":{},"coverage.html":{},"miscellaneous/functions.html":{},"overview.html":{}}}],["browse",{"_index":938,"title":{},"body":{"modules.html":{}}}],["browser",{"_index":936,"title":{},"body":{"modules.html":{}}}],["buffer",{"_index":572,"title":{},"body":{"classes/Material.html":{}}}],["building",{"_index":887,"title":{},"body":{"index.html":{}}}],["canactivate",{"_index":457,"title":{},"body":{"injectables/JwtAuthGuard.html":{},"guards/RolesGaurd.html":{}}}],["canactivate(context",{"_index":459,"title":{},"body":{"injectables/JwtAuthGuard.html":{},"guards/RolesGaurd.html":{}}}],["casefirst",{"_index":185,"title":{},"body":{"interfaces/CollationDocument.html":{},"injectables/PaginateModel.html":{},"interfaces/PaginateModelArgs.html":{},"interfaces/PaginateOptions.html":{},"interfaces/PaginationResult.html":{},"interfaces/PopulateOptions.html":{}}}],["caselevel",{"_index":186,"title":{},"body":{"interfaces/CollationDocument.html":{},"injectables/PaginateModel.html":{},"interfaces/PaginateModelArgs.html":{},"interfaces/PaginateOptions.html":{},"interfaces/PaginationResult.html":{},"interfaces/PopulateOptions.html":{}}}],["catch",{"_index":360,"title":{},"body":{"controllers/FeedController.html":{},"injectables/FeedService.html":{},"interfaces/FetchArg.html":{},"interfaces/QuestionnaireBody.html":{},"controllers/UserController.html":{},"injectables/UserService.html":{}}}],["cb",{"_index":530,"title":{},"body":{"injectables/JwtConfigService.html":{},"injectables/MongooseConfigService.html":{},"injectables/MulterConfigService.html":{},"miscellaneous/variables.html":{}}}],["cb(null",{"_index":532,"title":{},"body":{"injectables/JwtConfigService.html":{},"injectables/MongooseConfigService.html":{},"injectables/MulterConfigService.html":{},"miscellaneous/variables.html":{}}}],["class",{"_index":46,"title":{"classes/Feed.html":{},"classes/JoiValidationPipe.html":{},"classes/Material.html":{},"classes/Student.html":{},"classes/Tutor.html":{}},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"interfaces/CollationDocument.html":{},"classes/Feed.html":{},"controllers/FeedController.html":{},"modules/FeedModule.html":{},"injectables/FeedService.html":{},"interfaces/FetchArg.html":{},"classes/JoiValidationPipe.html":{},"injectables/JwtAuthGuard.html":{},"injectables/JwtConfigService.html":{},"injectables/JwtStrategy.html":{},"injectables/LocalAuthGuard.html":{},"injectables/LocalStrategy.html":{},"classes/Material.html":{},"injectables/MongooseConfigService.html":{},"injectables/MulterConfigService.html":{},"injectables/PaginateModel.html":{},"interfaces/PaginateModelArgs.html":{},"interfaces/PaginateOptions.html":{},"interfaces/PaginationResult.html":{},"interfaces/PopulateOptions.html":{},"interfaces/QuestionnaireBody.html":{},"guards/RolesGaurd.html":{},"classes/Student.html":{},"interfaces/Todo.html":{},"classes/Tutor.html":{},"controllers/UserController.html":{},"modules/UserModule.html":{},"injectables/UserService.html":{},"coverage.html":{}}}],["classes",{"_index":252,"title":{},"body":{"classes/Feed.html":{},"classes/JoiValidationPipe.html":{},"classes/Material.html":{},"classes/Student.html":{},"classes/Tutor.html":{},"overview.html":{}}}],["cluster_appmodule",{"_index":77,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_appmodule_imports",{"_index":78,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_appmodule_providers",{"_index":79,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_authmodule",{"_index":113,"title":{},"body":{"modules/AuthModule.html":{},"overview.html":{}}}],["cluster_authmodule_exports",{"_index":114,"title":{},"body":{"modules/AuthModule.html":{},"overview.html":{}}}],["cluster_authmodule_imports",{"_index":115,"title":{},"body":{"modules/AuthModule.html":{}}}],["cluster_authmodule_providers",{"_index":116,"title":{},"body":{"modules/AuthModule.html":{},"overview.html":{}}}],["cluster_feedmodule",{"_index":366,"title":{},"body":{"modules/FeedModule.html":{},"overview.html":{}}}],["cluster_feedmodule_providers",{"_index":367,"title":{},"body":{"modules/FeedModule.html":{},"overview.html":{}}}],["cluster_usermodule",{"_index":791,"title":{},"body":{"modules/UserModule.html":{},"overview.html":{}}}],["cluster_usermodule_exports",{"_index":792,"title":{},"body":{"modules/UserModule.html":{},"overview.html":{}}}],["cluster_usermodule_providers",{"_index":793,"title":{},"body":{"modules/UserModule.html":{},"overview.html":{}}}],["collation",{"_index":205,"title":{},"body":{"interfaces/CollationDocument.html":{},"injectables/PaginateModel.html":{},"interfaces/PaginateModelArgs.html":{},"interfaces/PaginateOptions.html":{},"interfaces/PaginationResult.html":{},"interfaces/PopulateOptions.html":{}}}],["collationdocument",{"_index":181,"title":{"interfaces/CollationDocument.html":{}},"body":{"interfaces/CollationDocument.html":{},"injectables/PaginateModel.html":{},"interfaces/PaginateModelArgs.html":{},"interfaces/PaginateOptions.html":{},"interfaces/PaginationResult.html":{},"interfaces/PopulateOptions.html":{},"coverage.html":{}}}],["completed",{"_index":109,"title":{},"body":{"injectables/AppService.html":{},"interfaces/Todo.html":{}}}],["config",{"_index":494,"title":{},"body":{"injectables/JwtConfigService.html":{},"injectables/MongooseConfigService.html":{},"injectables/MulterConfigService.html":{}}}],["config/configuration",{"_index":127,"title":{},"body":{"modules/AuthModule.html":{}}}],["config/modules",{"_index":89,"title":{},"body":{"modules/AppModule.html":{}}}],["config_module_options",{"_index":822,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["configmodule",{"_index":120,"title":{},"body":{"modules/AuthModule.html":{},"miscellaneous/variables.html":{}}}],["configmodule.forroot(config_module_options",{"_index":981,"title":{},"body":{"miscellaneous/variables.html":{}}}],["configmoduleoptions",{"_index":963,"title":{},"body":{"miscellaneous/variables.html":{}}}],["configservice",{"_index":308,"title":{},"body":{"controllers/FeedController.html":{},"injectables/JwtConfigService.html":{},"injectables/JwtStrategy.html":{},"injectables/MongooseConfigService.html":{},"injectables/MulterConfigService.html":{}}}],["configuration",{"_index":514,"title":{},"body":{"injectables/JwtConfigService.html":{},"injectables/MongooseConfigService.html":{},"injectables/MulterConfigService.html":{},"miscellaneous/variables.html":{}}}],["console.log(context",{"_index":470,"title":{},"body":{"injectables/JwtAuthGuard.html":{}}}],["console.log(error",{"_index":409,"title":{},"body":{"injectables/FeedService.html":{},"interfaces/FetchArg.html":{},"interfaces/QuestionnaireBody.html":{},"injectables/UserService.html":{}}}],["console.log(error.keyvalue",{"_index":778,"title":{},"body":{"controllers/UserController.html":{}}}],["console.log(request.body",{"_index":693,"title":{},"body":{"guards/RolesGaurd.html":{}}}],["const",{"_index":58,"title":{},"body":{"controllers/AppController.html":{},"injectables/AuthService.html":{},"interfaces/CollationDocument.html":{},"classes/Feed.html":{},"controllers/FeedController.html":{},"modules/FeedModule.html":{},"injectables/FeedService.html":{},"interfaces/FetchArg.html":{},"classes/JoiValidationPipe.html":{},"injectables/JwtConfigService.html":{},"injectables/LocalStrategy.html":{},"classes/Material.html":{},"injectables/MongooseConfigService.html":{},"injectables/MulterConfigService.html":{},"injectables/PaginateModel.html":{},"interfaces/PaginateModelArgs.html":{},"interfaces/PaginateOptions.html":{},"interfaces/PaginationResult.html":{},"interfaces/PopulateOptions.html":{},"interfaces/QuestionnaireBody.html":{},"guards/RolesGaurd.html":{},"classes/Student.html":{},"classes/Tutor.html":{},"controllers/UserController.html":{},"modules/UserModule.html":{},"injectables/UserService.html":{},"miscellaneous/variables.html":{}}}],["constructor",{"_index":47,"title":{},"body":{"controllers/AppController.html":{},"injectables/AppService.html":{},"injectables/AuthService.html":{},"controllers/FeedController.html":{},"injectables/FeedService.html":{},"interfaces/FetchArg.html":{},"classes/JoiValidationPipe.html":{},"injectables/JwtConfigService.html":{},"injectables/JwtStrategy.html":{},"injectables/LocalStrategy.html":{},"injectables/MongooseConfigService.html":{},"injectables/MulterConfigService.html":{},"interfaces/QuestionnaireBody.html":{},"injectables/UserService.html":{}}}],["constructor(authservice",{"_index":561,"title":{},"body":{"injectables/LocalStrategy.html":{}}}],["constructor(configservice",{"_index":480,"title":{},"body":{"injectables/JwtConfigService.html":{},"injectables/JwtStrategy.html":{},"injectables/MongooseConfigService.html":{},"injectables/MulterConfigService.html":{}}}],["constructor(feedmodel",{"_index":385,"title":{},"body":{"injectables/FeedService.html":{}}}],["constructor(httpservice",{"_index":93,"title":{},"body":{"injectables/AppService.html":{}}}],["constructor(materialmodel",{"_index":803,"title":{},"body":{"injectables/UserService.html":{}}}],["constructor(private",{"_index":111,"title":{},"body":{"injectables/AppService.html":{},"classes/JoiValidationPipe.html":{},"injectables/JwtConfigService.html":{},"injectables/JwtStrategy.html":{},"injectables/LocalStrategy.html":{},"injectables/MongooseConfigService.html":{},"injectables/MulterConfigService.html":{},"interfaces/Todo.html":{},"controllers/UserController.html":{}}}],["constructor(schema",{"_index":436,"title":{},"body":{"classes/JoiValidationPipe.html":{}}}],["constructor(userservice",{"_index":136,"title":{},"body":{"injectables/AuthService.html":{}}}],["contants",{"_index":495,"title":{},"body":{"injectables/JwtConfigService.html":{},"injectables/MongooseConfigService.html":{},"injectables/MulterConfigService.html":{}}}],["content",{"_index":232,"title":{},"body":{"interfaces/Course.html":{},"interfaces/CreateFeedDTO.html":{},"classes/Feed.html":{},"injectables/FeedService.html":{},"interfaces/FetchArg.html":{},"miscellaneous/variables.html":{}}}],["contenttype",{"_index":569,"title":{},"body":{"classes/Material.html":{}}}],["context",{"_index":462,"title":{},"body":{"injectables/JwtAuthGuard.html":{},"guards/RolesGaurd.html":{}}}],["context.switchtohttp().getrequest",{"_index":692,"title":{},"body":{"guards/RolesGaurd.html":{}}}],["controller",{"_index":0,"title":{"controllers/AppController.html":{},"controllers/FeedController.html":{},"controllers/UserController.html":{}},"body":{"controllers/AppController.html":{},"controllers/FeedController.html":{},"controllers/UserController.html":{},"coverage.html":{}}}],["controller('/feeds",{"_index":326,"title":{},"body":{"controllers/FeedController.html":{}}}],["controller('users",{"_index":765,"title":{},"body":{"controllers/UserController.html":{}}}],["controller.interface",{"_index":322,"title":{},"body":{"controllers/FeedController.html":{}}}],["controller.interface.ts",{"_index":428,"title":{},"body":{"interfaces/IFeedController.html":{},"coverage.html":{}}}],["controllers",{"_index":2,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"modules/AuthModule.html":{},"controllers/FeedController.html":{},"modules/FeedModule.html":{},"controllers/UserController.html":{},"modules/UserModule.html":{},"overview.html":{}}}],["course",{"_index":174,"title":{"interfaces/Course.html":{}},"body":{"interfaces/Author.html":{},"interfaces/Course.html":{},"interfaces/CreateFeedDTO.html":{},"classes/Feed.html":{},"injectables/FeedService.html":{},"interfaces/FetchArg.html":{},"interfaces/Learner.html":{},"classes/Tutor.html":{},"interfaces/User.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["coursecode",{"_index":233,"title":{},"body":{"interfaces/Course.html":{},"interfaces/CreateFeedDTO.html":{},"classes/Feed.html":{},"miscellaneous/variables.html":{}}}],["coursescreated",{"_index":172,"title":{},"body":{"interfaces/Author.html":{},"interfaces/Learner.html":{},"classes/Tutor.html":{},"interfaces/User.html":{},"controllers/UserController.html":{},"miscellaneous/variables.html":{}}}],["coverage",{"_index":812,"title":{"coverage.html":{}},"body":{"coverage.html":{},"index.html":{}}}],["createdat",{"_index":234,"title":{},"body":{"interfaces/Course.html":{},"interfaces/CreateFeedDTO.html":{},"classes/Feed.html":{}}}],["createdby",{"_index":235,"title":{},"body":{"interfaces/Course.html":{},"interfaces/CreateFeedDTO.html":{},"classes/Feed.html":{},"miscellaneous/variables.html":{}}}],["createduser",{"_index":775,"title":{},"body":{"controllers/UserController.html":{}}}],["createfeed",{"_index":379,"title":{},"body":{"injectables/FeedService.html":{}}}],["createfeed(body",{"_index":388,"title":{},"body":{"injectables/FeedService.html":{},"interfaces/FetchArg.html":{}}}],["createfeeddto",{"_index":243,"title":{"interfaces/CreateFeedDTO.html":{}},"body":{"interfaces/CreateFeedDTO.html":{},"controllers/FeedController.html":{},"injectables/FeedService.html":{},"interfaces/FetchArg.html":{},"coverage.html":{}}}],["createfeedschema",{"_index":323,"title":{},"body":{"controllers/FeedController.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["createjwtoptions",{"_index":479,"title":{},"body":{"injectables/JwtConfigService.html":{},"injectables/MongooseConfigService.html":{},"injectables/MulterConfigService.html":{}}}],["creatematerialdto",{"_index":577,"title":{},"body":{"classes/Material.html":{}}}],["createmongooseoptions",{"_index":518,"title":{},"body":{"injectables/JwtConfigService.html":{},"injectables/MongooseConfigService.html":{},"injectables/MulterConfigService.html":{}}}],["createmulteroptions",{"_index":527,"title":{},"body":{"injectables/JwtConfigService.html":{},"injectables/MongooseConfigService.html":{},"injectables/MulterConfigService.html":{}}}],["createparamdecorator",{"_index":989,"title":{},"body":{"miscellaneous/variables.html":{}}}],["createstudent",{"_index":799,"title":{},"body":{"injectables/UserService.html":{}}}],["createstudent(body",{"_index":619,"title":{},"body":{"interfaces/QuestionnaireBody.html":{},"injectables/UserService.html":{}}}],["createstudentdto",{"_index":246,"title":{"interfaces/CreateStudentDto.html":{}},"body":{"interfaces/CreateStudentDto.html":{},"interfaces/CreateTutorDto.html":{},"interfaces/CreateUserDto.html":{},"coverage.html":{}}}],["createstudentschema",{"_index":747,"title":{},"body":{"controllers/UserController.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["createtutor",{"_index":800,"title":{},"body":{"injectables/UserService.html":{}}}],["createtutor(body",{"_index":631,"title":{},"body":{"interfaces/QuestionnaireBody.html":{},"injectables/UserService.html":{}}}],["createtutordto",{"_index":250,"title":{"interfaces/CreateTutorDto.html":{}},"body":{"interfaces/CreateStudentDto.html":{},"interfaces/CreateTutorDto.html":{},"interfaces/CreateUserDto.html":{},"coverage.html":{}}}],["createtutorschema",{"_index":746,"title":{},"body":{"controllers/UserController.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["createuserdto",{"_index":249,"title":{"interfaces/CreateUserDto.html":{}},"body":{"interfaces/CreateStudentDto.html":{},"interfaces/CreateTutorDto.html":{},"interfaces/CreateUserDto.html":{},"coverage.html":{}}}],["ctx",{"_index":991,"title":{},"body":{"miscellaneous/variables.html":{}}}],["ctx.switchtohttp().getrequest",{"_index":992,"title":{},"body":{"miscellaneous/variables.html":{}}}],["current",{"_index":656,"title":{},"body":{"interfaces/QuestionnaireBody.html":{},"injectables/UserService.html":{}}}],["data",{"_index":64,"title":{},"body":{"controllers/AppController.html":{},"controllers/FeedController.html":{},"classes/Material.html":{},"controllers/UserController.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["data._id",{"_index":756,"title":{},"body":{"controllers/UserController.html":{}}}],["data.coursescreated",{"_index":761,"title":{},"body":{"controllers/UserController.html":{}}}],["data.email",{"_index":758,"title":{},"body":{"controllers/UserController.html":{}}}],["data.firstname",{"_index":755,"title":{},"body":{"controllers/UserController.html":{}}}],["data.isstudent",{"_index":759,"title":{},"body":{"controllers/UserController.html":{}}}],["data.lastname",{"_index":757,"title":{},"body":{"controllers/UserController.html":{}}}],["data.learningstyle",{"_index":764,"title":{},"body":{"controllers/UserController.html":{}}}],["data.level",{"_index":762,"title":{},"body":{"controllers/UserController.html":{}}}],["data.studentnumber",{"_index":763,"title":{},"body":{"controllers/UserController.html":{}}}],["data.title",{"_index":760,"title":{},"body":{"controllers/UserController.html":{}}}],["database",{"_index":499,"title":{},"body":{"injectables/JwtConfigService.html":{},"injectables/MongooseConfigService.html":{},"injectables/MulterConfigService.html":{}}}],["datalength",{"_index":228,"title":{},"body":{"interfaces/CollationDocument.html":{},"injectables/PaginateModel.html":{},"interfaces/PaginateModelArgs.html":{},"interfaces/PaginateOptions.html":{},"interfaces/PaginationResult.html":{},"interfaces/PopulateOptions.html":{}}}],["date",{"_index":239,"title":{},"body":{"interfaces/Course.html":{},"interfaces/CreateFeedDTO.html":{},"classes/Feed.html":{},"classes/Material.html":{}}}],["date.now",{"_index":274,"title":{},"body":{"classes/Feed.html":{},"classes/Material.html":{}}}],["declarations",{"_index":73,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/FeedModule.html":{},"modules/UserModule.html":{},"overview.html":{}}}],["decorators",{"_index":13,"title":{},"body":{"controllers/AppController.html":{},"classes/Feed.html":{},"controllers/FeedController.html":{},"classes/Material.html":{},"classes/Student.html":{},"classes/Tutor.html":{},"controllers/UserController.html":{}}}],["decotators/user.decorator",{"_index":751,"title":{},"body":{"controllers/UserController.html":{}}}],["default",{"_index":260,"title":{},"body":{"classes/Feed.html":{},"injectables/JwtConfigService.html":{},"classes/Material.html":{},"injectables/MongooseConfigService.html":{},"injectables/MulterConfigService.html":{},"miscellaneous/variables.html":{}}}],["defined",{"_index":16,"title":{},"body":{"controllers/AppController.html":{},"injectables/AppService.html":{},"injectables/AuthService.html":{},"classes/Feed.html":{},"controllers/FeedController.html":{},"injectables/FeedService.html":{},"classes/JoiValidationPipe.html":{},"injectables/JwtAuthGuard.html":{},"injectables/JwtConfigService.html":{},"injectables/JwtStrategy.html":{},"injectables/LocalStrategy.html":{},"classes/Material.html":{},"injectables/MongooseConfigService.html":{},"injectables/MulterConfigService.html":{},"injectables/PaginateModel.html":{},"guards/RolesGaurd.html":{},"classes/Student.html":{},"classes/Tutor.html":{},"controllers/UserController.html":{},"injectables/UserService.html":{}}}],["delete",{"_index":303,"title":{},"body":{"controllers/FeedController.html":{},"injectables/FeedService.html":{},"interfaces/FetchArg.html":{}}}],["delete(':id",{"_index":300,"title":{},"body":{"controllers/FeedController.html":{}}}],["deletedfeed",{"_index":423,"title":{},"body":{"injectables/FeedService.html":{},"interfaces/FetchArg.html":{}}}],["deletefeed",{"_index":380,"title":{},"body":{"injectables/FeedService.html":{},"interfaces/IFeedService.html":{}}}],["deletefeed(id",{"_index":390,"title":{},"body":{"injectables/FeedService.html":{},"interfaces/FetchArg.html":{}}}],["dependencies",{"_index":71,"title":{"dependencies.html":{}},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/FeedModule.html":{},"modules/UserModule.html":{},"dependencies.html":{},"overview.html":{}}}],["description",{"_index":513,"title":{},"body":{"injectables/JwtConfigService.html":{},"injectables/MongooseConfigService.html":{},"injectables/MulterConfigService.html":{},"index.html":{}}}],["destination",{"_index":528,"title":{},"body":{"injectables/JwtConfigService.html":{},"injectables/MongooseConfigService.html":{},"injectables/MulterConfigService.html":{},"miscellaneous/variables.html":{}}}],["determine",{"_index":801,"title":{},"body":{"injectables/UserService.html":{}}}],["determine(body",{"_index":637,"title":{},"body":{"interfaces/QuestionnaireBody.html":{},"injectables/UserService.html":{}}}],["determinelearningstyle",{"_index":728,"title":{},"body":{"controllers/UserController.html":{}}}],["determinelearningstyle(@body",{"_index":784,"title":{},"body":{"controllers/UserController.html":{}}}],["determinelearningstyle(body",{"_index":732,"title":{},"body":{"controllers/UserController.html":{}}}],["development",{"_index":501,"title":{},"body":{"injectables/JwtConfigService.html":{},"injectables/MongooseConfigService.html":{},"injectables/MulterConfigService.html":{},"index.html":{}}}],["disable",{"_index":446,"title":{},"body":{"classes/JoiValidationPipe.html":{}}}],["diskstorage",{"_index":488,"title":{},"body":{"injectables/JwtConfigService.html":{},"injectables/MongooseConfigService.html":{},"injectables/MulterConfigService.html":{},"miscellaneous/variables.html":{}}}],["docs",{"_index":208,"title":{},"body":{"interfaces/CollationDocument.html":{},"injectables/PaginateModel.html":{},"interfaces/PaginateModelArgs.html":{},"interfaces/PaginateOptions.html":{},"interfaces/PaginationResult.html":{},"interfaces/PopulateOptions.html":{}}}],["document",{"_index":192,"title":{},"body":{"interfaces/CollationDocument.html":{},"classes/Feed.html":{},"injectables/FeedService.html":{},"interfaces/FetchArg.html":{},"classes/Material.html":{},"injectables/PaginateModel.html":{},"interfaces/PaginateModelArgs.html":{},"interfaces/PaginateOptions.html":{},"interfaces/PaginationResult.html":{},"interfaces/PopulateOptions.html":{},"classes/Student.html":{},"classes/Tutor.html":{}}}],["documentation",{"_index":813,"title":{},"body":{"coverage.html":{}}}],["dto/create",{"_index":316,"title":{},"body":{"controllers/FeedController.html":{},"injectables/FeedService.html":{},"interfaces/FetchArg.html":{},"interfaces/QuestionnaireBody.html":{},"controllers/UserController.html":{},"injectables/UserService.html":{}}}],["e2e",{"_index":909,"title":{},"body":{"index.html":{}}}],["efficient",{"_index":888,"title":{},"body":{"index.html":{}}}],["email",{"_index":155,"title":{},"body":{"injectables/AuthService.html":{},"interfaces/Author.html":{},"interfaces/CreateStudentDto.html":{},"interfaces/CreateTutorDto.html":{},"interfaces/CreateUserDto.html":{},"interfaces/Learner.html":{},"interfaces/QuestionnaireBody.html":{},"classes/Student.html":{},"classes/Tutor.html":{},"interfaces/User.html":{},"controllers/UserController.html":{},"injectables/UserService.html":{},"miscellaneous/variables.html":{}}}],["emailpattern",{"_index":604,"title":{},"body":{"interfaces/QuestionnaireBody.html":{},"injectables/UserService.html":{}}}],["emailpattern.test(username",{"_index":611,"title":{},"body":{"interfaces/QuestionnaireBody.html":{},"injectables/UserService.html":{}}}],["endindex",{"_index":227,"title":{},"body":{"interfaces/CollationDocument.html":{},"injectables/PaginateModel.html":{},"interfaces/PaginateModelArgs.html":{},"interfaces/PaginateOptions.html":{},"interfaces/PaginationResult.html":{},"interfaces/PopulateOptions.html":{}}}],["environment",{"_index":508,"title":{},"body":{"injectables/JwtConfigService.html":{},"injectables/MongooseConfigService.html":{},"injectables/MulterConfigService.html":{}}}],["err",{"_index":465,"title":{},"body":{"injectables/JwtAuthGuard.html":{},"controllers/UserController.html":{}}}],["error",{"_index":361,"title":{},"body":{"controllers/FeedController.html":{},"injectables/FeedService.html":{},"interfaces/FetchArg.html":{},"classes/JoiValidationPipe.html":{},"injectables/JwtAuthGuard.html":{},"interfaces/QuestionnaireBody.html":{},"controllers/UserController.html":{},"injectables/UserService.html":{}}}],["error('a",{"_index":419,"title":{},"body":{"injectables/FeedService.html":{},"interfaces/FetchArg.html":{}}}],["error(`a",{"_index":623,"title":{},"body":{"interfaces/QuestionnaireBody.html":{},"injectables/UserService.html":{}}}],["error(`unable",{"_index":425,"title":{},"body":{"injectables/FeedService.html":{},"interfaces/FetchArg.html":{}}}],["error(error",{"_index":630,"title":{},"body":{"interfaces/QuestionnaireBody.html":{},"injectables/UserService.html":{}}}],["error(error.message",{"_index":415,"title":{},"body":{"injectables/FeedService.html":{},"interfaces/FetchArg.html":{}}}],["eslint",{"_index":445,"title":{},"body":{"classes/JoiValidationPipe.html":{}}}],["eslint/no",{"_index":450,"title":{},"body":{"classes/JoiValidationPipe.html":{}}}],["example",{"_index":478,"title":{},"body":{"injectables/JwtConfigService.html":{},"injectables/MongooseConfigService.html":{},"injectables/MulterConfigService.html":{}}}],["exec",{"_index":613,"title":{},"body":{"interfaces/QuestionnaireBody.html":{},"injectables/UserService.html":{}}}],["executioncontext",{"_index":460,"title":{},"body":{"injectables/JwtAuthGuard.html":{},"guards/RolesGaurd.html":{},"miscellaneous/variables.html":{}}}],["exist",{"_index":624,"title":{},"body":{"interfaces/QuestionnaireBody.html":{},"injectables/UserService.html":{}}}],["existinguserbyemail",{"_index":622,"title":{},"body":{"interfaces/QuestionnaireBody.html":{},"injectables/UserService.html":{}}}],["existinguserbystudentnumber",{"_index":625,"title":{},"body":{"interfaces/QuestionnaireBody.html":{},"injectables/UserService.html":{}}}],["exists",{"_index":420,"title":{},"body":{"injectables/FeedService.html":{},"interfaces/FetchArg.html":{}}}],["expiresin",{"_index":539,"title":{},"body":{"injectables/JwtConfigService.html":{},"injectables/MongooseConfigService.html":{},"injectables/MulterConfigService.html":{}}}],["export",{"_index":45,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"interfaces/Author.html":{},"interfaces/CollationDocument.html":{},"interfaces/Course.html":{},"interfaces/CreateFeedDTO.html":{},"interfaces/CreateStudentDto.html":{},"interfaces/CreateTutorDto.html":{},"interfaces/CreateUserDto.html":{},"classes/Feed.html":{},"controllers/FeedController.html":{},"modules/FeedModule.html":{},"injectables/FeedService.html":{},"interfaces/FetchArg.html":{},"interfaces/IFeedController.html":{},"interfaces/IFeedService.html":{},"classes/JoiValidationPipe.html":{},"injectables/JwtAuthGuard.html":{},"injectables/JwtConfigService.html":{},"injectables/JwtStrategy.html":{},"interfaces/Learner.html":{},"injectables/LocalAuthGuard.html":{},"injectables/LocalStrategy.html":{},"classes/Material.html":{},"injectables/MongooseConfigService.html":{},"injectables/MulterConfigService.html":{},"injectables/PaginateModel.html":{},"interfaces/PaginateModelArgs.html":{},"interfaces/PaginateOptions.html":{},"interfaces/PaginationResult.html":{},"interfaces/PopulateOptions.html":{},"interfaces/QuestionnaireBody.html":{},"guards/RolesGaurd.html":{},"classes/Student.html":{},"interfaces/Todo.html":{},"classes/Tutor.html":{},"interfaces/User.html":{},"controllers/UserController.html":{},"modules/UserModule.html":{},"injectables/UserService.html":{}}}],["exports",{"_index":76,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/FeedModule.html":{},"modules/UserModule.html":{},"overview.html":{}}}],["express",{"_index":311,"title":{},"body":{"controllers/FeedController.html":{},"injectables/JwtConfigService.html":{},"injectables/MongooseConfigService.html":{},"injectables/MulterConfigService.html":{},"dependencies.html":{}}}],["extends",{"_index":170,"title":{},"body":{"interfaces/Author.html":{},"interfaces/CreateStudentDto.html":{},"interfaces/CreateTutorDto.html":{},"interfaces/CreateUserDto.html":{},"injectables/JwtAuthGuard.html":{},"injectables/JwtStrategy.html":{},"interfaces/Learner.html":{},"injectables/LocalAuthGuard.html":{},"injectables/LocalStrategy.html":{},"classes/Material.html":{},"interfaces/User.html":{}}}],["extname",{"_index":490,"title":{},"body":{"injectables/JwtConfigService.html":{},"injectables/MongooseConfigService.html":{},"injectables/MulterConfigService.html":{}}}],["extractjwt",{"_index":547,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["extractjwt.fromauthheaderasbearertoken",{"_index":553,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["false",{"_index":522,"title":{},"body":{"injectables/JwtConfigService.html":{},"injectables/JwtStrategy.html":{},"injectables/MongooseConfigService.html":{},"injectables/MulterConfigService.html":{}}}],["feed",{"_index":241,"title":{"classes/Feed.html":{}},"body":{"interfaces/Course.html":{},"classes/Feed.html":{},"controllers/FeedController.html":{},"modules/FeedModule.html":{},"injectables/FeedService.html":{},"interfaces/FetchArg.html":{},"coverage.html":{}}}],["feed.controller",{"_index":372,"title":{},"body":{"modules/FeedModule.html":{}}}],["feed.dto",{"_index":317,"title":{},"body":{"controllers/FeedController.html":{},"injectables/FeedService.html":{},"interfaces/FetchArg.html":{}}}],["feed.dto.ts",{"_index":245,"title":{},"body":{"interfaces/CreateFeedDTO.html":{},"coverage.html":{}}}],["feed.name",{"_index":375,"title":{},"body":{"modules/FeedModule.html":{},"miscellaneous/variables.html":{}}}],["feed.schema",{"_index":325,"title":{},"body":{"controllers/FeedController.html":{}}}],["feed.schema.ts",{"_index":830,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["feed.service",{"_index":319,"title":{},"body":{"controllers/FeedController.html":{},"modules/FeedModule.html":{}}}],["feed/interfaces/feed.interface",{"_index":175,"title":{},"body":{"interfaces/Author.html":{},"classes/Feed.html":{},"interfaces/Learner.html":{},"classes/Tutor.html":{},"interfaces/User.html":{}}}],["feedcontroller",{"_index":277,"title":{"controllers/FeedController.html":{}},"body":{"controllers/FeedController.html":{},"modules/FeedModule.html":{},"coverage.html":{}}}],["feeddocument",{"_index":273,"title":{},"body":{"classes/Feed.html":{},"injectables/FeedService.html":{},"interfaces/FetchArg.html":{},"miscellaneous/typealiases.html":{}}}],["feedexist",{"_index":418,"title":{},"body":{"injectables/FeedService.html":{},"interfaces/FetchArg.html":{}}}],["feedmodel",{"_index":387,"title":{},"body":{"injectables/FeedService.html":{},"interfaces/FetchArg.html":{}}}],["feedmodule",{"_index":81,"title":{"modules/FeedModule.html":{}},"body":{"modules/AppModule.html":{},"modules/FeedModule.html":{},"modules.html":{},"overview.html":{},"miscellaneous/variables.html":{}}}],["feeds",{"_index":280,"title":{},"body":{"controllers/FeedController.html":{}}}],["feedschema",{"_index":275,"title":{},"body":{"classes/Feed.html":{},"modules/FeedModule.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["feedservice",{"_index":318,"title":{"injectables/FeedService.html":{}},"body":{"controllers/FeedController.html":{},"modules/FeedModule.html":{},"injectables/FeedService.html":{},"interfaces/FetchArg.html":{},"coverage.html":{},"overview.html":{}}}],["fetcharg",{"_index":393,"title":{"interfaces/FetchArg.html":{}},"body":{"injectables/FeedService.html":{},"interfaces/FetchArg.html":{},"coverage.html":{}}}],["fetchfeed",{"_index":432,"title":{},"body":{"interfaces/IFeedService.html":{}}}],["fetchfeeds",{"_index":381,"title":{},"body":{"injectables/FeedService.html":{},"interfaces/IFeedService.html":{}}}],["fetchfeeds(arg",{"_index":392,"title":{},"body":{"injectables/FeedService.html":{},"interfaces/FetchArg.html":{}}}],["fetchfeedsbylearningstyle",{"_index":382,"title":{},"body":{"injectables/FeedService.html":{}}}],["fetchfeedsbylearningstyle(arg",{"_index":396,"title":{},"body":{"injectables/FeedService.html":{},"interfaces/FetchArg.html":{}}}],["fetchfeedsbyquery",{"_index":383,"title":{},"body":{"injectables/FeedService.html":{}}}],["fetchfeedsbyquery(arg",{"_index":398,"title":{},"body":{"injectables/FeedService.html":{},"interfaces/FetchArg.html":{}}}],["fetchfeedsbytitle",{"_index":384,"title":{},"body":{"injectables/FeedService.html":{}}}],["fetchfeedsbytitle(title",{"_index":400,"title":{},"body":{"injectables/FeedService.html":{},"interfaces/FetchArg.html":{}}}],["fieldname",{"_index":348,"title":{},"body":{"controllers/FeedController.html":{}}}],["file",{"_index":5,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"interfaces/Author.html":{},"interfaces/CollationDocument.html":{},"interfaces/Course.html":{},"interfaces/CreateFeedDTO.html":{},"interfaces/CreateStudentDto.html":{},"interfaces/CreateTutorDto.html":{},"interfaces/CreateUserDto.html":{},"classes/Feed.html":{},"controllers/FeedController.html":{},"modules/FeedModule.html":{},"injectables/FeedService.html":{},"interfaces/FetchArg.html":{},"interfaces/IFeedController.html":{},"interfaces/IFeedService.html":{},"classes/JoiValidationPipe.html":{},"injectables/JwtAuthGuard.html":{},"injectables/JwtConfigService.html":{},"injectables/JwtStrategy.html":{},"interfaces/Learner.html":{},"injectables/LocalAuthGuard.html":{},"injectables/LocalStrategy.html":{},"classes/Material.html":{},"injectables/MongooseConfigService.html":{},"injectables/MulterConfigService.html":{},"injectables/PaginateModel.html":{},"interfaces/PaginateModelArgs.html":{},"interfaces/PaginateOptions.html":{},"interfaces/PaginationResult.html":{},"interfaces/PopulateOptions.html":{},"interfaces/QuestionnaireBody.html":{},"guards/RolesGaurd.html":{},"classes/Student.html":{},"interfaces/Todo.html":{},"classes/Tutor.html":{},"interfaces/User.html":{},"controllers/UserController.html":{},"modules/UserModule.html":{},"injectables/UserService.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["file.filename",{"_index":355,"title":{},"body":{"controllers/FeedController.html":{}}}],["filefieldsinterceptor",{"_index":309,"title":{},"body":{"controllers/FeedController.html":{}}}],["filename",{"_index":509,"title":{},"body":{"injectables/JwtConfigService.html":{},"classes/Material.html":{},"injectables/MongooseConfigService.html":{},"injectables/MulterConfigService.html":{},"miscellaneous/variables.html":{}}}],["filenames",{"_index":356,"title":{},"body":{"controllers/FeedController.html":{}}}],["files",{"_index":294,"title":{},"body":{"controllers/FeedController.html":{}}}],["files[fieldname",{"_index":349,"title":{},"body":{"controllers/FeedController.html":{}}}],["files[fieldname][0",{"_index":354,"title":{},"body":{"controllers/FeedController.html":{}}}],["filterquery",{"_index":191,"title":{},"body":{"interfaces/CollationDocument.html":{},"injectables/PaginateModel.html":{},"interfaces/PaginateModelArgs.html":{},"interfaces/PaginateOptions.html":{},"interfaces/PaginationResult.html":{},"interfaces/PopulateOptions.html":{}}}],["findone",{"_index":615,"title":{},"body":{"interfaces/QuestionnaireBody.html":{},"injectables/UserService.html":{}}}],["findone(username",{"_index":603,"title":{},"body":{"interfaces/QuestionnaireBody.html":{},"injectables/UserService.html":{}}}],["firstname",{"_index":176,"title":{},"body":{"interfaces/Author.html":{},"interfaces/CreateStudentDto.html":{},"interfaces/CreateTutorDto.html":{},"interfaces/CreateUserDto.html":{},"interfaces/Learner.html":{},"classes/Student.html":{},"classes/Tutor.html":{},"interfaces/User.html":{},"controllers/UserController.html":{},"miscellaneous/variables.html":{}}}],["formattedanswers",{"_index":638,"title":{},"body":{"interfaces/QuestionnaireBody.html":{},"injectables/UserService.html":{}}}],["formattedanswers.slice(0",{"_index":642,"title":{},"body":{"interfaces/QuestionnaireBody.html":{},"injectables/UserService.html":{}}}],["formattedanswers.slice(18",{"_index":648,"title":{},"body":{"interfaces/QuestionnaireBody.html":{},"injectables/UserService.html":{}}}],["formattedanswers.slice(27",{"_index":651,"title":{},"body":{"interfaces/QuestionnaireBody.html":{},"injectables/UserService.html":{}}}],["formattedanswers.slice(9",{"_index":645,"title":{},"body":{"interfaces/QuestionnaireBody.html":{},"injectables/UserService.html":{}}}],["formatuserresponsedata",{"_index":840,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["formatuserresponsedata(createduser",{"_index":777,"title":{},"body":{"controllers/UserController.html":{}}}],["formatuserresponsedata(data",{"_index":753,"title":{},"body":{"controllers/UserController.html":{},"miscellaneous/functions.html":{}}}],["formatuserresponsedata(u",{"_index":770,"title":{},"body":{"controllers/UserController.html":{}}}],["formatuserresponsedata(updateduser",{"_index":790,"title":{},"body":{"controllers/UserController.html":{}}}],["found",{"_index":426,"title":{},"body":{"injectables/FeedService.html":{},"interfaces/FetchArg.html":{}}}],["framework",{"_index":886,"title":{},"body":{"index.html":{}}}],["function",{"_index":429,"title":{},"body":{"interfaces/IFeedController.html":{},"interfaces/IFeedService.html":{},"controllers/UserController.html":{},"coverage.html":{}}}],["functions",{"_index":879,"title":{"miscellaneous/functions.html":{}},"body":{"miscellaneous/functions.html":{}}}],["g",{"_index":329,"title":{},"body":{"controllers/FeedController.html":{}}}],["get(':title",{"_index":287,"title":{},"body":{"controllers/FeedController.html":{}}}],["get('profile",{"_index":767,"title":{},"body":{"controllers/UserController.html":{}}}],["get('todos",{"_index":21,"title":{},"body":{"controllers/AppController.html":{}}}],["get()@render('index",{"_index":15,"title":{},"body":{"controllers/AppController.html":{}}}],["getfeed",{"_index":281,"title":{},"body":{"controllers/FeedController.html":{},"interfaces/IFeedController.html":{}}}],["getfeed(@param",{"_index":338,"title":{},"body":{"controllers/FeedController.html":{}}}],["getfeed(params",{"_index":285,"title":{},"body":{"controllers/FeedController.html":{}}}],["getfeeds",{"_index":282,"title":{},"body":{"controllers/FeedController.html":{},"interfaces/IFeedController.html":{}}}],["getfeeds(queries",{"_index":290,"title":{},"body":{"controllers/FeedController.html":{}}}],["getfilename",{"_index":347,"title":{},"body":{"controllers/FeedController.html":{},"injectables/JwtConfigService.html":{},"injectables/MongooseConfigService.html":{},"injectables/MulterConfigService.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["getfilename('material",{"_index":358,"title":{},"body":{"controllers/FeedController.html":{}}}],["getfilename('thumbnail",{"_index":357,"title":{},"body":{"controllers/FeedController.html":{}}}],["getfilename(file.originalname",{"_index":531,"title":{},"body":{"injectables/JwtConfigService.html":{},"injectables/MongooseConfigService.html":{},"injectables/MulterConfigService.html":{},"miscellaneous/variables.html":{}}}],["gethello",{"_index":9,"title":{},"body":{"controllers/AppController.html":{},"injectables/AppService.html":{},"interfaces/Todo.html":{}}}],["getprofile",{"_index":729,"title":{},"body":{"controllers/UserController.html":{}}}],["getprofile(@user",{"_index":768,"title":{},"body":{"controllers/UserController.html":{}}}],["getprofile(user",{"_index":736,"title":{},"body":{"controllers/UserController.html":{}}}],["getsum",{"_index":653,"title":{},"body":{"interfaces/QuestionnaireBody.html":{},"injectables/UserService.html":{}}}],["getsum(activistanswers",{"_index":659,"title":{},"body":{"interfaces/QuestionnaireBody.html":{},"injectables/UserService.html":{}}}],["getsum(pragmatistanswers",{"_index":661,"title":{},"body":{"interfaces/QuestionnaireBody.html":{},"injectables/UserService.html":{}}}],["getsum(reflectoranswers",{"_index":663,"title":{},"body":{"interfaces/QuestionnaireBody.html":{},"injectables/UserService.html":{}}}],["getsum(theoristanswers",{"_index":665,"title":{},"body":{"interfaces/QuestionnaireBody.html":{},"injectables/UserService.html":{}}}],["getting",{"_index":882,"title":{"index.html":{}},"body":{}}],["gettodos",{"_index":11,"title":{},"body":{"controllers/AppController.html":{},"injectables/AppService.html":{},"interfaces/Todo.html":{}}}],["grow",{"_index":916,"title":{},"body":{"index.html":{}}}],["guard",{"_index":687,"title":{"guards/RolesGaurd.html":{}},"body":{"coverage.html":{},"overview.html":{}}}],["guards",{"_index":689,"title":{},"body":{"guards/RolesGaurd.html":{}}}],["guards/roles.guard",{"_index":752,"title":{},"body":{"controllers/UserController.html":{}}}],["handlefilestorage",{"_index":312,"title":{},"body":{"controllers/FeedController.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["handlefilestorage.storage",{"_index":345,"title":{},"body":{"controllers/FeedController.html":{}}}],["handlerequest",{"_index":458,"title":{},"body":{"injectables/JwtAuthGuard.html":{}}}],["handlerequest(err",{"_index":463,"title":{},"body":{"injectables/JwtAuthGuard.html":{}}}],["handling",{"_index":526,"title":{},"body":{"injectables/JwtConfigService.html":{},"injectables/MongooseConfigService.html":{},"injectables/MulterConfigService.html":{}}}],["hash",{"_index":977,"title":{},"body":{"miscellaneous/variables.html":{}}}],["hashed",{"_index":979,"title":{},"body":{"miscellaneous/variables.html":{}}}],["hashpassword",{"_index":588,"title":{},"body":{"interfaces/QuestionnaireBody.html":{},"injectables/UserService.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["hashpassword(user.password",{"_index":621,"title":{},"body":{"interfaces/QuestionnaireBody.html":{},"injectables/UserService.html":{}}}],["hasnextpage",{"_index":211,"title":{},"body":{"interfaces/CollationDocument.html":{},"injectables/PaginateModel.html":{},"interfaces/PaginateModelArgs.html":{},"interfaces/PaginateOptions.html":{},"interfaces/PaginationResult.html":{},"interfaces/PopulateOptions.html":{}}}],["hasprevpage",{"_index":210,"title":{},"body":{"interfaces/CollationDocument.html":{},"injectables/PaginateModel.html":{},"interfaces/PaginateModelArgs.html":{},"interfaces/PaginateOptions.html":{},"interfaces/PaginationResult.html":{},"interfaces/PopulateOptions.html":{}}}],["hbs",{"_index":857,"title":{},"body":{"dependencies.html":{}}}],["hello",{"_index":52,"title":{},"body":{"controllers/AppController.html":{},"injectables/AppService.html":{},"interfaces/Todo.html":{}}}],["here",{"_index":926,"title":{},"body":{"index.html":{}}}],["httpmodule",{"_index":985,"title":{},"body":{"miscellaneous/variables.html":{}}}],["https://nestjs.com",{"_index":932,"title":{},"body":{"index.html":{}}}],["httpservice",{"_index":94,"title":{},"body":{"injectables/AppService.html":{},"interfaces/Todo.html":{}}}],["httpstatus",{"_index":466,"title":{},"body":{"injectables/JwtAuthGuard.html":{}}}],["httpstatus.unauthorized",{"_index":473,"title":{},"body":{"injectables/JwtAuthGuard.html":{}}}],["id",{"_index":107,"title":{},"body":{"injectables/AppService.html":{},"injectables/AuthService.html":{},"injectables/FeedService.html":{},"interfaces/IFeedController.html":{},"injectables/JwtStrategy.html":{},"interfaces/QuestionnaireBody.html":{},"interfaces/Todo.html":{},"injectables/UserService.html":{}}}],["identifier",{"_index":814,"title":{},"body":{"coverage.html":{}}}],["ifeedcontroller",{"_index":320,"title":{"interfaces/IFeedController.html":{}},"body":{"controllers/FeedController.html":{},"interfaces/IFeedController.html":{},"coverage.html":{}}}],["ifeedservice",{"_index":430,"title":{"interfaces/IFeedService.html":{}},"body":{"interfaces/IFeedService.html":{},"coverage.html":{}}}],["ignoreexpiration",{"_index":554,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["image",{"_index":242,"title":{},"body":{"interfaces/Course.html":{}}}],["implements",{"_index":254,"title":{},"body":{"classes/Feed.html":{},"controllers/FeedController.html":{},"classes/JoiValidationPipe.html":{},"injectables/JwtConfigService.html":{},"injectables/MongooseConfigService.html":{},"injectables/MulterConfigService.html":{},"guards/RolesGaurd.html":{},"classes/Student.html":{},"classes/Tutor.html":{}}}],["import",{"_index":30,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"interfaces/Author.html":{},"interfaces/CollationDocument.html":{},"interfaces/Course.html":{},"interfaces/CreateStudentDto.html":{},"interfaces/CreateTutorDto.html":{},"interfaces/CreateUserDto.html":{},"classes/Feed.html":{},"controllers/FeedController.html":{},"modules/FeedModule.html":{},"injectables/FeedService.html":{},"interfaces/FetchArg.html":{},"classes/JoiValidationPipe.html":{},"injectables/JwtAuthGuard.html":{},"injectables/JwtConfigService.html":{},"injectables/JwtStrategy.html":{},"interfaces/Learner.html":{},"injectables/LocalAuthGuard.html":{},"injectables/LocalStrategy.html":{},"classes/Material.html":{},"injectables/MongooseConfigService.html":{},"injectables/MulterConfigService.html":{},"injectables/PaginateModel.html":{},"interfaces/PaginateModelArgs.html":{},"interfaces/PaginateOptions.html":{},"interfaces/PaginationResult.html":{},"interfaces/PopulateOptions.html":{},"interfaces/QuestionnaireBody.html":{},"guards/RolesGaurd.html":{},"classes/Student.html":{},"interfaces/Todo.html":{},"classes/Tutor.html":{},"interfaces/User.html":{},"controllers/UserController.html":{},"modules/UserModule.html":{},"injectables/UserService.html":{}}}],["imports",{"_index":87,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/FeedModule.html":{},"modules/UserModule.html":{},"miscellaneous/variables.html":{}}}],["index",{"_index":7,"title":{"index.html":{}},"body":{"controllers/AppController.html":{},"injectables/AppService.html":{},"injectables/AuthService.html":{},"interfaces/Author.html":{},"interfaces/CollationDocument.html":{},"interfaces/Course.html":{},"interfaces/CreateFeedDTO.html":{},"interfaces/CreateUserDto.html":{},"classes/Feed.html":{},"controllers/FeedController.html":{},"injectables/FeedService.html":{},"interfaces/FetchArg.html":{},"interfaces/IFeedController.html":{},"interfaces/IFeedService.html":{},"classes/JoiValidationPipe.html":{},"injectables/JwtAuthGuard.html":{},"injectables/JwtConfigService.html":{},"injectables/JwtStrategy.html":{},"interfaces/Learner.html":{},"injectables/LocalStrategy.html":{},"classes/Material.html":{},"injectables/MongooseConfigService.html":{},"injectables/MulterConfigService.html":{},"injectables/PaginateModel.html":{},"interfaces/PaginateModelArgs.html":{},"interfaces/PaginateOptions.html":{},"interfaces/PaginationResult.html":{},"interfaces/PopulateOptions.html":{},"interfaces/QuestionnaireBody.html":{},"guards/RolesGaurd.html":{},"classes/Student.html":{},"interfaces/Todo.html":{},"classes/Tutor.html":{},"interfaces/User.html":{},"controllers/UserController.html":{},"injectables/UserService.html":{},"miscellaneous/functions.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["info",{"_index":3,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"interfaces/Author.html":{},"interfaces/CollationDocument.html":{},"interfaces/Course.html":{},"interfaces/CreateFeedDTO.html":{},"interfaces/CreateStudentDto.html":{},"interfaces/CreateTutorDto.html":{},"interfaces/CreateUserDto.html":{},"classes/Feed.html":{},"controllers/FeedController.html":{},"modules/FeedModule.html":{},"injectables/FeedService.html":{},"interfaces/FetchArg.html":{},"interfaces/IFeedController.html":{},"interfaces/IFeedService.html":{},"classes/JoiValidationPipe.html":{},"injectables/JwtAuthGuard.html":{},"injectables/JwtConfigService.html":{},"injectables/JwtStrategy.html":{},"interfaces/Learner.html":{},"injectables/LocalAuthGuard.html":{},"injectables/LocalStrategy.html":{},"classes/Material.html":{},"injectables/MongooseConfigService.html":{},"injectables/MulterConfigService.html":{},"injectables/PaginateModel.html":{},"interfaces/PaginateModelArgs.html":{},"interfaces/PaginateOptions.html":{},"interfaces/PaginationResult.html":{},"interfaces/PopulateOptions.html":{},"interfaces/QuestionnaireBody.html":{},"guards/RolesGaurd.html":{},"classes/Student.html":{},"interfaces/Todo.html":{},"classes/Tutor.html":{},"interfaces/User.html":{},"controllers/UserController.html":{},"modules/UserModule.html":{},"injectables/UserService.html":{}}}],["info.message",{"_index":475,"title":{},"body":{"injectables/JwtAuthGuard.html":{}}}],["injectable",{"_index":90,"title":{"injectables/AppService.html":{},"injectables/AuthService.html":{},"injectables/FeedService.html":{},"injectables/JwtAuthGuard.html":{},"injectables/JwtConfigService.html":{},"injectables/JwtStrategy.html":{},"injectables/LocalAuthGuard.html":{},"injectables/LocalStrategy.html":{},"injectables/MongooseConfigService.html":{},"injectables/MulterConfigService.html":{},"injectables/PaginateModel.html":{},"injectables/UserService.html":{}},"body":{"injectables/AppService.html":{},"injectables/AuthService.html":{},"interfaces/CollationDocument.html":{},"injectables/FeedService.html":{},"interfaces/FetchArg.html":{},"injectables/JwtAuthGuard.html":{},"injectables/JwtConfigService.html":{},"injectables/JwtStrategy.html":{},"injectables/LocalAuthGuard.html":{},"injectables/LocalStrategy.html":{},"injectables/MongooseConfigService.html":{},"injectables/MulterConfigService.html":{},"injectables/PaginateModel.html":{},"interfaces/PaginateModelArgs.html":{},"interfaces/PaginateOptions.html":{},"interfaces/PaginationResult.html":{},"interfaces/PopulateOptions.html":{},"interfaces/QuestionnaireBody.html":{},"guards/RolesGaurd.html":{},"interfaces/Todo.html":{},"injectables/UserService.html":{},"coverage.html":{}}}],["injectables",{"_index":91,"title":{},"body":{"injectables/AppService.html":{},"injectables/AuthService.html":{},"injectables/FeedService.html":{},"injectables/JwtAuthGuard.html":{},"injectables/JwtConfigService.html":{},"injectables/JwtStrategy.html":{},"injectables/LocalAuthGuard.html":{},"injectables/LocalStrategy.html":{},"injectables/MongooseConfigService.html":{},"injectables/MulterConfigService.html":{},"injectables/PaginateModel.html":{},"injectables/UserService.html":{},"overview.html":{}}}],["injectmodel",{"_index":402,"title":{},"body":{"injectables/FeedService.html":{},"interfaces/FetchArg.html":{},"interfaces/QuestionnaireBody.html":{},"injectables/UserService.html":{}}}],["injectmodel(feed.name",{"_index":403,"title":{},"body":{"injectables/FeedService.html":{},"interfaces/FetchArg.html":{}}}],["injectmodel(material.name",{"_index":597,"title":{},"body":{"interfaces/QuestionnaireBody.html":{},"injectables/UserService.html":{}}}],["injectmodel(student.name",{"_index":599,"title":{},"body":{"interfaces/QuestionnaireBody.html":{},"injectables/UserService.html":{}}}],["injectmodel(tutor.name",{"_index":601,"title":{},"body":{"interfaces/QuestionnaireBody.html":{},"injectables/UserService.html":{}}}],["installation",{"_index":896,"title":{},"body":{"index.html":{}}}],["installrunning",{"_index":898,"title":{},"body":{"index.html":{}}}],["interface",{"_index":103,"title":{"interfaces/Author.html":{},"interfaces/CollationDocument.html":{},"interfaces/Course.html":{},"interfaces/CreateFeedDTO.html":{},"interfaces/CreateStudentDto.html":{},"interfaces/CreateTutorDto.html":{},"interfaces/CreateUserDto.html":{},"interfaces/FetchArg.html":{},"interfaces/IFeedController.html":{},"interfaces/IFeedService.html":{},"interfaces/Learner.html":{},"interfaces/PaginateModelArgs.html":{},"interfaces/PaginateOptions.html":{},"interfaces/PaginationResult.html":{},"interfaces/PopulateOptions.html":{},"interfaces/QuestionnaireBody.html":{},"interfaces/Todo.html":{},"interfaces/User.html":{}},"body":{"injectables/AppService.html":{},"interfaces/Author.html":{},"interfaces/CollationDocument.html":{},"interfaces/Course.html":{},"interfaces/CreateFeedDTO.html":{},"interfaces/CreateStudentDto.html":{},"interfaces/CreateTutorDto.html":{},"interfaces/CreateUserDto.html":{},"injectables/FeedService.html":{},"interfaces/FetchArg.html":{},"interfaces/IFeedController.html":{},"interfaces/IFeedService.html":{},"interfaces/Learner.html":{},"classes/Material.html":{},"injectables/PaginateModel.html":{},"interfaces/PaginateModelArgs.html":{},"interfaces/PaginateOptions.html":{},"interfaces/PaginationResult.html":{},"interfaces/PopulateOptions.html":{},"interfaces/QuestionnaireBody.html":{},"interfaces/Todo.html":{},"interfaces/User.html":{},"injectables/UserService.html":{},"coverage.html":{}}}],["interfaces",{"_index":168,"title":{},"body":{"interfaces/Author.html":{},"interfaces/CollationDocument.html":{},"interfaces/Course.html":{},"interfaces/CreateFeedDTO.html":{},"interfaces/CreateStudentDto.html":{},"interfaces/CreateTutorDto.html":{},"interfaces/CreateUserDto.html":{},"interfaces/FetchArg.html":{},"interfaces/IFeedController.html":{},"interfaces/IFeedService.html":{},"interfaces/Learner.html":{},"interfaces/PaginateModelArgs.html":{},"interfaces/PaginateOptions.html":{},"interfaces/PaginationResult.html":{},"interfaces/PopulateOptions.html":{},"interfaces/QuestionnaireBody.html":{},"interfaces/Todo.html":{},"interfaces/User.html":{},"overview.html":{}}}],["interfaces/feed",{"_index":321,"title":{},"body":{"controllers/FeedController.html":{}}}],["isemail",{"_index":610,"title":{},"body":{"interfaces/QuestionnaireBody.html":{},"injectables/UserService.html":{}}}],["isglobal",{"_index":964,"title":{},"body":{"miscellaneous/variables.html":{}}}],["isstudent",{"_index":157,"title":{},"body":{"injectables/AuthService.html":{},"interfaces/Author.html":{},"injectables/JwtStrategy.html":{},"interfaces/Learner.html":{},"interfaces/QuestionnaireBody.html":{},"classes/Student.html":{},"classes/Tutor.html":{},"interfaces/User.html":{},"controllers/UserController.html":{},"injectables/UserService.html":{},"miscellaneous/variables.html":{}}}],["joi",{"_index":444,"title":{},"body":{"classes/JoiValidationPipe.html":{},"dependencies.html":{}}}],["joi.array().allow(null",{"_index":973,"title":{},"body":{"miscellaneous/variables.html":{}}}],["joi.boolean().required",{"_index":971,"title":{},"body":{"miscellaneous/variables.html":{}}}],["joi.boolean().required().only().allow(false",{"_index":972,"title":{},"body":{"miscellaneous/variables.html":{}}}],["joi.object().keys",{"_index":966,"title":{},"body":{"miscellaneous/variables.html":{}}}],["joi.string().allow",{"_index":970,"title":{},"body":{"miscellaneous/variables.html":{}}}],["joi.string().email().required",{"_index":968,"title":{},"body":{"miscellaneous/variables.html":{}}}],["joi.string().min(6).required",{"_index":969,"title":{},"body":{"miscellaneous/variables.html":{}}}],["joi.string().required",{"_index":967,"title":{},"body":{"miscellaneous/variables.html":{}}}],["join",{"_index":923,"title":{},"body":{"index.html":{}}}],["joivalidationpipe",{"_index":314,"title":{"classes/JoiValidationPipe.html":{}},"body":{"controllers/FeedController.html":{},"classes/JoiValidationPipe.html":{},"controllers/UserController.html":{},"coverage.html":{}}}],["joivalidationpipe())@useinterceptors(undefined",{"_index":296,"title":{},"body":{"controllers/FeedController.html":{}}}],["joivalidationpipe(createfeedschema",{"_index":342,"title":{},"body":{"controllers/FeedController.html":{}}}],["joivalidationpipe(createstudentschema",{"_index":773,"title":{},"body":{"controllers/UserController.html":{}}}],["joivalidationpipe(createtutorschema",{"_index":780,"title":{},"body":{"controllers/UserController.html":{}}}],["jwt",{"_index":534,"title":{},"body":{"injectables/JwtConfigService.html":{},"injectables/JwtStrategy.html":{},"injectables/MongooseConfigService.html":{},"injectables/MulterConfigService.html":{},"dependencies.html":{}}}],["jwt.strategy",{"_index":130,"title":{},"body":{"modules/AuthModule.html":{}}}],["jwtauthguard",{"_index":454,"title":{"injectables/JwtAuthGuard.html":{}},"body":{"injectables/JwtAuthGuard.html":{},"controllers/UserController.html":{},"coverage.html":{}}}],["jwtconfigservice",{"_index":126,"title":{"injectables/JwtConfigService.html":{}},"body":{"modules/AuthModule.html":{},"injectables/JwtConfigService.html":{},"injectables/MongooseConfigService.html":{},"injectables/MulterConfigService.html":{},"coverage.html":{}}}],["jwtfromrequest",{"_index":552,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["jwtmodule",{"_index":122,"title":{},"body":{"modules/AuthModule.html":{}}}],["jwtmodule.registerasync",{"_index":132,"title":{},"body":{"modules/AuthModule.html":{}}}],["jwtmoduleoptions",{"_index":483,"title":{},"body":{"injectables/JwtConfigService.html":{},"injectables/MongooseConfigService.html":{},"injectables/MulterConfigService.html":{}}}],["jwtoptionsfactory",{"_index":493,"title":{},"body":{"injectables/JwtConfigService.html":{},"injectables/MongooseConfigService.html":{},"injectables/MulterConfigService.html":{}}}],["jwtsecret",{"_index":506,"title":{},"body":{"injectables/JwtConfigService.html":{},"injectables/MongooseConfigService.html":{},"injectables/MulterConfigService.html":{}}}],["jwtservice",{"_index":137,"title":{},"body":{"injectables/AuthService.html":{}}}],["jwtstrategy",{"_index":117,"title":{"injectables/JwtStrategy.html":{}},"body":{"modules/AuthModule.html":{},"injectables/JwtStrategy.html":{},"coverage.html":{},"overview.html":{}}}],["kamil",{"_index":929,"title":{},"body":{"index.html":{}}}],["lastname",{"_index":177,"title":{},"body":{"interfaces/Author.html":{},"interfaces/CreateStudentDto.html":{},"interfaces/CreateTutorDto.html":{},"interfaces/CreateUserDto.html":{},"interfaces/Learner.html":{},"classes/Student.html":{},"classes/Tutor.html":{},"interfaces/User.html":{},"controllers/UserController.html":{},"miscellaneous/variables.html":{}}}],["learner",{"_index":179,"title":{"interfaces/Learner.html":{}},"body":{"interfaces/Author.html":{},"interfaces/CreateStudentDto.html":{},"interfaces/CreateTutorDto.html":{},"interfaces/CreateUserDto.html":{},"interfaces/Learner.html":{},"classes/Student.html":{},"interfaces/User.html":{},"coverage.html":{}}}],["learningstyle",{"_index":161,"title":{},"body":{"injectables/AuthService.html":{},"interfaces/Author.html":{},"interfaces/Course.html":{},"interfaces/CreateFeedDTO.html":{},"classes/Feed.html":{},"controllers/FeedController.html":{},"injectables/FeedService.html":{},"interfaces/FetchArg.html":{},"interfaces/IFeedController.html":{},"interfaces/Learner.html":{},"interfaces/QuestionnaireBody.html":{},"classes/Student.html":{},"interfaces/User.html":{},"controllers/UserController.html":{},"injectables/UserService.html":{},"miscellaneous/variables.html":{}}}],["learningstyle.push('activist",{"_index":676,"title":{},"body":{"interfaces/QuestionnaireBody.html":{},"injectables/UserService.html":{}}}],["learningstyle.push('pragmatist",{"_index":677,"title":{},"body":{"interfaces/QuestionnaireBody.html":{},"injectables/UserService.html":{}}}],["learningstyle.push('reflector",{"_index":678,"title":{},"body":{"interfaces/QuestionnaireBody.html":{},"injectables/UserService.html":{}}}],["learningstyle.push('theorist",{"_index":679,"title":{},"body":{"interfaces/QuestionnaireBody.html":{},"injectables/UserService.html":{}}}],["learningstyle.push(learningstyles[index",{"_index":682,"title":{},"body":{"interfaces/QuestionnaireBody.html":{},"injectables/UserService.html":{}}}],["learningstyles",{"_index":667,"title":{},"body":{"interfaces/QuestionnaireBody.html":{},"injectables/UserService.html":{}}}],["learningstyles[index",{"_index":683,"title":{},"body":{"interfaces/QuestionnaireBody.html":{},"injectables/UserService.html":{}}}],["legend",{"_index":72,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/FeedModule.html":{},"modules/UserModule.html":{},"overview.html":{}}}],["level",{"_index":180,"title":{},"body":{"interfaces/Author.html":{},"interfaces/Course.html":{},"interfaces/CreateFeedDTO.html":{},"classes/Feed.html":{},"injectables/FeedService.html":{},"interfaces/FetchArg.html":{},"interfaces/Learner.html":{},"classes/Student.html":{},"interfaces/User.html":{},"controllers/UserController.html":{},"miscellaneous/variables.html":{}}}],["license",{"_index":935,"title":{},"body":{"index.html":{}}}],["licensed",{"_index":913,"title":{},"body":{"index.html":{}}}],["limit",{"_index":203,"title":{},"body":{"interfaces/CollationDocument.html":{},"injectables/PaginateModel.html":{},"interfaces/PaginateModelArgs.html":{},"interfaces/PaginateOptions.html":{},"interfaces/PaginationResult.html":{},"interfaces/PopulateOptions.html":{}}}],["line",{"_index":448,"title":{},"body":{"classes/JoiValidationPipe.html":{}}}],["literal",{"_index":286,"title":{},"body":{"controllers/FeedController.html":{},"interfaces/PaginateModelArgs.html":{},"interfaces/QuestionnaireBody.html":{},"injectables/UserService.html":{},"miscellaneous/typealiases.html":{}}}],["load",{"_index":965,"title":{},"body":{"miscellaneous/variables.html":{}}}],["local",{"_index":565,"title":{},"body":{"injectables/LocalStrategy.html":{},"dependencies.html":{}}}],["local.strategy",{"_index":131,"title":{},"body":{"modules/AuthModule.html":{}}}],["localauthguard",{"_index":38,"title":{"injectables/LocalAuthGuard.html":{}},"body":{"controllers/AppController.html":{},"injectables/LocalAuthGuard.html":{},"coverage.html":{}}}],["locale",{"_index":187,"title":{},"body":{"interfaces/CollationDocument.html":{},"injectables/PaginateModel.html":{},"interfaces/PaginateModelArgs.html":{},"interfaces/PaginateOptions.html":{},"interfaces/PaginationResult.html":{},"interfaces/PopulateOptions.html":{}}}],["localstrategy",{"_index":118,"title":{"injectables/LocalStrategy.html":{}},"body":{"modules/AuthModule.html":{},"injectables/LocalStrategy.html":{},"coverage.html":{},"overview.html":{}}}],["lodash",{"_index":492,"title":{},"body":{"injectables/JwtConfigService.html":{},"injectables/MongooseConfigService.html":{},"injectables/MulterConfigService.html":{},"dependencies.html":{}}}],["login",{"_index":12,"title":{},"body":{"controllers/AppController.html":{},"injectables/AuthService.html":{}}}],["login(@request",{"_index":56,"title":{},"body":{"controllers/AppController.html":{}}}],["login(req",{"_index":23,"title":{},"body":{"controllers/AppController.html":{}}}],["login(user",{"_index":139,"title":{},"body":{"injectables/AuthService.html":{}}}],["ls",{"_index":330,"title":{},"body":{"controllers/FeedController.html":{}}}],["match",{"_index":198,"title":{},"body":{"interfaces/CollationDocument.html":{},"injectables/PaginateModel.html":{},"interfaces/PaginateModelArgs.html":{},"interfaces/PaginateOptions.html":{},"interfaces/PaginationResult.html":{},"interfaces/PopulateOptions.html":{},"miscellaneous/variables.html":{}}}],["matching",{"_index":66,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"interfaces/Author.html":{},"interfaces/CollationDocument.html":{},"interfaces/Course.html":{},"interfaces/CreateFeedDTO.html":{},"interfaces/CreateStudentDto.html":{},"interfaces/CreateTutorDto.html":{},"interfaces/CreateUserDto.html":{},"classes/Feed.html":{},"controllers/FeedController.html":{},"modules/FeedModule.html":{},"injectables/FeedService.html":{},"interfaces/FetchArg.html":{},"interfaces/IFeedController.html":{},"interfaces/IFeedService.html":{},"classes/JoiValidationPipe.html":{},"injectables/JwtAuthGuard.html":{},"injectables/JwtConfigService.html":{},"injectables/JwtStrategy.html":{},"interfaces/Learner.html":{},"injectables/LocalAuthGuard.html":{},"injectables/LocalStrategy.html":{},"classes/Material.html":{},"injectables/MongooseConfigService.html":{},"injectables/MulterConfigService.html":{},"injectables/PaginateModel.html":{},"interfaces/PaginateModelArgs.html":{},"interfaces/PaginateOptions.html":{},"interfaces/PaginationResult.html":{},"interfaces/PopulateOptions.html":{},"interfaces/QuestionnaireBody.html":{},"guards/RolesGaurd.html":{},"classes/Student.html":{},"interfaces/Todo.html":{},"classes/Tutor.html":{},"interfaces/User.html":{},"controllers/UserController.html":{},"modules/UserModule.html":{},"injectables/UserService.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/functions.html":{},"index.html":{},"modules.html":{},"overview.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["material",{"_index":236,"title":{"classes/Material.html":{}},"body":{"interfaces/Course.html":{},"interfaces/CreateFeedDTO.html":{},"classes/Feed.html":{},"controllers/FeedController.html":{},"classes/Material.html":{},"interfaces/QuestionnaireBody.html":{},"modules/UserModule.html":{},"injectables/UserService.html":{},"coverage.html":{}}}],["material.name",{"_index":796,"title":{},"body":{"modules/UserModule.html":{},"miscellaneous/variables.html":{}}}],["materialdocument",{"_index":576,"title":{},"body":{"classes/Material.html":{},"interfaces/QuestionnaireBody.html":{},"injectables/UserService.html":{},"miscellaneous/typealiases.html":{}}}],["materialmodel",{"_index":598,"title":{},"body":{"interfaces/QuestionnaireBody.html":{},"injectables/UserService.html":{}}}],["materialschema",{"_index":578,"title":{},"body":{"classes/Material.html":{},"modules/UserModule.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["maxcount",{"_index":343,"title":{},"body":{"controllers/FeedController.html":{}}}],["maxvariable",{"_index":188,"title":{},"body":{"interfaces/CollationDocument.html":{},"injectables/PaginateModel.html":{},"interfaces/PaginateModelArgs.html":{},"interfaces/PaginateOptions.html":{},"interfaces/PaginationResult.html":{},"interfaces/PopulateOptions.html":{}}}],["message",{"_index":19,"title":{},"body":{"controllers/AppController.html":{},"injectables/JwtAuthGuard.html":{}}}],["metadata",{"_index":440,"title":{},"body":{"classes/JoiValidationPipe.html":{},"dependencies.html":{}}}],["methods",{"_index":8,"title":{},"body":{"controllers/AppController.html":{},"injectables/AppService.html":{},"injectables/AuthService.html":{},"controllers/FeedController.html":{},"injectables/FeedService.html":{},"classes/JoiValidationPipe.html":{},"injectables/JwtAuthGuard.html":{},"injectables/JwtConfigService.html":{},"injectables/JwtStrategy.html":{},"injectables/LocalStrategy.html":{},"injectables/MongooseConfigService.html":{},"injectables/MulterConfigService.html":{},"injectables/PaginateModel.html":{},"guards/RolesGaurd.html":{},"controllers/UserController.html":{},"injectables/UserService.html":{}}}],["miscellaneous",{"_index":878,"title":{"miscellaneous/functions.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}},"body":{"miscellaneous/functions.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["mit",{"_index":912,"title":{},"body":{"index.html":{}}}],["mode",{"_index":903,"title":{},"body":{"index.html":{}}}],["model",{"_index":193,"title":{},"body":{"interfaces/CollationDocument.html":{},"injectables/FeedService.html":{},"interfaces/FetchArg.html":{},"injectables/PaginateModel.html":{},"interfaces/PaginateModelArgs.html":{},"interfaces/PaginateOptions.html":{},"interfaces/PaginationResult.html":{},"interfaces/PopulateOptions.html":{},"interfaces/QuestionnaireBody.html":{},"injectables/UserService.html":{}}}],["model.countdocuments().exec",{"_index":229,"title":{},"body":{"interfaces/CollationDocument.html":{},"injectables/PaginateModel.html":{},"interfaces/PaginateModelArgs.html":{},"interfaces/PaginateOptions.html":{},"interfaces/PaginationResult.html":{},"interfaces/PopulateOptions.html":{}}}],["modeldefinition",{"_index":369,"title":{},"body":{"modules/FeedModule.html":{},"modules/UserModule.html":{},"miscellaneous/variables.html":{}}}],["models",{"_index":374,"title":{},"body":{"modules/FeedModule.html":{},"modules/UserModule.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["module",{"_index":68,"title":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/FeedModule.html":{},"modules/UserModule.html":{}},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/FeedModule.html":{},"modules/UserModule.html":{},"overview.html":{}}}],["modules",{"_index":70,"title":{"modules.html":{}},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/FeedModule.html":{},"modules/UserModule.html":{},"coverage.html":{},"modules.html":{},"overview.html":{},"miscellaneous/variables.html":{}}}],["mongodb",{"_index":516,"title":{},"body":{"injectables/JwtConfigService.html":{},"injectables/MongooseConfigService.html":{},"injectables/MulterConfigService.html":{}}}],["mongoose",{"_index":194,"title":{},"body":{"interfaces/CollationDocument.html":{},"classes/Feed.html":{},"injectables/FeedService.html":{},"interfaces/FetchArg.html":{},"injectables/JwtConfigService.html":{},"classes/Material.html":{},"injectables/MongooseConfigService.html":{},"injectables/MulterConfigService.html":{},"injectables/PaginateModel.html":{},"interfaces/PaginateModelArgs.html":{},"interfaces/PaginateOptions.html":{},"interfaces/PaginationResult.html":{},"interfaces/PopulateOptions.html":{},"interfaces/QuestionnaireBody.html":{},"classes/Student.html":{},"classes/Tutor.html":{},"injectables/UserService.html":{},"dependencies.html":{}}}],["mongoose.schema.types.objectid",{"_index":721,"title":{},"body":{"classes/Tutor.html":{}}}],["mongooseconfigservice",{"_index":512,"title":{"injectables/MongooseConfigService.html":{}},"body":{"injectables/JwtConfigService.html":{},"injectables/MongooseConfigService.html":{},"injectables/MulterConfigService.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["mongoosemodelfactories",{"_index":825,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["mongoosemodule",{"_index":370,"title":{},"body":{"modules/FeedModule.html":{},"modules/UserModule.html":{}}}],["mongoosemodule.forfeature(models",{"_index":376,"title":{},"body":{"modules/FeedModule.html":{},"modules/UserModule.html":{}}}],["mongoosemodule.forfeatureasync(mongoosemodelfactories",{"_index":983,"title":{},"body":{"miscellaneous/variables.html":{}}}],["mongoosemodule.forrootasync",{"_index":982,"title":{},"body":{"miscellaneous/variables.html":{}}}],["mongoosemoduleoptions",{"_index":484,"title":{},"body":{"injectables/JwtConfigService.html":{},"injectables/MongooseConfigService.html":{},"injectables/MulterConfigService.html":{}}}],["mongooseoptionsfactory",{"_index":485,"title":{},"body":{"injectables/JwtConfigService.html":{},"injectables/MongooseConfigService.html":{},"injectables/MulterConfigService.html":{}}}],["more",{"_index":925,"title":{},"body":{"index.html":{}}}],["multer",{"_index":489,"title":{},"body":{"injectables/JwtConfigService.html":{},"injectables/MongooseConfigService.html":{},"injectables/MulterConfigService.html":{}}}],["multerconfigservice",{"_index":525,"title":{"injectables/MulterConfigService.html":{}},"body":{"injectables/JwtConfigService.html":{},"injectables/MongooseConfigService.html":{},"injectables/MulterConfigService.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["multermodule.registerasync",{"_index":984,"title":{},"body":{"miscellaneous/variables.html":{}}}],["multermoduleoptions",{"_index":486,"title":{},"body":{"injectables/JwtConfigService.html":{},"injectables/MongooseConfigService.html":{},"injectables/MulterConfigService.html":{}}}],["multeroptionsfactory",{"_index":487,"title":{},"body":{"injectables/JwtConfigService.html":{},"injectables/MongooseConfigService.html":{},"injectables/MulterConfigService.html":{}}}],["myśliwiec",{"_index":930,"title":{},"body":{"index.html":{}}}],["name",{"_index":27,"title":{},"body":{"controllers/AppController.html":{},"injectables/AppService.html":{},"injectables/AuthService.html":{},"controllers/FeedController.html":{},"modules/FeedModule.html":{},"injectables/FeedService.html":{},"classes/JoiValidationPipe.html":{},"injectables/JwtAuthGuard.html":{},"injectables/JwtConfigService.html":{},"injectables/JwtStrategy.html":{},"injectables/LocalStrategy.html":{},"injectables/MongooseConfigService.html":{},"injectables/MulterConfigService.html":{},"injectables/PaginateModel.html":{},"guards/RolesGaurd.html":{},"controllers/UserController.html":{},"modules/UserModule.html":{},"injectables/UserService.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["name}${extname(file.originalname",{"_index":533,"title":{},"body":{"injectables/JwtConfigService.html":{},"injectables/MongooseConfigService.html":{},"injectables/MulterConfigService.html":{},"miscellaneous/variables.html":{}}}],["nest",{"_index":893,"title":{},"body":{"index.html":{}}}],["nestframework",{"_index":934,"title":{},"body":{"index.html":{}}}],["nestjs/common",{"_index":35,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"interfaces/CollationDocument.html":{},"controllers/FeedController.html":{},"modules/FeedModule.html":{},"injectables/FeedService.html":{},"interfaces/FetchArg.html":{},"classes/JoiValidationPipe.html":{},"injectables/JwtAuthGuard.html":{},"injectables/JwtConfigService.html":{},"injectables/JwtStrategy.html":{},"injectables/LocalAuthGuard.html":{},"injectables/LocalStrategy.html":{},"injectables/MongooseConfigService.html":{},"injectables/MulterConfigService.html":{},"injectables/PaginateModel.html":{},"interfaces/PaginateModelArgs.html":{},"interfaces/PaginateOptions.html":{},"interfaces/PaginationResult.html":{},"interfaces/PopulateOptions.html":{},"interfaces/QuestionnaireBody.html":{},"guards/RolesGaurd.html":{},"interfaces/Todo.html":{},"controllers/UserController.html":{},"modules/UserModule.html":{},"injectables/UserService.html":{},"dependencies.html":{}}}],["nestjs/config",{"_index":121,"title":{},"body":{"modules/AuthModule.html":{},"controllers/FeedController.html":{},"injectables/JwtConfigService.html":{},"injectables/JwtStrategy.html":{},"injectables/MongooseConfigService.html":{},"injectables/MulterConfigService.html":{},"dependencies.html":{}}}],["nestjs/core",{"_index":846,"title":{},"body":{"dependencies.html":{}}}],["nestjs/jwt",{"_index":123,"title":{},"body":{"modules/AuthModule.html":{},"injectables/AuthService.html":{},"injectables/JwtConfigService.html":{},"injectables/MongooseConfigService.html":{},"injectables/MulterConfigService.html":{},"dependencies.html":{}}}],["nestjs/mongoose",{"_index":272,"title":{},"body":{"classes/Feed.html":{},"modules/FeedModule.html":{},"injectables/FeedService.html":{},"interfaces/FetchArg.html":{},"injectables/JwtConfigService.html":{},"classes/Material.html":{},"injectables/MongooseConfigService.html":{},"injectables/MulterConfigService.html":{},"interfaces/QuestionnaireBody.html":{},"classes/Student.html":{},"classes/Tutor.html":{},"modules/UserModule.html":{},"injectables/UserService.html":{},"dependencies.html":{}}}],["nestjs/passport",{"_index":125,"title":{},"body":{"modules/AuthModule.html":{},"injectables/JwtAuthGuard.html":{},"injectables/JwtStrategy.html":{},"injectables/LocalAuthGuard.html":{},"injectables/LocalStrategy.html":{},"dependencies.html":{}}}],["nestjs/platform",{"_index":310,"title":{},"body":{"controllers/FeedController.html":{},"injectables/JwtConfigService.html":{},"injectables/MongooseConfigService.html":{},"injectables/MulterConfigService.html":{},"dependencies.html":{}}}],["nestjs/serve",{"_index":850,"title":{},"body":{"dependencies.html":{}}}],["nestjs/swagger",{"_index":853,"title":{},"body":{"dependencies.html":{}}}],["new",{"_index":351,"title":{},"body":{"controllers/FeedController.html":{},"injectables/FeedService.html":{},"interfaces/FetchArg.html":{},"classes/JoiValidationPipe.html":{},"injectables/JwtAuthGuard.html":{},"injectables/LocalStrategy.html":{},"interfaces/QuestionnaireBody.html":{},"controllers/UserController.html":{},"injectables/UserService.html":{},"coverage.html":{}}}],["newfeed",{"_index":283,"title":{},"body":{"controllers/FeedController.html":{},"injectables/FeedService.html":{},"interfaces/FetchArg.html":{}}}],["newfeed(body",{"_index":293,"title":{},"body":{"controllers/FeedController.html":{}}}],["newfeed.save",{"_index":422,"title":{},"body":{"injectables/FeedService.html":{},"interfaces/FetchArg.html":{}}}],["newfile",{"_index":635,"title":{},"body":{"interfaces/QuestionnaireBody.html":{},"injectables/UserService.html":{}}}],["newuser",{"_index":626,"title":{},"body":{"interfaces/QuestionnaireBody.html":{},"injectables/UserService.html":{}}}],["newuser.save",{"_index":629,"title":{},"body":{"interfaces/QuestionnaireBody.html":{},"injectables/UserService.html":{}}}],["next",{"_index":447,"title":{},"body":{"classes/JoiValidationPipe.html":{}}}],["nextpage",{"_index":214,"title":{},"body":{"interfaces/CollationDocument.html":{},"injectables/PaginateModel.html":{},"interfaces/PaginateModelArgs.html":{},"interfaces/PaginateOptions.html":{},"interfaces/PaginationResult.html":{},"interfaces/PopulateOptions.html":{}}}],["node.js",{"_index":885,"title":{},"body":{"index.html":{}}}],["notfoundexception",{"_index":745,"title":{},"body":{"controllers/UserController.html":{}}}],["notfoundexception(err.message",{"_index":771,"title":{},"body":{"controllers/UserController.html":{}}}],["npm",{"_index":897,"title":{},"body":{"index.html":{}}}],["null",{"_index":163,"title":{},"body":{"injectables/AuthService.html":{},"interfaces/CollationDocument.html":{},"injectables/FeedService.html":{},"interfaces/FetchArg.html":{},"injectables/PaginateModel.html":{},"interfaces/PaginateModelArgs.html":{},"interfaces/PaginateOptions.html":{},"interfaces/PaginationResult.html":{},"interfaces/PopulateOptions.html":{},"interfaces/QuestionnaireBody.html":{},"injectables/UserService.html":{}}}],["number",{"_index":106,"title":{},"body":{"injectables/AppService.html":{},"interfaces/CollationDocument.html":{},"injectables/FeedService.html":{},"interfaces/FetchArg.html":{},"injectables/PaginateModel.html":{},"interfaces/PaginateModelArgs.html":{},"interfaces/PaginateOptions.html":{},"interfaces/PaginationResult.html":{},"interfaces/PopulateOptions.html":{},"interfaces/QuestionnaireBody.html":{},"interfaces/Todo.html":{},"injectables/UserService.html":{}}}],["number(i",{"_index":640,"title":{},"body":{"interfaces/QuestionnaireBody.html":{},"injectables/UserService.html":{}}}],["numericordering",{"_index":189,"title":{},"body":{"interfaces/CollationDocument.html":{},"injectables/PaginateModel.html":{},"interfaces/PaginateModelArgs.html":{},"interfaces/PaginateOptions.html":{},"interfaces/PaginationResult.html":{},"interfaces/PopulateOptions.html":{}}}],["object",{"_index":200,"title":{},"body":{"interfaces/CollationDocument.html":{},"injectables/PaginateModel.html":{},"interfaces/PaginateModelArgs.html":{},"interfaces/PaginateOptions.html":{},"interfaces/PaginationResult.html":{},"interfaces/PopulateOptions.html":{},"miscellaneous/variables.html":{}}}],["objectschema",{"_index":437,"title":{},"body":{"classes/JoiValidationPipe.html":{}}}],["observable",{"_index":99,"title":{},"body":{"injectables/AppService.html":{},"guards/RolesGaurd.html":{},"interfaces/Todo.html":{}}}],["occured",{"_index":476,"title":{},"body":{"injectables/JwtAuthGuard.html":{}}}],["omit",{"_index":754,"title":{},"body":{"controllers/UserController.html":{},"miscellaneous/functions.html":{}}}],["open",{"_index":914,"title":{},"body":{"index.html":{}}}],["optional",{"_index":28,"title":{},"body":{"controllers/AppController.html":{},"injectables/AppService.html":{},"injectables/AuthService.html":{},"interfaces/Author.html":{},"controllers/FeedController.html":{},"injectables/FeedService.html":{},"interfaces/FetchArg.html":{},"classes/JoiValidationPipe.html":{},"injectables/JwtAuthGuard.html":{},"injectables/JwtConfigService.html":{},"injectables/JwtStrategy.html":{},"interfaces/Learner.html":{},"injectables/LocalStrategy.html":{},"injectables/MongooseConfigService.html":{},"injectables/MulterConfigService.html":{},"injectables/PaginateModel.html":{},"interfaces/PaginateModelArgs.html":{},"interfaces/PaginateOptions.html":{},"guards/RolesGaurd.html":{},"interfaces/User.html":{},"controllers/UserController.html":{},"injectables/UserService.html":{},"miscellaneous/functions.html":{}}}],["options",{"_index":217,"title":{},"body":{"interfaces/CollationDocument.html":{},"injectables/FeedService.html":{},"interfaces/FetchArg.html":{},"injectables/JwtConfigService.html":{},"injectables/MongooseConfigService.html":{},"injectables/MulterConfigService.html":{},"injectables/PaginateModel.html":{},"interfaces/PaginateModelArgs.html":{},"interfaces/PaginateOptions.html":{},"interfaces/PaginationResult.html":{},"interfaces/PopulateOptions.html":{}}}],["othernames",{"_index":570,"title":{},"body":{"classes/Material.html":{}}}],["out",{"_index":85,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/FeedModule.html":{},"modules/UserModule.html":{},"overview.html":{}}}],["overview",{"_index":939,"title":{"overview.html":{}},"body":{"overview.html":{}}}],["package",{"_index":843,"title":{"dependencies.html":{}},"body":{}}],["page",{"_index":202,"title":{},"body":{"interfaces/CollationDocument.html":{},"controllers/FeedController.html":{},"injectables/FeedService.html":{},"interfaces/FetchArg.html":{},"injectables/PaginateModel.html":{},"interfaces/PaginateModelArgs.html":{},"interfaces/PaginateOptions.html":{},"interfaces/PaginationResult.html":{},"interfaces/PopulateOptions.html":{}}}],["paginate",{"_index":378,"title":{},"body":{"injectables/FeedService.html":{},"interfaces/FetchArg.html":{},"injectables/PaginateModel.html":{}}}],["paginate(args",{"_index":220,"title":{},"body":{"interfaces/CollationDocument.html":{},"injectables/PaginateModel.html":{},"interfaces/PaginateModelArgs.html":{},"interfaces/PaginateOptions.html":{},"interfaces/PaginationResult.html":{},"interfaces/PopulateOptions.html":{}}}],["paginatemodel",{"_index":218,"title":{"injectables/PaginateModel.html":{}},"body":{"interfaces/CollationDocument.html":{},"modules/FeedModule.html":{},"injectables/FeedService.html":{},"interfaces/FetchArg.html":{},"injectables/PaginateModel.html":{},"interfaces/PaginateModelArgs.html":{},"interfaces/PaginateOptions.html":{},"interfaces/PaginationResult.html":{},"interfaces/PopulateOptions.html":{},"coverage.html":{},"overview.html":{}}}],["paginatemodelargs",{"_index":215,"title":{"interfaces/PaginateModelArgs.html":{}},"body":{"interfaces/CollationDocument.html":{},"injectables/PaginateModel.html":{},"interfaces/PaginateModelArgs.html":{},"interfaces/PaginateOptions.html":{},"interfaces/PaginationResult.html":{},"interfaces/PopulateOptions.html":{},"coverage.html":{}}}],["paginateoptions",{"_index":199,"title":{"interfaces/PaginateOptions.html":{}},"body":{"interfaces/CollationDocument.html":{},"injectables/PaginateModel.html":{},"interfaces/PaginateModelArgs.html":{},"interfaces/PaginateOptions.html":{},"interfaces/PaginationResult.html":{},"interfaces/PopulateOptions.html":{},"coverage.html":{}}}],["pagination",{"_index":204,"title":{},"body":{"interfaces/CollationDocument.html":{},"injectables/PaginateModel.html":{},"interfaces/PaginateModelArgs.html":{},"interfaces/PaginateOptions.html":{},"interfaces/PaginationResult.html":{},"interfaces/PopulateOptions.html":{}}}],["paginationresult",{"_index":207,"title":{"interfaces/PaginationResult.html":{}},"body":{"interfaces/CollationDocument.html":{},"injectables/PaginateModel.html":{},"interfaces/PaginateModelArgs.html":{},"interfaces/PaginateOptions.html":{},"interfaces/PaginationResult.html":{},"interfaces/PopulateOptions.html":{},"coverage.html":{}}}],["param",{"_index":304,"title":{},"body":{"controllers/FeedController.html":{}}}],["parameters",{"_index":26,"title":{},"body":{"controllers/AppController.html":{},"injectables/AppService.html":{},"injectables/AuthService.html":{},"controllers/FeedController.html":{},"injectables/FeedService.html":{},"classes/JoiValidationPipe.html":{},"injectables/JwtAuthGuard.html":{},"injectables/JwtConfigService.html":{},"injectables/JwtStrategy.html":{},"injectables/LocalStrategy.html":{},"injectables/MongooseConfigService.html":{},"injectables/MulterConfigService.html":{},"injectables/PaginateModel.html":{},"guards/RolesGaurd.html":{},"controllers/UserController.html":{},"injectables/UserService.html":{},"miscellaneous/functions.html":{}}}],["params",{"_index":289,"title":{},"body":{"controllers/FeedController.html":{},"interfaces/IFeedController.html":{}}}],["parseint(process.env.port",{"_index":497,"title":{},"body":{"injectables/JwtConfigService.html":{},"injectables/MongooseConfigService.html":{},"injectables/MulterConfigService.html":{}}}],["parseint(queries.page",{"_index":334,"title":{},"body":{"controllers/FeedController.html":{}}}],["pass",{"_index":143,"title":{},"body":{"injectables/AuthService.html":{}}}],["passport",{"_index":549,"title":{},"body":{"injectables/JwtStrategy.html":{},"injectables/LocalStrategy.html":{},"dependencies.html":{}}}],["passportmodule",{"_index":124,"title":{},"body":{"modules/AuthModule.html":{}}}],["passportstrategy",{"_index":546,"title":{},"body":{"injectables/JwtStrategy.html":{},"injectables/LocalStrategy.html":{}}}],["passportstrategy(strategy",{"_index":550,"title":{},"body":{"injectables/JwtStrategy.html":{},"injectables/LocalStrategy.html":{}}}],["password",{"_index":178,"title":{},"body":{"interfaces/Author.html":{},"interfaces/CreateStudentDto.html":{},"interfaces/CreateTutorDto.html":{},"interfaces/CreateUserDto.html":{},"interfaces/Learner.html":{},"injectables/LocalStrategy.html":{},"interfaces/QuestionnaireBody.html":{},"classes/Student.html":{},"classes/Tutor.html":{},"interfaces/User.html":{},"injectables/UserService.html":{},"miscellaneous/variables.html":{}}}],["path",{"_index":196,"title":{},"body":{"interfaces/CollationDocument.html":{},"injectables/JwtConfigService.html":{},"injectables/MongooseConfigService.html":{},"injectables/MulterConfigService.html":{},"injectables/PaginateModel.html":{},"interfaces/PaginateModelArgs.html":{},"interfaces/PaginateOptions.html":{},"interfaces/PaginationResult.html":{},"interfaces/PopulateOptions.html":{}}}],["payload",{"_index":164,"title":{},"body":{"injectables/AuthService.html":{},"injectables/JwtStrategy.html":{}}}],["payload.id",{"_index":556,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["payload.isstudent",{"_index":557,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["pipetransform",{"_index":434,"title":{},"body":{"classes/JoiValidationPipe.html":{}}}],["please",{"_index":352,"title":{},"body":{"controllers/FeedController.html":{},"index.html":{}}}],["populate",{"_index":206,"title":{},"body":{"interfaces/CollationDocument.html":{},"injectables/PaginateModel.html":{},"interfaces/PaginateModelArgs.html":{},"interfaces/PaginateOptions.html":{},"interfaces/PaginationResult.html":{},"interfaces/PopulateOptions.html":{}}}],["populateoptions",{"_index":195,"title":{"interfaces/PopulateOptions.html":{}},"body":{"interfaces/CollationDocument.html":{},"injectables/PaginateModel.html":{},"interfaces/PaginateModelArgs.html":{},"interfaces/PaginateOptions.html":{},"interfaces/PaginationResult.html":{},"interfaces/PopulateOptions.html":{},"coverage.html":{}}}],["port",{"_index":496,"title":{},"body":{"injectables/JwtConfigService.html":{},"injectables/MongooseConfigService.html":{},"injectables/MulterConfigService.html":{}}}],["post",{"_index":31,"title":{},"body":{"controllers/AppController.html":{},"controllers/FeedController.html":{},"controllers/UserController.html":{}}}],["post('auth/login",{"_index":55,"title":{},"body":{"controllers/AppController.html":{}}}],["post('learning",{"_index":783,"title":{},"body":{"controllers/UserController.html":{}}}],["post('register/student",{"_index":772,"title":{},"body":{"controllers/UserController.html":{}}}],["post('register/student')@usepipes(new",{"_index":740,"title":{},"body":{"controllers/UserController.html":{}}}],["post('register/tutor",{"_index":779,"title":{},"body":{"controllers/UserController.html":{}}}],["post('register/tutor')@usepipes(new",{"_index":743,"title":{},"body":{"controllers/UserController.html":{}}}],["post()@usepipes(new",{"_index":295,"title":{},"body":{"controllers/FeedController.html":{}}}],["pragmatist",{"_index":669,"title":{},"body":{"interfaces/QuestionnaireBody.html":{},"injectables/UserService.html":{}}}],["pragmatistanswers",{"_index":644,"title":{},"body":{"interfaces/QuestionnaireBody.html":{},"injectables/UserService.html":{}}}],["pragmatistsum",{"_index":660,"title":{},"body":{"interfaces/QuestionnaireBody.html":{},"injectables/UserService.html":{}}}],["prefix",{"_index":279,"title":{},"body":{"controllers/FeedController.html":{},"controllers/UserController.html":{}}}],["prev",{"_index":657,"title":{},"body":{"interfaces/QuestionnaireBody.html":{},"injectables/UserService.html":{}}}],["prevpage",{"_index":213,"title":{},"body":{"interfaces/CollationDocument.html":{},"injectables/PaginateModel.html":{},"interfaces/PaginateModelArgs.html":{},"interfaces/PaginateOptions.html":{},"interfaces/PaginationResult.html":{},"interfaces/PopulateOptions.html":{}}}],["private",{"_index":48,"title":{},"body":{"controllers/AppController.html":{},"injectables/AuthService.html":{},"controllers/FeedController.html":{},"injectables/FeedService.html":{},"interfaces/FetchArg.html":{},"interfaces/QuestionnaireBody.html":{},"injectables/UserService.html":{}}}],["process.env.environment",{"_index":500,"title":{},"body":{"injectables/JwtConfigService.html":{},"injectables/MongooseConfigService.html":{},"injectables/MulterConfigService.html":{}}}],["process.env.jwtsecret",{"_index":507,"title":{},"body":{"injectables/JwtConfigService.html":{},"injectables/JwtStrategy.html":{},"injectables/MongooseConfigService.html":{},"injectables/MulterConfigService.html":{}}}],["process.env.mongodb_uri",{"_index":503,"title":{},"body":{"injectables/JwtConfigService.html":{},"injectables/MongooseConfigService.html":{},"injectables/MulterConfigService.html":{}}}],["process.env.mongodb_uri_dev",{"_index":502,"title":{},"body":{"injectables/JwtConfigService.html":{},"injectables/MongooseConfigService.html":{},"injectables/MulterConfigService.html":{}}}],["production",{"_index":905,"title":{},"body":{"index.html":{}}}],["profile",{"_index":616,"title":{},"body":{"interfaces/QuestionnaireBody.html":{},"injectables/UserService.html":{}}}],["profile(undefined",{"_index":809,"title":{},"body":{"injectables/UserService.html":{}}}],["progressive",{"_index":884,"title":{},"body":{"index.html":{}}}],["project",{"_index":915,"title":{},"body":{"index.html":{}}}],["promise",{"_index":221,"title":{},"body":{"interfaces/CollationDocument.html":{},"controllers/FeedController.html":{},"interfaces/IFeedController.html":{},"interfaces/IFeedService.html":{},"injectables/PaginateModel.html":{},"interfaces/PaginateModelArgs.html":{},"interfaces/PaginateOptions.html":{},"interfaces/PaginationResult.html":{},"interfaces/PopulateOptions.html":{},"interfaces/QuestionnaireBody.html":{},"guards/RolesGaurd.html":{},"injectables/UserService.html":{},"miscellaneous/variables.html":{}}}],["prop",{"_index":255,"title":{},"body":{"classes/Feed.html":{},"classes/Material.html":{},"classes/Student.html":{},"classes/Tutor.html":{}}}],["prop([string",{"_index":706,"title":{},"body":{"classes/Student.html":{}}}],["prop(undefined",{"_index":700,"title":{},"body":{"classes/Student.html":{}}}],["prop({type",{"_index":259,"title":{},"body":{"classes/Feed.html":{},"classes/Material.html":{},"classes/Tutor.html":{}}}],["prop({unique",{"_index":695,"title":{},"body":{"classes/Student.html":{},"classes/Tutor.html":{}}}],["properties",{"_index":171,"title":{},"body":{"interfaces/Author.html":{},"interfaces/CollationDocument.html":{},"interfaces/Course.html":{},"interfaces/CreateFeedDTO.html":{},"interfaces/CreateUserDto.html":{},"classes/Feed.html":{},"injectables/FeedService.html":{},"interfaces/FetchArg.html":{},"interfaces/IFeedController.html":{},"interfaces/IFeedService.html":{},"interfaces/Learner.html":{},"classes/Material.html":{},"interfaces/PaginateModelArgs.html":{},"interfaces/PaginateOptions.html":{},"interfaces/PaginationResult.html":{},"interfaces/PopulateOptions.html":{},"interfaces/QuestionnaireBody.html":{},"classes/Student.html":{},"interfaces/Todo.html":{},"classes/Tutor.html":{},"interfaces/User.html":{}}}],["providers",{"_index":75,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/FeedModule.html":{},"modules/UserModule.html":{},"overview.html":{}}}],["providers/paginatemodel.provider",{"_index":371,"title":{},"body":{"modules/FeedModule.html":{},"injectables/FeedService.html":{},"interfaces/FetchArg.html":{}}}],["public",{"_index":219,"title":{},"body":{"interfaces/CollationDocument.html":{},"injectables/PaginateModel.html":{},"interfaces/PaginateModelArgs.html":{},"interfaces/PaginateOptions.html":{},"interfaces/PaginationResult.html":{},"interfaces/PopulateOptions.html":{}}}],["public/upload",{"_index":505,"title":{},"body":{"injectables/JwtConfigService.html":{},"injectables/MongooseConfigService.html":{},"injectables/MulterConfigService.html":{},"miscellaneous/variables.html":{}}}],["pwdmatch",{"_index":149,"title":{},"body":{"injectables/AuthService.html":{}}}],["q",{"_index":327,"title":{},"body":{"controllers/FeedController.html":{},"interfaces/IFeedController.html":{}}}],["queries",{"_index":292,"title":{},"body":{"controllers/FeedController.html":{},"interfaces/IFeedController.html":{}}}],["queries.learningstyle",{"_index":335,"title":{},"body":{"controllers/FeedController.html":{}}}],["queries.q",{"_index":332,"title":{},"body":{"controllers/FeedController.html":{}}}],["queries?.learningstyle?.replace",{"_index":331,"title":{},"body":{"controllers/FeedController.html":{}}}],["queries?.q?.replace",{"_index":328,"title":{},"body":{"controllers/FeedController.html":{}}}],["query",{"_index":216,"title":{},"body":{"interfaces/CollationDocument.html":{},"controllers/FeedController.html":{},"injectables/FeedService.html":{},"interfaces/FetchArg.html":{},"injectables/PaginateModel.html":{},"interfaces/PaginateModelArgs.html":{},"interfaces/PaginateOptions.html":{},"interfaces/PaginationResult.html":{},"interfaces/PopulateOptions.html":{}}}],["questionnairebody",{"_index":585,"title":{"interfaces/QuestionnaireBody.html":{}},"body":{"interfaces/QuestionnaireBody.html":{},"injectables/UserService.html":{},"coverage.html":{}}}],["re",{"_index":410,"title":{},"body":{"injectables/FeedService.html":{},"interfaces/FetchArg.html":{}}}],["read",{"_index":924,"title":{},"body":{"index.html":{}}}],["readonly",{"_index":49,"title":{},"body":{"controllers/AppController.html":{},"controllers/FeedController.html":{}}}],["ref",{"_index":722,"title":{},"body":{"classes/Tutor.html":{}}}],["reflect",{"_index":870,"title":{},"body":{"dependencies.html":{}}}],["reflector",{"_index":670,"title":{},"body":{"interfaces/QuestionnaireBody.html":{},"injectables/UserService.html":{}}}],["reflectoranswers",{"_index":647,"title":{},"body":{"interfaces/QuestionnaireBody.html":{},"injectables/UserService.html":{}}}],["reflectorsum",{"_index":662,"title":{},"body":{"interfaces/QuestionnaireBody.html":{},"injectables/UserService.html":{}}}],["regex",{"_index":412,"title":{},"body":{"injectables/FeedService.html":{},"interfaces/FetchArg.html":{}}}],["regexp(arg.query",{"_index":411,"title":{},"body":{"injectables/FeedService.html":{},"interfaces/FetchArg.html":{}}}],["registerstudent",{"_index":730,"title":{},"body":{"controllers/UserController.html":{}}}],["registerstudent(@body",{"_index":774,"title":{},"body":{"controllers/UserController.html":{}}}],["registerstudent(body",{"_index":739,"title":{},"body":{"controllers/UserController.html":{}}}],["registertutor",{"_index":731,"title":{},"body":{"controllers/UserController.html":{}}}],["registertutor(@body",{"_index":781,"title":{},"body":{"controllers/UserController.html":{}}}],["registertutor(body",{"_index":742,"title":{},"body":{"controllers/UserController.html":{}}}],["removefeed",{"_index":284,"title":{},"body":{"controllers/FeedController.html":{},"interfaces/IFeedController.html":{}}}],["removefeed(@param",{"_index":363,"title":{},"body":{"controllers/FeedController.html":{}}}],["removefeed(params",{"_index":299,"title":{},"body":{"controllers/FeedController.html":{}}}],["render",{"_index":32,"title":{},"body":{"controllers/AppController.html":{}}}],["render('index",{"_index":50,"title":{},"body":{"controllers/AppController.html":{}}}],["repository",{"_index":895,"title":{},"body":{"index.html":{}}}],["req",{"_index":29,"title":{},"body":{"controllers/AppController.html":{},"injectables/JwtConfigService.html":{},"injectables/MongooseConfigService.html":{},"injectables/MulterConfigService.html":{},"miscellaneous/variables.html":{}}}],["request",{"_index":33,"title":{},"body":{"controllers/AppController.html":{},"guards/RolesGaurd.html":{},"miscellaneous/variables.html":{}}}],["request.user",{"_index":993,"title":{},"body":{"miscellaneous/variables.html":{}}}],["reset",{"_index":84,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/FeedModule.html":{},"modules/UserModule.html":{},"overview.html":{}}}],["response",{"_index":416,"title":{},"body":{"injectables/FeedService.html":{},"interfaces/FetchArg.html":{}}}],["result",{"_index":59,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"interfaces/Author.html":{},"interfaces/CollationDocument.html":{},"interfaces/Course.html":{},"interfaces/CreateFeedDTO.html":{},"interfaces/CreateStudentDto.html":{},"interfaces/CreateTutorDto.html":{},"interfaces/CreateUserDto.html":{},"classes/Feed.html":{},"controllers/FeedController.html":{},"modules/FeedModule.html":{},"injectables/FeedService.html":{},"interfaces/FetchArg.html":{},"interfaces/IFeedController.html":{},"interfaces/IFeedService.html":{},"classes/JoiValidationPipe.html":{},"injectables/JwtAuthGuard.html":{},"injectables/JwtConfigService.html":{},"injectables/JwtStrategy.html":{},"interfaces/Learner.html":{},"injectables/LocalAuthGuard.html":{},"injectables/LocalStrategy.html":{},"classes/Material.html":{},"injectables/MongooseConfigService.html":{},"injectables/MulterConfigService.html":{},"injectables/PaginateModel.html":{},"interfaces/PaginateModelArgs.html":{},"interfaces/PaginateOptions.html":{},"interfaces/PaginationResult.html":{},"interfaces/PopulateOptions.html":{},"interfaces/QuestionnaireBody.html":{},"guards/RolesGaurd.html":{},"classes/Student.html":{},"interfaces/Todo.html":{},"classes/Tutor.html":{},"interfaces/User.html":{},"controllers/UserController.html":{},"modules/UserModule.html":{},"injectables/UserService.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/functions.html":{},"index.html":{},"modules.html":{},"overview.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["result.topromise",{"_index":63,"title":{},"body":{"controllers/AppController.html":{}}}],["results",{"_index":67,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"interfaces/Author.html":{},"interfaces/CollationDocument.html":{},"interfaces/Course.html":{},"interfaces/CreateFeedDTO.html":{},"interfaces/CreateStudentDto.html":{},"interfaces/CreateTutorDto.html":{},"interfaces/CreateUserDto.html":{},"classes/Feed.html":{},"controllers/FeedController.html":{},"modules/FeedModule.html":{},"injectables/FeedService.html":{},"interfaces/FetchArg.html":{},"interfaces/IFeedController.html":{},"interfaces/IFeedService.html":{},"classes/JoiValidationPipe.html":{},"injectables/JwtAuthGuard.html":{},"injectables/JwtConfigService.html":{},"injectables/JwtStrategy.html":{},"interfaces/Learner.html":{},"injectables/LocalAuthGuard.html":{},"injectables/LocalStrategy.html":{},"classes/Material.html":{},"injectables/MongooseConfigService.html":{},"injectables/MulterConfigService.html":{},"injectables/PaginateModel.html":{},"interfaces/PaginateModelArgs.html":{},"interfaces/PaginateOptions.html":{},"interfaces/PaginationResult.html":{},"interfaces/PopulateOptions.html":{},"interfaces/QuestionnaireBody.html":{},"guards/RolesGaurd.html":{},"classes/Student.html":{},"interfaces/Todo.html":{},"classes/Tutor.html":{},"interfaces/User.html":{},"controllers/UserController.html":{},"modules/UserModule.html":{},"injectables/UserService.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/functions.html":{},"index.html":{},"modules.html":{},"overview.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["return",{"_index":51,"title":{},"body":{"controllers/AppController.html":{},"injectables/AppService.html":{},"injectables/AuthService.html":{},"controllers/FeedController.html":{},"injectables/FeedService.html":{},"interfaces/FetchArg.html":{},"classes/JoiValidationPipe.html":{},"injectables/JwtAuthGuard.html":{},"injectables/JwtConfigService.html":{},"injectables/JwtStrategy.html":{},"injectables/LocalStrategy.html":{},"injectables/MongooseConfigService.html":{},"injectables/MulterConfigService.html":{},"interfaces/QuestionnaireBody.html":{},"guards/RolesGaurd.html":{},"classes/Student.html":{},"interfaces/Todo.html":{},"controllers/UserController.html":{},"injectables/UserService.html":{},"miscellaneous/variables.html":{}}}],["returns",{"_index":18,"title":{},"body":{"controllers/AppController.html":{},"injectables/AppService.html":{},"injectables/AuthService.html":{},"controllers/FeedController.html":{},"injectables/FeedService.html":{},"classes/JoiValidationPipe.html":{},"injectables/JwtAuthGuard.html":{},"injectables/JwtConfigService.html":{},"injectables/JwtStrategy.html":{},"injectables/LocalStrategy.html":{},"injectables/MongooseConfigService.html":{},"injectables/MulterConfigService.html":{},"injectables/PaginateModel.html":{},"guards/RolesGaurd.html":{},"controllers/UserController.html":{},"injectables/UserService.html":{},"miscellaneous/functions.html":{}}}],["rimraf",{"_index":872,"title":{},"body":{"dependencies.html":{}}}],["rolesgaurd",{"_index":688,"title":{"guards/RolesGaurd.html":{}},"body":{"guards/RolesGaurd.html":{},"controllers/UserController.html":{},"coverage.html":{}}}],["run",{"_index":900,"title":{},"body":{"index.html":{}}}],["rxjs",{"_index":100,"title":{},"body":{"injectables/AppService.html":{},"guards/RolesGaurd.html":{},"interfaces/Todo.html":{},"dependencies.html":{}}}],["salt",{"_index":975,"title":{},"body":{"miscellaneous/variables.html":{}}}],["saltrounds",{"_index":974,"title":{},"body":{"miscellaneous/variables.html":{}}}],["savedfeed",{"_index":421,"title":{},"body":{"injectables/FeedService.html":{},"interfaces/FetchArg.html":{}}}],["saveduser",{"_index":628,"title":{},"body":{"interfaces/QuestionnaireBody.html":{},"injectables/UserService.html":{}}}],["scalable",{"_index":889,"title":{},"body":{"index.html":{}}}],["schema",{"_index":270,"title":{},"body":{"classes/Feed.html":{},"modules/FeedModule.html":{},"classes/JoiValidationPipe.html":{},"classes/Material.html":{},"classes/Student.html":{},"classes/Tutor.html":{},"modules/UserModule.html":{},"miscellaneous/variables.html":{}}}],["schema.plugin(require('mongoose",{"_index":988,"title":{},"body":{"miscellaneous/variables.html":{}}}],["schemafactory",{"_index":271,"title":{},"body":{"classes/Feed.html":{},"classes/Material.html":{},"classes/Student.html":{},"classes/Tutor.html":{}}}],["schemafactory.createforclass(feed",{"_index":276,"title":{},"body":{"classes/Feed.html":{},"miscellaneous/variables.html":{}}}],["schemafactory.createforclass(material",{"_index":579,"title":{},"body":{"classes/Material.html":{},"miscellaneous/variables.html":{}}}],["schemafactory.createforclass(student",{"_index":708,"title":{},"body":{"classes/Student.html":{},"miscellaneous/variables.html":{}}}],["schemafactory.createforclass(tutor",{"_index":724,"title":{},"body":{"classes/Tutor.html":{},"miscellaneous/variables.html":{}}}],["schemas/feed.schema",{"_index":373,"title":{},"body":{"modules/FeedModule.html":{},"injectables/FeedService.html":{},"interfaces/FetchArg.html":{}}}],["schemas/files.schema",{"_index":590,"title":{},"body":{"interfaces/QuestionnaireBody.html":{},"modules/UserModule.html":{},"injectables/UserService.html":{}}}],["schemas/student.schema",{"_index":593,"title":{},"body":{"interfaces/QuestionnaireBody.html":{},"modules/UserModule.html":{},"injectables/UserService.html":{}}}],["schemas/tutor.schema",{"_index":596,"title":{},"body":{"interfaces/QuestionnaireBody.html":{},"modules/UserModule.html":{},"injectables/UserService.html":{}}}],["schemas/validation/create",{"_index":324,"title":{},"body":{"controllers/FeedController.html":{},"controllers/UserController.html":{}}}],["secret",{"_index":536,"title":{},"body":{"injectables/JwtConfigService.html":{},"injectables/MongooseConfigService.html":{},"injectables/MulterConfigService.html":{}}}],["secretorkey",{"_index":555,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["select",{"_index":197,"title":{},"body":{"interfaces/CollationDocument.html":{},"injectables/PaginateModel.html":{},"interfaces/PaginateModelArgs.html":{},"interfaces/PaginateOptions.html":{},"interfaces/PaginationResult.html":{},"interfaces/PopulateOptions.html":{}}}],["server",{"_index":890,"title":{},"body":{"index.html":{}}}],["service",{"_index":515,"title":{},"body":{"injectables/JwtConfigService.html":{},"injectables/MongooseConfigService.html":{},"injectables/MulterConfigService.html":{}}}],["service.interface.ts",{"_index":431,"title":{},"body":{"interfaces/IFeedService.html":{},"coverage.html":{}}}],["setting",{"_index":535,"title":{},"body":{"injectables/JwtConfigService.html":{},"injectables/MongooseConfigService.html":{},"injectables/MulterConfigService.html":{}}}],["setup",{"_index":517,"title":{},"body":{"injectables/JwtConfigService.html":{},"injectables/MongooseConfigService.html":{},"injectables/MulterConfigService.html":{}}}],["shared/handlefilestorage",{"_index":313,"title":{},"body":{"controllers/FeedController.html":{}}}],["shared/hashing",{"_index":147,"title":{},"body":{"injectables/AuthService.html":{},"interfaces/QuestionnaireBody.html":{},"injectables/UserService.html":{}}}],["shared/joivalidation.pipe",{"_index":315,"title":{},"body":{"controllers/FeedController.html":{},"controllers/UserController.html":{}}}],["side",{"_index":891,"title":{},"body":{"index.html":{}}}],["signoptions",{"_index":538,"title":{},"body":{"injectables/JwtConfigService.html":{},"injectables/MongooseConfigService.html":{},"injectables/MulterConfigService.html":{}}}],["sort",{"_index":201,"title":{},"body":{"interfaces/CollationDocument.html":{},"injectables/PaginateModel.html":{},"interfaces/PaginateModelArgs.html":{},"interfaces/PaginateOptions.html":{},"interfaces/PaginationResult.html":{},"interfaces/PopulateOptions.html":{}}}],["source",{"_index":4,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"interfaces/Author.html":{},"interfaces/CollationDocument.html":{},"interfaces/Course.html":{},"interfaces/CreateFeedDTO.html":{},"interfaces/CreateStudentDto.html":{},"interfaces/CreateTutorDto.html":{},"interfaces/CreateUserDto.html":{},"classes/Feed.html":{},"controllers/FeedController.html":{},"modules/FeedModule.html":{},"injectables/FeedService.html":{},"interfaces/FetchArg.html":{},"interfaces/IFeedController.html":{},"interfaces/IFeedService.html":{},"classes/JoiValidationPipe.html":{},"injectables/JwtAuthGuard.html":{},"injectables/JwtConfigService.html":{},"injectables/JwtStrategy.html":{},"interfaces/Learner.html":{},"injectables/LocalAuthGuard.html":{},"injectables/LocalStrategy.html":{},"classes/Material.html":{},"injectables/MongooseConfigService.html":{},"injectables/MulterConfigService.html":{},"injectables/PaginateModel.html":{},"interfaces/PaginateModelArgs.html":{},"interfaces/PaginateOptions.html":{},"interfaces/PaginationResult.html":{},"interfaces/PopulateOptions.html":{},"interfaces/QuestionnaireBody.html":{},"guards/RolesGaurd.html":{},"classes/Student.html":{},"interfaces/Todo.html":{},"classes/Tutor.html":{},"interfaces/User.html":{},"controllers/UserController.html":{},"modules/UserModule.html":{},"injectables/UserService.html":{},"index.html":{}}}],["sponsors",{"_index":918,"title":{},"body":{"index.html":{}}}],["src/.../configuration.ts",{"_index":955,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../constants.ts",{"_index":954,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../create",{"_index":952,"title":{},"body":{"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["src/.../feed.module.ts",{"_index":958,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../feed.schema.ts",{"_index":947,"title":{},"body":{"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["src/.../files.schema.ts",{"_index":948,"title":{},"body":{"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["src/.../handlefilestorage.ts",{"_index":956,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../hashing.ts",{"_index":957,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../main.ts",{"_index":880,"title":{},"body":{"miscellaneous/functions.html":{}}}],["src/.../modules.ts",{"_index":960,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../mongoosemodelfactories.ts",{"_index":961,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../student.schema.ts",{"_index":949,"title":{},"body":{"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["src/.../tutor.schema.ts",{"_index":950,"title":{},"body":{"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["src/.../user.controller.ts",{"_index":881,"title":{},"body":{"miscellaneous/functions.html":{}}}],["src/.../user.decorator.ts",{"_index":962,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../user.module.ts",{"_index":959,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../user.service.ts",{"_index":951,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["src/app.controller.ts",{"_index":6,"title":{},"body":{"controllers/AppController.html":{},"coverage.html":{}}}],["src/app.controller.ts:24",{"_index":17,"title":{},"body":{"controllers/AppController.html":{}}}],["src/app.controller.ts:30",{"_index":25,"title":{},"body":{"controllers/AppController.html":{}}}],["src/app.controller.ts:35",{"_index":22,"title":{},"body":{"controllers/AppController.html":{}}}],["src/app.module.ts",{"_index":86,"title":{},"body":{"modules/AppModule.html":{}}}],["src/app.service.ts",{"_index":92,"title":{},"body":{"injectables/AppService.html":{},"interfaces/Todo.html":{},"coverage.html":{}}}],["src/app.service.ts:13",{"_index":95,"title":{},"body":{"injectables/AppService.html":{}}}],["src/app.service.ts:15",{"_index":97,"title":{},"body":{"injectables/AppService.html":{}}}],["src/app.service.ts:19",{"_index":98,"title":{},"body":{"injectables/AppService.html":{}}}],["src/auth/auth.module.ts",{"_index":119,"title":{},"body":{"modules/AuthModule.html":{}}}],["src/auth/auth.service.ts",{"_index":134,"title":{},"body":{"injectables/AuthService.html":{},"coverage.html":{}}}],["src/auth/auth.service.ts:13",{"_index":144,"title":{},"body":{"injectables/AuthService.html":{}}}],["src/auth/auth.service.ts:32",{"_index":140,"title":{},"body":{"injectables/AuthService.html":{}}}],["src/auth/auth.service.ts:7",{"_index":138,"title":{},"body":{"injectables/AuthService.html":{}}}],["src/auth/jwt",{"_index":455,"title":{},"body":{"injectables/JwtAuthGuard.html":{},"coverage.html":{}}}],["src/auth/jwt.strategy.ts",{"_index":541,"title":{},"body":{"injectables/JwtStrategy.html":{},"coverage.html":{}}}],["src/auth/jwt.strategy.ts:16",{"_index":545,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["src/auth/jwt.strategy.ts:7",{"_index":543,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["src/auth/local",{"_index":558,"title":{},"body":{"injectables/LocalAuthGuard.html":{},"coverage.html":{}}}],["src/auth/local.strategy.ts",{"_index":560,"title":{},"body":{"injectables/LocalStrategy.html":{},"coverage.html":{}}}],["src/auth/local.strategy.ts:12",{"_index":564,"title":{},"body":{"injectables/LocalStrategy.html":{}}}],["src/auth/local.strategy.ts:7",{"_index":562,"title":{},"body":{"injectables/LocalStrategy.html":{}}}],["src/config/configuration.ts",{"_index":477,"title":{},"body":{"injectables/JwtConfigService.html":{},"injectables/MongooseConfigService.html":{},"injectables/MulterConfigService.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/config/configuration.ts:36",{"_index":580,"title":{},"body":{"injectables/MongooseConfigService.html":{}}}],["src/config/configuration.ts:38",{"_index":581,"title":{},"body":{"injectables/MongooseConfigService.html":{}}}],["src/config/configuration.ts:55",{"_index":582,"title":{},"body":{"injectables/MulterConfigService.html":{}}}],["src/config/configuration.ts:57",{"_index":583,"title":{},"body":{"injectables/MulterConfigService.html":{}}}],["src/config/configuration.ts:77",{"_index":481,"title":{},"body":{"injectables/JwtConfigService.html":{}}}],["src/config/configuration.ts:79",{"_index":482,"title":{},"body":{"injectables/JwtConfigService.html":{}}}],["src/config/constants.ts",{"_index":821,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/config/modules.ts",{"_index":823,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/config/mongoosemodelfactories.ts",{"_index":824,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/decotators/user.decorator.ts",{"_index":826,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/feed/dto/create",{"_index":244,"title":{},"body":{"interfaces/CreateFeedDTO.html":{},"coverage.html":{}}}],["src/feed/feed.controller.ts",{"_index":278,"title":{},"body":{"controllers/FeedController.html":{},"coverage.html":{}}}],["src/feed/feed.controller.ts:110",{"_index":301,"title":{},"body":{"controllers/FeedController.html":{}}}],["src/feed/feed.controller.ts:31",{"_index":291,"title":{},"body":{"controllers/FeedController.html":{}}}],["src/feed/feed.controller.ts:57",{"_index":288,"title":{},"body":{"controllers/FeedController.html":{}}}],["src/feed/feed.controller.ts:77",{"_index":297,"title":{},"body":{"controllers/FeedController.html":{}}}],["src/feed/feed.module.ts",{"_index":368,"title":{},"body":{"modules/FeedModule.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/feed/feed.service.ts",{"_index":377,"title":{},"body":{"injectables/FeedService.html":{},"interfaces/FetchArg.html":{},"coverage.html":{}}}],["src/feed/feed.service.ts:16",{"_index":386,"title":{},"body":{"injectables/FeedService.html":{}}}],["src/feed/feed.service.ts:24",{"_index":394,"title":{},"body":{"injectables/FeedService.html":{}}}],["src/feed/feed.service.ts:35",{"_index":399,"title":{},"body":{"injectables/FeedService.html":{}}}],["src/feed/feed.service.ts:57",{"_index":397,"title":{},"body":{"injectables/FeedService.html":{}}}],["src/feed/feed.service.ts:69",{"_index":401,"title":{},"body":{"injectables/FeedService.html":{}}}],["src/feed/feed.service.ts:78",{"_index":389,"title":{},"body":{"injectables/FeedService.html":{}}}],["src/feed/feed.service.ts:95",{"_index":391,"title":{},"body":{"injectables/FeedService.html":{}}}],["src/feed/interfaces/feed",{"_index":427,"title":{},"body":{"interfaces/IFeedController.html":{},"interfaces/IFeedService.html":{},"coverage.html":{}}}],["src/feed/interfaces/feed.interface.ts",{"_index":231,"title":{},"body":{"interfaces/Course.html":{},"coverage.html":{}}}],["src/feed/schemas/feed.schema.ts",{"_index":253,"title":{},"body":{"classes/Feed.html":{},"coverage.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["src/feed/schemas/feed.schema.ts:10",{"_index":268,"title":{},"body":{"classes/Feed.html":{}}}],["src/feed/schemas/feed.schema.ts:13",{"_index":258,"title":{},"body":{"classes/Feed.html":{}}}],["src/feed/schemas/feed.schema.ts:16",{"_index":257,"title":{},"body":{"classes/Feed.html":{}}}],["src/feed/schemas/feed.schema.ts:19",{"_index":265,"title":{},"body":{"classes/Feed.html":{}}}],["src/feed/schemas/feed.schema.ts:22",{"_index":269,"title":{},"body":{"classes/Feed.html":{}}}],["src/feed/schemas/feed.schema.ts:25",{"_index":256,"title":{},"body":{"classes/Feed.html":{}}}],["src/feed/schemas/feed.schema.ts:28",{"_index":264,"title":{},"body":{"classes/Feed.html":{}}}],["src/feed/schemas/feed.schema.ts:31",{"_index":267,"title":{},"body":{"classes/Feed.html":{}}}],["src/feed/schemas/feed.schema.ts:34",{"_index":266,"title":{},"body":{"classes/Feed.html":{}}}],["src/feed/schemas/feed.schema.ts:37",{"_index":263,"title":{},"body":{"classes/Feed.html":{}}}],["src/feed/schemas/feed.schema.ts:40",{"_index":262,"title":{},"body":{"classes/Feed.html":{}}}],["src/feed/schemas/validation/create",{"_index":829,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/guards/roles.guard.ts",{"_index":690,"title":{},"body":{"guards/RolesGaurd.html":{},"coverage.html":{}}}],["src/guards/roles.guard.ts:6",{"_index":691,"title":{},"body":{"guards/RolesGaurd.html":{}}}],["src/main.ts",{"_index":832,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["src/providers/paginatemodel.provider.ts",{"_index":182,"title":{},"body":{"interfaces/CollationDocument.html":{},"injectables/PaginateModel.html":{},"interfaces/PaginateModelArgs.html":{},"interfaces/PaginateOptions.html":{},"interfaces/PaginationResult.html":{},"interfaces/PopulateOptions.html":{},"coverage.html":{}}}],["src/providers/paginatemodel.provider.ts:57",{"_index":584,"title":{},"body":{"injectables/PaginateModel.html":{}}}],["src/shared/handlefilestorage.ts",{"_index":835,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/shared/hashing.ts",{"_index":836,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/shared/joivalidation.pipe.ts",{"_index":433,"title":{},"body":{"classes/JoiValidationPipe.html":{},"coverage.html":{}}}],["src/shared/joivalidation.pipe.ts:12",{"_index":442,"title":{},"body":{"classes/JoiValidationPipe.html":{}}}],["src/shared/joivalidation.pipe.ts:8",{"_index":438,"title":{},"body":{"classes/JoiValidationPipe.html":{}}}],["src/user/dto/create",{"_index":247,"title":{},"body":{"interfaces/CreateStudentDto.html":{},"interfaces/CreateTutorDto.html":{},"interfaces/CreateUserDto.html":{},"coverage.html":{},"miscellaneous/typealiases.html":{}}}],["src/user/interfaces/user.interface.ts",{"_index":169,"title":{},"body":{"interfaces/Author.html":{},"interfaces/Learner.html":{},"interfaces/User.html":{},"coverage.html":{}}}],["src/user/schemas/files.schema.ts",{"_index":568,"title":{},"body":{"classes/Material.html":{},"coverage.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["src/user/schemas/files.schema.ts:11",{"_index":573,"title":{},"body":{"classes/Material.html":{}}}],["src/user/schemas/files.schema.ts:14",{"_index":574,"title":{},"body":{"classes/Material.html":{}}}],["src/user/schemas/files.schema.ts:17",{"_index":571,"title":{},"body":{"classes/Material.html":{}}}],["src/user/schemas/files.schema.ts:20",{"_index":575,"title":{},"body":{"classes/Material.html":{}}}],["src/user/schemas/student.schema.ts",{"_index":694,"title":{},"body":{"classes/Student.html":{},"coverage.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["src/user/schemas/student.schema.ts:10",{"_index":697,"title":{},"body":{"classes/Student.html":{}}}],["src/user/schemas/student.schema.ts:13",{"_index":699,"title":{},"body":{"classes/Student.html":{}}}],["src/user/schemas/student.schema.ts:16",{"_index":702,"title":{},"body":{"classes/Student.html":{}}}],["src/user/schemas/student.schema.ts:19",{"_index":696,"title":{},"body":{"classes/Student.html":{}}}],["src/user/schemas/student.schema.ts:22",{"_index":704,"title":{},"body":{"classes/Student.html":{}}}],["src/user/schemas/student.schema.ts:25",{"_index":701,"title":{},"body":{"classes/Student.html":{}}}],["src/user/schemas/student.schema.ts:28",{"_index":698,"title":{},"body":{"classes/Student.html":{}}}],["src/user/schemas/student.schema.ts:31",{"_index":703,"title":{},"body":{"classes/Student.html":{}}}],["src/user/schemas/tutor.schema.ts",{"_index":713,"title":{},"body":{"classes/Tutor.html":{},"coverage.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["src/user/schemas/tutor.schema.ts:12",{"_index":716,"title":{},"body":{"classes/Tutor.html":{}}}],["src/user/schemas/tutor.schema.ts:15",{"_index":718,"title":{},"body":{"classes/Tutor.html":{}}}],["src/user/schemas/tutor.schema.ts:18",{"_index":719,"title":{},"body":{"classes/Tutor.html":{}}}],["src/user/schemas/tutor.schema.ts:21",{"_index":715,"title":{},"body":{"classes/Tutor.html":{}}}],["src/user/schemas/tutor.schema.ts:24",{"_index":720,"title":{},"body":{"classes/Tutor.html":{}}}],["src/user/schemas/tutor.schema.ts:27",{"_index":717,"title":{},"body":{"classes/Tutor.html":{}}}],["src/user/schemas/tutor.schema.ts:30",{"_index":714,"title":{},"body":{"classes/Tutor.html":{}}}],["src/user/schemas/validation/create",{"_index":838,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/user/user.controller.ts",{"_index":726,"title":{},"body":{"controllers/UserController.html":{},"coverage.html":{},"miscellaneous/functions.html":{}}}],["src/user/user.controller.ts:46",{"_index":738,"title":{},"body":{"controllers/UserController.html":{}}}],["src/user/user.controller.ts:57",{"_index":741,"title":{},"body":{"controllers/UserController.html":{}}}],["src/user/user.controller.ts:72",{"_index":744,"title":{},"body":{"controllers/UserController.html":{}}}],["src/user/user.controller.ts:86",{"_index":735,"title":{},"body":{"controllers/UserController.html":{}}}],["src/user/user.module.ts",{"_index":794,"title":{},"body":{"modules/UserModule.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/user/user.service.ts",{"_index":586,"title":{},"body":{"interfaces/QuestionnaireBody.html":{},"injectables/UserService.html":{},"coverage.html":{},"miscellaneous/typealiases.html":{}}}],["src/user/user.service.ts:107",{"_index":811,"title":{},"body":{"injectables/UserService.html":{}}}],["src/user/user.service.ts:112",{"_index":807,"title":{},"body":{"injectables/UserService.html":{}}}],["src/user/user.service.ts:25",{"_index":804,"title":{},"body":{"injectables/UserService.html":{}}}],["src/user/user.service.ts:32",{"_index":808,"title":{},"body":{"injectables/UserService.html":{}}}],["src/user/user.service.ts:46",{"_index":810,"title":{},"body":{"injectables/UserService.html":{}}}],["src/user/user.service.ts:60",{"_index":805,"title":{},"body":{"injectables/UserService.html":{}}}],["src/user/user.service.ts:88",{"_index":806,"title":{},"body":{"injectables/UserService.html":{}}}],["start",{"_index":901,"title":{},"body":{"index.html":{}}}],["start:dev",{"_index":904,"title":{},"body":{"index.html":{}}}],["start:prodtest",{"_index":906,"title":{},"body":{"index.html":{}}}],["started",{"_index":883,"title":{"index.html":{}},"body":{}}],["starter",{"_index":894,"title":{},"body":{"index.html":{}}}],["startindex",{"_index":226,"title":{},"body":{"interfaces/CollationDocument.html":{},"injectables/PaginateModel.html":{},"interfaces/PaginateModelArgs.html":{},"interfaces/PaginateOptions.html":{},"interfaces/PaginationResult.html":{},"interfaces/PopulateOptions.html":{}}}],["statements",{"_index":815,"title":{},"body":{"coverage.html":{}}}],["static",{"_index":851,"title":{},"body":{"dependencies.html":{}}}],["statuscode",{"_index":472,"title":{},"body":{"injectables/JwtAuthGuard.html":{}}}],["stay",{"_index":927,"title":{},"body":{"index.html":{}}}],["storage",{"_index":344,"title":{},"body":{"controllers/FeedController.html":{},"injectables/JwtConfigService.html":{},"injectables/MongooseConfigService.html":{},"injectables/MulterConfigService.html":{},"miscellaneous/variables.html":{}}}],["str",{"_index":510,"title":{},"body":{"injectables/JwtConfigService.html":{},"injectables/MongooseConfigService.html":{},"injectables/MulterConfigService.html":{},"miscellaneous/variables.html":{}}}],["strategy",{"_index":548,"title":{},"body":{"injectables/JwtStrategy.html":{},"injectables/LocalStrategy.html":{}}}],["strength",{"_index":190,"title":{},"body":{"interfaces/CollationDocument.html":{},"injectables/PaginateModel.html":{},"interfaces/PaginateModelArgs.html":{},"interfaces/PaginateOptions.html":{},"interfaces/PaginationResult.html":{},"interfaces/PopulateOptions.html":{}}}],["string",{"_index":20,"title":{},"body":{"controllers/AppController.html":{},"injectables/AppService.html":{},"injectables/AuthService.html":{},"interfaces/Author.html":{},"interfaces/CollationDocument.html":{},"interfaces/Course.html":{},"interfaces/CreateFeedDTO.html":{},"interfaces/CreateStudentDto.html":{},"interfaces/CreateTutorDto.html":{},"interfaces/CreateUserDto.html":{},"classes/Feed.html":{},"controllers/FeedController.html":{},"injectables/FeedService.html":{},"interfaces/FetchArg.html":{},"interfaces/IFeedController.html":{},"injectables/JwtConfigService.html":{},"interfaces/Learner.html":{},"injectables/LocalStrategy.html":{},"classes/Material.html":{},"injectables/MongooseConfigService.html":{},"injectables/MulterConfigService.html":{},"injectables/PaginateModel.html":{},"interfaces/PaginateModelArgs.html":{},"interfaces/PaginateOptions.html":{},"interfaces/PaginationResult.html":{},"interfaces/PopulateOptions.html":{},"interfaces/QuestionnaireBody.html":{},"classes/Student.html":{},"interfaces/Todo.html":{},"classes/Tutor.html":{},"interfaces/User.html":{},"injectables/UserService.html":{},"miscellaneous/variables.html":{}}}],["student",{"_index":591,"title":{"classes/Student.html":{}},"body":{"interfaces/QuestionnaireBody.html":{},"classes/Student.html":{},"controllers/UserController.html":{},"modules/UserModule.html":{},"injectables/UserService.html":{},"coverage.html":{}}}],["student.name",{"_index":797,"title":{},"body":{"modules/UserModule.html":{},"miscellaneous/variables.html":{}}}],["studentdocument",{"_index":592,"title":{},"body":{"interfaces/QuestionnaireBody.html":{},"classes/Student.html":{},"injectables/UserService.html":{},"miscellaneous/typealiases.html":{}}}],["studentmodel",{"_index":600,"title":{},"body":{"interfaces/QuestionnaireBody.html":{},"injectables/UserService.html":{}}}],["studentnumber",{"_index":159,"title":{},"body":{"injectables/AuthService.html":{},"interfaces/Author.html":{},"interfaces/Learner.html":{},"interfaces/QuestionnaireBody.html":{},"classes/Student.html":{},"interfaces/User.html":{},"controllers/UserController.html":{},"injectables/UserService.html":{},"miscellaneous/variables.html":{}}}],["studentschema",{"_index":707,"title":{},"body":{"classes/Student.html":{},"modules/UserModule.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["studentschema.virtual('fullname').get(function",{"_index":709,"title":{},"body":{"classes/Student.html":{}}}],["style",{"_index":734,"title":{},"body":{"controllers/UserController.html":{}}}],["success",{"_index":365,"title":{},"body":{"controllers/FeedController.html":{},"controllers/UserController.html":{}}}],["super",{"_index":551,"title":{},"body":{"injectables/JwtStrategy.html":{},"injectables/LocalStrategy.html":{}}}],["super.canactivate(context",{"_index":471,"title":{},"body":{"injectables/JwtAuthGuard.html":{}}}],["support",{"_index":919,"title":{},"body":{"index.html":{},"modules.html":{}}}],["svg",{"_index":937,"title":{},"body":{"modules.html":{}}}],["swagger",{"_index":875,"title":{},"body":{"dependencies.html":{}}}],["table",{"_index":842,"title":{},"body":{"coverage.html":{}}}],["tablesort(document.getelementbyid('coverage",{"_index":841,"title":{},"body":{"coverage.html":{}}}],["test",{"_index":908,"title":{},"body":{"index.html":{}}}],["test:covsupport",{"_index":911,"title":{},"body":{"index.html":{}}}],["test:e2e",{"_index":910,"title":{},"body":{"index.html":{}}}],["tests",{"_index":907,"title":{},"body":{"index.html":{}}}],["thanks",{"_index":917,"title":{},"body":{"index.html":{}}}],["theorist",{"_index":671,"title":{},"body":{"interfaces/QuestionnaireBody.html":{},"injectables/UserService.html":{}}}],["theoristanswers",{"_index":650,"title":{},"body":{"interfaces/QuestionnaireBody.html":{},"injectables/UserService.html":{}}}],["theoristsum",{"_index":664,"title":{},"body":{"interfaces/QuestionnaireBody.html":{},"injectables/UserService.html":{}}}],["this.appservice.gettodos",{"_index":60,"title":{},"body":{"controllers/AppController.html":{}}}],["this.authservice.login(req.user",{"_index":57,"title":{},"body":{"controllers/AppController.html":{}}}],["this.authservice.validateuser(username",{"_index":566,"title":{},"body":{"injectables/LocalStrategy.html":{}}}],["this.configservice.get('database",{"_index":520,"title":{},"body":{"injectables/JwtConfigService.html":{},"injectables/MongooseConfigService.html":{},"injectables/MulterConfigService.html":{}}}],["this.configservice.get('jwtsecret",{"_index":537,"title":{},"body":{"injectables/JwtConfigService.html":{},"injectables/MongooseConfigService.html":{},"injectables/MulterConfigService.html":{}}}],["this.configservice.get('upload_path",{"_index":529,"title":{},"body":{"injectables/JwtConfigService.html":{},"injectables/MongooseConfigService.html":{},"injectables/MulterConfigService.html":{}}}],["this.feedmodel",{"_index":407,"title":{},"body":{"injectables/FeedService.html":{},"interfaces/FetchArg.html":{}}}],["this.feedmodel.findbyidandremove(id",{"_index":424,"title":{},"body":{"injectables/FeedService.html":{},"interfaces/FetchArg.html":{}}}],["this.feedmodel.findone",{"_index":414,"title":{},"body":{"injectables/FeedService.html":{},"interfaces/FetchArg.html":{}}}],["this.feedservice.createfeed(data",{"_index":359,"title":{},"body":{"controllers/FeedController.html":{}}}],["this.feedservice.deletefeed(params.id",{"_index":364,"title":{},"body":{"controllers/FeedController.html":{}}}],["this.feedservice.fetchfeeds",{"_index":337,"title":{},"body":{"controllers/FeedController.html":{}}}],["this.feedservice.fetchfeedsbylearningstyle",{"_index":336,"title":{},"body":{"controllers/FeedController.html":{}}}],["this.feedservice.fetchfeedsbyquery",{"_index":333,"title":{},"body":{"controllers/FeedController.html":{}}}],["this.feedservice.fetchfeedsbytitle(q",{"_index":340,"title":{},"body":{"controllers/FeedController.html":{}}}],["this.firstname",{"_index":710,"title":{},"body":{"classes/Student.html":{}}}],["this.httpservice.get('https://jsonplaceholder.typicode.com/todos",{"_index":112,"title":{},"body":{"injectables/AppService.html":{},"interfaces/Todo.html":{}}}],["this.jwtservice.sign(payload",{"_index":166,"title":{},"body":{"injectables/AuthService.html":{}}}],["this.materialmodel(body",{"_index":636,"title":{},"body":{"interfaces/QuestionnaireBody.html":{},"injectables/UserService.html":{}}}],["this.othernames",{"_index":712,"title":{},"body":{"classes/Student.html":{}}}],["this.paginate",{"_index":404,"title":{},"body":{"injectables/FeedService.html":{},"interfaces/FetchArg.html":{}}}],["this.paginatemodel",{"_index":405,"title":{},"body":{"injectables/FeedService.html":{},"interfaces/FetchArg.html":{}}}],["this.paginatemodel.paginate",{"_index":406,"title":{},"body":{"injectables/FeedService.html":{},"interfaces/FetchArg.html":{}}}],["this.schema.validate(value",{"_index":453,"title":{},"body":{"classes/JoiValidationPipe.html":{}}}],["this.studentmodel",{"_index":614,"title":{},"body":{"interfaces/QuestionnaireBody.html":{},"injectables/UserService.html":{}}}],["this.studentmodel(user",{"_index":627,"title":{},"body":{"interfaces/QuestionnaireBody.html":{},"injectables/UserService.html":{}}}],["this.studentmodel.findbyid(id",{"_index":618,"title":{},"body":{"interfaces/QuestionnaireBody.html":{},"injectables/UserService.html":{}}}],["this.studentmodel.findone",{"_index":686,"title":{},"body":{"interfaces/QuestionnaireBody.html":{},"injectables/UserService.html":{}}}],["this.studentmodel.updateone",{"_index":684,"title":{},"body":{"interfaces/QuestionnaireBody.html":{},"injectables/UserService.html":{}}}],["this.surname",{"_index":711,"title":{},"body":{"classes/Student.html":{}}}],["this.tutormodel",{"_index":632,"title":{},"body":{"interfaces/QuestionnaireBody.html":{},"injectables/UserService.html":{}}}],["this.tutormodel(user",{"_index":633,"title":{},"body":{"interfaces/QuestionnaireBody.html":{},"injectables/UserService.html":{}}}],["this.tutormodel.findbyid(id",{"_index":617,"title":{},"body":{"interfaces/QuestionnaireBody.html":{},"injectables/UserService.html":{}}}],["this.tutormodel.findone",{"_index":612,"title":{},"body":{"interfaces/QuestionnaireBody.html":{},"injectables/UserService.html":{}}}],["this.userservice.createstudent(body",{"_index":776,"title":{},"body":{"controllers/UserController.html":{}}}],["this.userservice.createtutor(body",{"_index":782,"title":{},"body":{"controllers/UserController.html":{}}}],["this.userservice.determine",{"_index":788,"title":{},"body":{"controllers/UserController.html":{}}}],["this.userservice.findone(username",{"_index":148,"title":{},"body":{"injectables/AuthService.html":{}}}],["this.userservice.profile(user",{"_index":769,"title":{},"body":{"controllers/UserController.html":{}}}],["throw",{"_index":350,"title":{},"body":{"controllers/FeedController.html":{},"injectables/FeedService.html":{},"interfaces/FetchArg.html":{},"classes/JoiValidationPipe.html":{},"injectables/JwtAuthGuard.html":{},"injectables/LocalStrategy.html":{},"interfaces/QuestionnaireBody.html":{},"controllers/UserController.html":{},"injectables/UserService.html":{}}}],["thumbnail",{"_index":237,"title":{},"body":{"interfaces/Course.html":{},"interfaces/CreateFeedDTO.html":{},"classes/Feed.html":{},"controllers/FeedController.html":{}}}],["title",{"_index":108,"title":{},"body":{"injectables/AppService.html":{},"interfaces/Author.html":{},"interfaces/Course.html":{},"interfaces/CreateFeedDTO.html":{},"classes/Feed.html":{},"controllers/FeedController.html":{},"injectables/FeedService.html":{},"interfaces/FetchArg.html":{},"interfaces/IFeedController.html":{},"interfaces/Learner.html":{},"interfaces/Todo.html":{},"classes/Tutor.html":{},"interfaces/User.html":{},"controllers/UserController.html":{},"miscellaneous/variables.html":{}}}],["title.replace",{"_index":339,"title":{},"body":{"controllers/FeedController.html":{}}}],["todo",{"_index":104,"title":{"interfaces/Todo.html":{}},"body":{"injectables/AppService.html":{},"interfaces/Todo.html":{},"coverage.html":{}}}],["todos",{"_index":61,"title":{},"body":{"controllers/AppController.html":{}}}],["todos.data",{"_index":65,"title":{},"body":{"controllers/AppController.html":{}}}],["totaldocs",{"_index":209,"title":{},"body":{"interfaces/CollationDocument.html":{},"injectables/PaginateModel.html":{},"interfaces/PaginateModelArgs.html":{},"interfaces/PaginateOptions.html":{},"interfaces/PaginationResult.html":{},"interfaces/PopulateOptions.html":{}}}],["totalpages",{"_index":212,"title":{},"body":{"interfaces/CollationDocument.html":{},"injectables/PaginateModel.html":{},"interfaces/PaginateModelArgs.html":{},"interfaces/PaginateOptions.html":{},"interfaces/PaginationResult.html":{},"interfaces/PopulateOptions.html":{}}}],["touch",{"_index":928,"title":{},"body":{"index.html":{}}}],["transform",{"_index":435,"title":{},"body":{"classes/JoiValidationPipe.html":{}}}],["transform(value",{"_index":439,"title":{},"body":{"classes/JoiValidationPipe.html":{}}}],["true",{"_index":225,"title":{},"body":{"interfaces/CollationDocument.html":{},"controllers/FeedController.html":{},"injectables/JwtConfigService.html":{},"injectables/MongooseConfigService.html":{},"injectables/MulterConfigService.html":{},"injectables/PaginateModel.html":{},"interfaces/PaginateModelArgs.html":{},"interfaces/PaginateOptions.html":{},"interfaces/PaginationResult.html":{},"interfaces/PopulateOptions.html":{},"guards/RolesGaurd.html":{},"classes/Student.html":{},"classes/Tutor.html":{},"controllers/UserController.html":{},"miscellaneous/variables.html":{}}}],["try",{"_index":346,"title":{},"body":{"controllers/FeedController.html":{},"injectables/FeedService.html":{},"interfaces/FetchArg.html":{},"interfaces/QuestionnaireBody.html":{},"controllers/UserController.html":{},"injectables/UserService.html":{}}}],["tutor",{"_index":594,"title":{"classes/Tutor.html":{}},"body":{"interfaces/QuestionnaireBody.html":{},"classes/Tutor.html":{},"modules/UserModule.html":{},"injectables/UserService.html":{},"coverage.html":{}}}],["tutor.name",{"_index":798,"title":{},"body":{"modules/UserModule.html":{},"miscellaneous/variables.html":{}}}],["tutordocument",{"_index":595,"title":{},"body":{"interfaces/QuestionnaireBody.html":{},"classes/Tutor.html":{},"injectables/UserService.html":{},"miscellaneous/typealiases.html":{}}}],["tutormodel",{"_index":602,"title":{},"body":{"interfaces/QuestionnaireBody.html":{},"injectables/UserService.html":{}}}],["tutorschema",{"_index":723,"title":{},"body":{"classes/Tutor.html":{},"modules/UserModule.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["twitter",{"_index":933,"title":{},"body":{"index.html":{}}}],["type",{"_index":96,"title":{},"body":{"injectables/AppService.html":{},"injectables/AuthService.html":{},"interfaces/Author.html":{},"interfaces/CollationDocument.html":{},"interfaces/Course.html":{},"interfaces/CreateFeedDTO.html":{},"interfaces/CreateStudentDto.html":{},"interfaces/CreateTutorDto.html":{},"interfaces/CreateUserDto.html":{},"classes/Feed.html":{},"controllers/FeedController.html":{},"injectables/FeedService.html":{},"interfaces/FetchArg.html":{},"interfaces/IFeedController.html":{},"interfaces/IFeedService.html":{},"classes/JoiValidationPipe.html":{},"injectables/JwtAuthGuard.html":{},"injectables/JwtConfigService.html":{},"injectables/JwtStrategy.html":{},"interfaces/Learner.html":{},"injectables/LocalStrategy.html":{},"classes/Material.html":{},"injectables/MongooseConfigService.html":{},"injectables/MulterConfigService.html":{},"injectables/PaginateModel.html":{},"interfaces/PaginateModelArgs.html":{},"interfaces/PaginateOptions.html":{},"interfaces/PaginationResult.html":{},"interfaces/PopulateOptions.html":{},"interfaces/QuestionnaireBody.html":{},"guards/RolesGaurd.html":{},"classes/Student.html":{},"interfaces/Todo.html":{},"classes/Tutor.html":{},"interfaces/User.html":{},"controllers/UserController.html":{},"injectables/UserService.html":{},"coverage.html":{},"miscellaneous/functions.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["typealiases",{"_index":945,"title":{"miscellaneous/typealiases.html":{}},"body":{}}],["typescript",{"_index":449,"title":{},"body":{"classes/JoiValidationPipe.html":{},"index.html":{}}}],["u",{"_index":152,"title":{},"body":{"injectables/AuthService.html":{},"interfaces/QuestionnaireBody.html":{},"controllers/UserController.html":{},"injectables/UserService.html":{}}}],["ui",{"_index":876,"title":{},"body":{"dependencies.html":{}}}],["unauthorized",{"_index":474,"title":{},"body":{"injectables/JwtAuthGuard.html":{}}}],["unauthorizedexception",{"_index":467,"title":{},"body":{"injectables/JwtAuthGuard.html":{},"injectables/LocalStrategy.html":{},"controllers/UserController.html":{}}}],["unauthorizedexception('incorrect",{"_index":567,"title":{},"body":{"injectables/LocalStrategy.html":{}}}],["unauthorizedexception('only",{"_index":785,"title":{},"body":{"controllers/UserController.html":{}}}],["undefined",{"_index":261,"title":{},"body":{"classes/Feed.html":{},"classes/Material.html":{},"classes/Tutor.html":{}}}],["unique",{"_index":705,"title":{},"body":{"classes/Student.html":{},"classes/Tutor.html":{},"dependencies.html":{},"miscellaneous/variables.html":{}}}],["unit",{"_index":238,"title":{},"body":{"interfaces/Course.html":{},"interfaces/CreateFeedDTO.html":{},"classes/Feed.html":{},"injectables/FeedService.html":{},"interfaces/FetchArg.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["unknown",{"_index":990,"title":{},"body":{"miscellaneous/variables.html":{}}}],["unused",{"_index":451,"title":{},"body":{"classes/JoiValidationPipe.html":{}}}],["updateduser",{"_index":787,"title":{},"body":{"controllers/UserController.html":{}}}],["upload",{"_index":353,"title":{},"body":{"controllers/FeedController.html":{},"injectables/JwtConfigService.html":{},"injectables/MongooseConfigService.html":{},"injectables/MulterConfigService.html":{}}}],["upload_path",{"_index":504,"title":{},"body":{"injectables/JwtConfigService.html":{},"injectables/MongooseConfigService.html":{},"injectables/MulterConfigService.html":{}}}],["uploadedfiles",{"_index":305,"title":{},"body":{"controllers/FeedController.html":{}}}],["uploadfile",{"_index":802,"title":{},"body":{"injectables/UserService.html":{}}}],["uploadfile(body",{"_index":634,"title":{},"body":{"interfaces/QuestionnaireBody.html":{},"injectables/UserService.html":{}}}],["uri",{"_index":519,"title":{},"body":{"injectables/JwtConfigService.html":{},"injectables/MongooseConfigService.html":{},"injectables/MulterConfigService.html":{}}}],["useclass",{"_index":133,"title":{},"body":{"modules/AuthModule.html":{},"miscellaneous/variables.html":{}}}],["usefactory",{"_index":987,"title":{},"body":{"miscellaneous/variables.html":{}}}],["usefindandmodify",{"_index":521,"title":{},"body":{"injectables/JwtConfigService.html":{},"injectables/MongooseConfigService.html":{},"injectables/MulterConfigService.html":{}}}],["useguards",{"_index":34,"title":{},"body":{"controllers/AppController.html":{},"controllers/UserController.html":{}}}],["useguards(jwtauthguard",{"_index":766,"title":{},"body":{"controllers/UserController.html":{}}}],["useguards(jwtauthguard)@get('profile",{"_index":737,"title":{},"body":{"controllers/UserController.html":{}}}],["useguards(jwtauthguard)@post('learning",{"_index":733,"title":{},"body":{"controllers/UserController.html":{}}}],["useguards(localauthguard",{"_index":54,"title":{},"body":{"controllers/AppController.html":{}}}],["useguards(localauthguard)@post('auth/login",{"_index":24,"title":{},"body":{"controllers/AppController.html":{}}}],["useinterceptors",{"_index":306,"title":{},"body":{"controllers/FeedController.html":{}}}],["usenewurlparser",{"_index":524,"title":{},"body":{"injectables/JwtConfigService.html":{},"injectables/MongooseConfigService.html":{},"injectables/MulterConfigService.html":{}}}],["usepipes",{"_index":307,"title":{},"body":{"controllers/FeedController.html":{},"controllers/UserController.html":{}}}],["usepipes(new",{"_index":341,"title":{},"body":{"controllers/FeedController.html":{},"controllers/UserController.html":{}}}],["user",{"_index":141,"title":{"interfaces/User.html":{}},"body":{"injectables/AuthService.html":{},"interfaces/Author.html":{},"interfaces/CreateStudentDto.html":{},"interfaces/CreateTutorDto.html":{},"interfaces/CreateUserDto.html":{},"injectables/JwtAuthGuard.html":{},"interfaces/Learner.html":{},"injectables/LocalStrategy.html":{},"interfaces/QuestionnaireBody.html":{},"interfaces/User.html":{},"controllers/UserController.html":{},"injectables/UserService.html":{},"coverage.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["user._id",{"_index":154,"title":{},"body":{"injectables/AuthService.html":{}}}],["user.controller",{"_index":795,"title":{},"body":{"modules/UserModule.html":{}}}],["user.dto",{"_index":589,"title":{},"body":{"interfaces/QuestionnaireBody.html":{},"controllers/UserController.html":{},"injectables/UserService.html":{}}}],["user.dto.ts",{"_index":248,"title":{},"body":{"interfaces/CreateStudentDto.html":{},"interfaces/CreateTutorDto.html":{},"interfaces/CreateUserDto.html":{},"coverage.html":{},"miscellaneous/typealiases.html":{}}}],["user.email",{"_index":156,"title":{},"body":{"injectables/AuthService.html":{},"interfaces/QuestionnaireBody.html":{},"injectables/UserService.html":{}}}],["user.id",{"_index":685,"title":{},"body":{"interfaces/QuestionnaireBody.html":{},"injectables/UserService.html":{}}}],["user.isstudent",{"_index":158,"title":{},"body":{"injectables/AuthService.html":{},"controllers/UserController.html":{}}}],["user.learningstyle",{"_index":162,"title":{},"body":{"injectables/AuthService.html":{}}}],["user.password",{"_index":620,"title":{},"body":{"interfaces/QuestionnaireBody.html":{},"injectables/UserService.html":{}}}],["user.schema",{"_index":748,"title":{},"body":{"controllers/UserController.html":{}}}],["user.schema.ts",{"_index":839,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["user.service",{"_index":749,"title":{},"body":{"controllers/UserController.html":{},"modules/UserModule.html":{}}}],["user.studentnumber",{"_index":160,"title":{},"body":{"injectables/AuthService.html":{},"interfaces/QuestionnaireBody.html":{},"injectables/UserService.html":{}}}],["user/interfaces/user.interface",{"_index":240,"title":{},"body":{"interfaces/Course.html":{},"interfaces/CreateStudentDto.html":{},"interfaces/CreateTutorDto.html":{},"interfaces/CreateUserDto.html":{},"classes/Student.html":{},"classes/Tutor.html":{}}}],["user/user.module",{"_index":128,"title":{},"body":{"modules/AuthModule.html":{}}}],["user/user.service",{"_index":44,"title":{},"body":{"controllers/AppController.html":{},"injectables/AuthService.html":{}}}],["user?.password",{"_index":151,"title":{},"body":{"injectables/AuthService.html":{}}}],["usercontroller",{"_index":725,"title":{"controllers/UserController.html":{}},"body":{"controllers/UserController.html":{},"modules/UserModule.html":{},"coverage.html":{}}}],["userdetails",{"_index":251,"title":{},"body":{"interfaces/CreateStudentDto.html":{},"interfaces/CreateTutorDto.html":{},"interfaces/CreateUserDto.html":{},"interfaces/QuestionnaireBody.html":{},"controllers/UserController.html":{},"injectables/UserService.html":{},"miscellaneous/typealiases.html":{}}}],["userid",{"_index":105,"title":{},"body":{"injectables/AppService.html":{},"interfaces/QuestionnaireBody.html":{},"interfaces/Todo.html":{},"injectables/UserService.html":{}}}],["usermodule",{"_index":82,"title":{"modules/UserModule.html":{}},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/UserModule.html":{},"modules.html":{},"overview.html":{},"miscellaneous/variables.html":{}}}],["username",{"_index":145,"title":{},"body":{"injectables/AuthService.html":{},"injectables/LocalStrategy.html":{},"interfaces/QuestionnaireBody.html":{},"injectables/UserService.html":{}}}],["users",{"_index":727,"title":{},"body":{"controllers/UserController.html":{}}}],["userservice",{"_index":43,"title":{"injectables/UserService.html":{}},"body":{"controllers/AppController.html":{},"injectables/AuthService.html":{},"interfaces/QuestionnaireBody.html":{},"controllers/UserController.html":{},"modules/UserModule.html":{},"injectables/UserService.html":{},"coverage.html":{},"overview.html":{}}}],["useunifiedtopology",{"_index":523,"title":{},"body":{"injectables/JwtConfigService.html":{},"injectables/MongooseConfigService.html":{},"injectables/MulterConfigService.html":{}}}],["validate",{"_index":542,"title":{},"body":{"injectables/JwtStrategy.html":{},"injectables/LocalStrategy.html":{}}}],["validate(payload",{"_index":544,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["validate(username",{"_index":563,"title":{},"body":{"injectables/LocalStrategy.html":{}}}],["validatepassword",{"_index":146,"title":{},"body":{"injectables/AuthService.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["validatepassword(pass",{"_index":150,"title":{},"body":{"injectables/AuthService.html":{}}}],["validateuser",{"_index":135,"title":{},"body":{"injectables/AuthService.html":{}}}],["validateuser(username",{"_index":142,"title":{},"body":{"injectables/AuthService.html":{}}}],["validation",{"_index":865,"title":{},"body":{"dependencies.html":{},"miscellaneous/variables.html":{}}}],["value",{"_index":443,"title":{},"body":{"classes/JoiValidationPipe.html":{},"miscellaneous/variables.html":{}}}],["variable",{"_index":820,"title":{},"body":{"coverage.html":{}}}],["variables",{"_index":953,"title":{"miscellaneous/variables.html":{}},"body":{"miscellaneous/variables.html":{}}}],["vars",{"_index":452,"title":{},"body":{"classes/JoiValidationPipe.html":{}}}],["watch",{"_index":902,"title":{},"body":{"index.html":{}}}],["website",{"_index":931,"title":{},"body":{"index.html":{}}}],["world",{"_index":53,"title":{},"body":{"controllers/AppController.html":{},"injectables/AppService.html":{},"interfaces/Todo.html":{}}}],["you'd",{"_index":922,"title":{},"body":{"index.html":{}}}],["z0",{"_index":606,"title":{},"body":{"interfaces/QuestionnaireBody.html":{},"injectables/UserService.html":{}}}],["z]{2,4",{"_index":609,"title":{},"body":{"interfaces/QuestionnaireBody.html":{},"injectables/UserService.html":{}}}],["za",{"_index":605,"title":{},"body":{"interfaces/QuestionnaireBody.html":{},"injectables/UserService.html":{}}}],["zoom",{"_index":83,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/FeedModule.html":{},"modules/UserModule.html":{},"overview.html":{}}}]],"pipeline":["stemmer"]},
    "store": {"controllers/AppController.html":{"url":"controllers/AppController.html","title":"controller - AppController","body":"\n                   \n\n\n\n\n\n\n  Controllers\n  AppController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app.controller.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                getHello\n                            \n                            \n                                    Async\n                                getTodos\n                            \n                            \n                                    Async\n                                login\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            getHello\n                        \n                        \n                    \n                \n            \n            \n                \ngetHello()\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get()@Render('index')\n                \n            \n\n            \n                \n                    Defined in src/app.controller.ts:24\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :     { message: string; }\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            getTodos\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    getTodos()\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get('todos')\n                \n            \n\n            \n                \n                    Defined in src/app.controller.ts:35\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :     {}\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            login\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    login(req)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @UseGuards(LocalAuthGuard)@Post('auth/login')\n                \n            \n\n            \n                \n                    Defined in src/app.controller.ts:30\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    req\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     {}\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n\n\n    \n        import {\n  Controller,\n  Get,\n  Post,\n  Render,\n  Request,\n  UseGuards,\n} from '@nestjs/common';\nimport { AuthService } from 'auth/auth.service';\nimport { LocalAuthGuard } from 'auth/local-auth.guard';\nimport { AppService } from './app.service';\nimport { UserService } from 'user/user.service';\n\n@Controller()\nexport class AppController {\n  constructor(\n    private readonly appService: AppService,\n    private readonly authService: AuthService,\n    private readonly userService: UserService,\n  ) {}\n\n  @Get()\n  @Render('index')\n  getHello() {\n    return { message: 'Hello world!' };\n  }\n\n  @UseGuards(LocalAuthGuard)\n  @Post('auth/login')\n  async login(@Request() req) {\n    return this.authService.login(req.user);\n  }\n\n  @Get('todos')\n  async getTodos() {\n    const result = this.appService.getTodos();\n    const todos = await result.toPromise();\n    return { data: todos.data };\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/AppModule.html":{"url":"modules/AppModule.html","title":"module - AppModule","body":"\n                   \n\n\n\n\n    Modules\n    AppModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_AppModule\n\n\n\ncluster_AppModule_imports\n\n\n\ncluster_AppModule_providers\n\n\n\n\nAuthModule\n\nAuthModule\n\n\n\nAppModule\n\nAppModule\n\nAppModule -->\n\nAuthModule->AppModule\n\n\n\n\n\nFeedModule\n\nFeedModule\n\nAppModule -->\n\nFeedModule->AppModule\n\n\n\n\n\nUserModule\n\nUserModule\n\nAppModule -->\n\nUserModule->AppModule\n\n\n\n\n\nAppService\n\nAppService\n\nAppModule -->\n\nAppService->AppModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app.module.ts\n        \n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            AppService\n                        \n                    \n                \n                \n                    Controllers\n                    \n                        \n                            AppController\n                        \n                    \n                \n                \n                    Imports\n                    \n                        \n                            AuthModule\n                        \n                        \n                            FeedModule\n                        \n                        \n                            UserModule\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Module } from '@nestjs/common';\nimport { AppController } from './app.controller';\nimport { AppService } from './app.service';\nimport modules from './config/modules';\n\n@Module({\n  imports: [...modules],\n  controllers: [AppController],\n  providers: [AppService],\n})\nexport class AppModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/AppService.html":{"url":"injectables/AppService.html","title":"injectable - AppService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  AppService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app.service.ts\n        \n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                getHello\n                            \n                            \n                                getTodos\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(httpService: HttpService)\n                    \n                \n                        \n                            \n                                Defined in src/app.service.ts:13\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        httpService\n                                                  \n                                                        \n                                                                    HttpService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            getHello\n                        \n                        \n                    \n                \n            \n            \n                \ngetHello()\n                \n            \n\n\n            \n                \n                    Defined in src/app.service.ts:15\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         string\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            getTodos\n                        \n                        \n                    \n                \n            \n            \n                \ngetTodos()\n                \n            \n\n\n            \n                \n                    Defined in src/app.service.ts:19\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         Observable>\n\n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { HttpService, Injectable } from '@nestjs/common';\nimport { Observable } from 'rxjs';\nimport { AxiosResponse } from 'axios';\n\nexport interface Todo {\n  UserId: number;\n  Id: number;\n  Title: string;\n  Completed: boolean;\n}\n\n@Injectable()\nexport class AppService {\n  constructor(private httpService: HttpService) {}\n  getHello(): string {\n    return 'Hello World!';\n  }\n\n  getTodos(): Observable> {\n    return this.httpService.get('https://jsonplaceholder.typicode.com/todos');\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/AuthModule.html":{"url":"modules/AuthModule.html","title":"module - AuthModule","body":"\n                   \n\n\n\n\n    Modules\n    AuthModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_AuthModule\n\n\n\ncluster_AuthModule_exports\n\n\n\ncluster_AuthModule_imports\n\n\n\ncluster_AuthModule_providers\n\n\n\n\nUserModule\n\nUserModule\n\n\n\nAuthModule\n\nAuthModule\n\nAuthModule -->\n\nUserModule->AuthModule\n\n\n\n\n\nAuthService \n\nAuthService \n\nAuthService  -->\n\nAuthModule->AuthService \n\n\n\n\n\nAuthService\n\nAuthService\n\nAuthModule -->\n\nAuthService->AuthModule\n\n\n\n\n\nJwtStrategy\n\nJwtStrategy\n\nAuthModule -->\n\nJwtStrategy->AuthModule\n\n\n\n\n\nLocalStrategy\n\nLocalStrategy\n\nAuthModule -->\n\nLocalStrategy->AuthModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/auth/auth.module.ts\n        \n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            AuthService\n                        \n                        \n                            JwtStrategy\n                        \n                        \n                            LocalStrategy\n                        \n                    \n                \n                \n                    Imports\n                    \n                        \n                            UserModule\n                        \n                    \n                \n                \n                    Exports\n                    \n                        \n                            AuthService\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Module } from '@nestjs/common';\nimport { ConfigModule } from '@nestjs/config';\nimport { JwtModule } from '@nestjs/jwt';\nimport { PassportModule } from '@nestjs/passport';\nimport { JwtConfigService } from 'config/configuration';\nimport { UserModule } from 'user/user.module';\nimport { AuthService } from './auth.service';\nimport { JwtStrategy } from './jwt.strategy';\nimport { LocalStrategy } from './local.strategy';\n\n@Module({\n  imports: [\n    UserModule,\n    PassportModule,\n    ConfigModule,\n    JwtModule.registerAsync({\n      imports: [ConfigModule],\n      useClass: JwtConfigService,\n    }),\n  ],\n  controllers: [],\n  providers: [AuthService, LocalStrategy, JwtStrategy],\n  exports: [AuthService, JwtModule],\n})\nexport class AuthModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/AuthService.html":{"url":"injectables/AuthService.html","title":"injectable - AuthService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  AuthService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/auth/auth.service.ts\n        \n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                login\n                            \n                            \n                                    Async\n                                validateUser\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(userService: UserService, jwtService: JwtService)\n                    \n                \n                        \n                            \n                                Defined in src/auth/auth.service.ts:7\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        userService\n                                                  \n                                                        \n                                                                        UserService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        jwtService\n                                                  \n                                                        \n                                                                    JwtService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            login\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    login(user)\n                \n            \n\n\n            \n                \n                    Defined in src/auth/auth.service.ts:32\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    user\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     {}\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            validateUser\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    validateUser(username: string, pass: string)\n                \n            \n\n\n            \n                \n                    Defined in src/auth/auth.service.ts:13\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    username\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    pass\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     {}\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@nestjs/common';\nimport { JwtService } from '@nestjs/jwt';\nimport { validatePassword } from 'shared/hashing';\nimport { UserService } from 'user/user.service';\n\n@Injectable()\nexport class AuthService {\n  constructor(\n    private userService: UserService,\n    private jwtService: JwtService,\n  ) {}\n\n  async validateUser(username: string, pass: string) {\n    const user = await this.userService.findOne(username);\n    if (user) {\n      const pwdMatch = await validatePassword(pass, user?.password);\n      if (pwdMatch) {\n        const u = {\n          _id: user._id,\n          email: user.email,\n          isStudent: user.isStudent,\n          studentNumber: user.studentNumber,\n          learningStyle: user.learningStyle,\n        };\n        return u;\n      }\n      return null;\n    }\n    return null;\n  }\n\n  async login(user) {\n    const payload = { id: user._id, isStudent: user.isStudent };\n\n    return {\n      access_token: this.jwtService.sign(payload),\n      user: { ...user },\n    };\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/Author.html":{"url":"interfaces/Author.html","title":"interface - Author","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  Author\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/user/interfaces/user.interface.ts\n        \n\n\n            \n                Extends\n            \n            \n                        User\n            \n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                            Optional\n                                        coursesCreated\n                                \n                                \n                                        title\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        coursesCreated\n                                    \n                                \n                                \n                                    \n                                        coursesCreated:         Array\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         Array\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        title\n                                    \n                                \n                                \n                                    \n                                        title:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { Course } from 'feed/interfaces/feed.interface';\n\nexport interface User {\n  _id?: string;\n  firstname: string;\n  lastname: string;\n  email: string;\n  password: string;\n  isStudent: boolean;\n}\n\nexport interface Author extends User {\n  title: string;\n  coursesCreated?: Array;\n}\n\nexport interface Learner extends User {\n  level: string;\n  studentNumber: string;\n  learningStyle?: Array;\n}\n\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/CollationDocument.html":{"url":"interfaces/CollationDocument.html","title":"interface - CollationDocument","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  CollationDocument\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/providers/PaginateModel.provider.ts\n        \n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        alternate\n                                \n                                \n                                        backwards\n                                \n                                \n                                        caseFirst\n                                \n                                \n                                        caseLevel\n                                \n                                \n                                        locale\n                                \n                                \n                                        maxVariable\n                                \n                                \n                                        numericOrdering\n                                \n                                \n                                        strength\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        alternate\n                                    \n                                \n                                \n                                    \n                                        alternate:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        backwards\n                                    \n                                \n                                \n                                    \n                                        backwards:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        caseFirst\n                                    \n                                \n                                \n                                    \n                                        caseFirst:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        caseLevel\n                                    \n                                \n                                \n                                    \n                                        caseLevel:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        locale\n                                    \n                                \n                                \n                                    \n                                        locale:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        maxVariable\n                                    \n                                \n                                \n                                    \n                                        maxVariable:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        numericOrdering\n                                    \n                                \n                                \n                                    \n                                        numericOrdering:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        strength\n                                    \n                                \n                                \n                                    \n                                        strength:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { Injectable } from '@nestjs/common';\nimport { FilterQuery, Document, Model } from 'mongoose';\n\nexport interface CollationDocument {\n  locale: string;\n  caseLevel: boolean;\n  caseFirst: string;\n  strength: number;\n  numericOrdering: boolean;\n  alternate: string;\n  maxVariable: string;\n  backwards: boolean;\n}\n\nexport interface PopulateOptions {\n  path: any;\n  select: any;\n  model: string | Model;\n  match: any;\n}\n\nexport interface PaginateOptions {\n  select?: Object | string;\n  sort?: Object | string;\n  page?: number;\n  limit?: number;\n  pagination?: boolean;\n  collation?: CollationDocument;\n  populate?: PopulateOptions;\n}\n\nexport interface PaginationResult {\n  docs: Array;\n  totalDocs: number;\n  limit: number;\n  hasPrevPage: boolean;\n  hasNextPage: boolean;\n  page: number;\n  totalPages: number;\n  prevPage: number | null;\n  nextPage: number | null;\n}\n\nexport interface PaginateModelArgs {\n  model: Model;\n  query?: (FilterQuery & Document) | {};\n  options?: PaginateOptions;\n}\n\n// model: Model,\n// query?: (FilterQuery & Document) | {},\n// options: PaginateOptions = {},\n\n@Injectable()\nexport class PaginateModel {\n  public async paginate(args: PaginateModelArgs): Promise {\n    const { model, query, options = {} } = args;\n\n    const {\n      select = {},\n      sort = {},\n      page = 1,\n      limit = 10,\n      pagination = true,\n      collation,\n      populate,\n    } = options;\n    const startIndex = (page - 1) * limit;\n    const endIndex = page * limit;\n    const dataLength = await model.countDocuments().exec();\n    const results: PaginationResult = {\n      docs: [],\n      totalDocs: null,\n      limit,\n      hasPrevPage: startIndex > 0,\n      hasNextPage: endIndex  0 ? page - 1 : null,\n      nextPage: endIndex \n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/Course.html":{"url":"interfaces/Course.html","title":"interface - Course","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  Course\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/feed/interfaces/feed.interface.ts\n        \n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        content\n                                \n                                \n                                        course\n                                \n                                \n                                        courseCode\n                                \n                                \n                                        createdAt\n                                \n                                \n                                        createdBy\n                                \n                                \n                                        learningStyle\n                                \n                                \n                                        level\n                                \n                                \n                                        material\n                                \n                                \n                                        thumbnail\n                                \n                                \n                                        title\n                                \n                                \n                                        unit\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        content\n                                    \n                                \n                                \n                                    \n                                        content:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        course\n                                    \n                                \n                                \n                                    \n                                        course:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        courseCode\n                                    \n                                \n                                \n                                    \n                                        courseCode:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        createdAt\n                                    \n                                \n                                \n                                    \n                                        createdAt:         Date\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         Date\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        createdBy\n                                    \n                                \n                                \n                                    \n                                        createdBy:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        learningStyle\n                                    \n                                \n                                \n                                    \n                                        learningStyle:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        level\n                                    \n                                \n                                \n                                    \n                                        level:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        material\n                                    \n                                \n                                \n                                    \n                                        material:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        thumbnail\n                                    \n                                \n                                \n                                    \n                                        thumbnail:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        title\n                                    \n                                \n                                \n                                    \n                                        title:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        unit\n                                    \n                                \n                                \n                                    \n                                        unit:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { Author } from 'user/interfaces/user.interface';\n\nexport interface Feed {\n  title: string;\n  image: string;\n  author: Author;\n  learningStyle: string;\n}\n\nexport interface Course {\n  title: string;\n  course: string;\n  courseCode: string;\n  level: string;\n  unit: string;\n  content: string;\n  learningStyle: string;\n  thumbnail: string;\n  material: string;\n  createdBy: string;\n  createdAt: Date;\n}\n\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/CreateFeedDTO.html":{"url":"interfaces/CreateFeedDTO.html","title":"interface - CreateFeedDTO","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  CreateFeedDTO\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/feed/dto/create-feed.dto.ts\n        \n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        content\n                                \n                                \n                                        course\n                                \n                                \n                                        courseCode\n                                \n                                \n                                        createdAt\n                                \n                                \n                                        createdBy\n                                \n                                \n                                        learningStyle\n                                \n                                \n                                        level\n                                \n                                \n                                        material\n                                \n                                \n                                        thumbnail\n                                \n                                \n                                        title\n                                \n                                \n                                        unit\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        content\n                                    \n                                \n                                \n                                    \n                                        content:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        course\n                                    \n                                \n                                \n                                    \n                                        course:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        courseCode\n                                    \n                                \n                                \n                                    \n                                        courseCode:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        createdAt\n                                    \n                                \n                                \n                                    \n                                        createdAt:         Date\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         Date\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        createdBy\n                                    \n                                \n                                \n                                    \n                                        createdBy:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        learningStyle\n                                    \n                                \n                                \n                                    \n                                        learningStyle:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        level\n                                    \n                                \n                                \n                                    \n                                        level:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        material\n                                    \n                                \n                                \n                                    \n                                        material:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        thumbnail\n                                    \n                                \n                                \n                                    \n                                        thumbnail:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        title\n                                    \n                                \n                                \n                                    \n                                        title:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        unit\n                                    \n                                \n                                \n                                    \n                                        unit:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        export interface CreateFeedDTO {\n  title: string;\n  course: string;\n  courseCode: string;\n  level: string;\n  unit: string;\n  content: string;\n  learningStyle: string;\n  thumbnail: string;\n  material: string;\n  createdBy: string;\n  createdAt: Date;\n}\n\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/CreateStudentDto.html":{"url":"interfaces/CreateStudentDto.html","title":"interface - CreateStudentDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  CreateStudentDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/user/dto/create-user.dto.ts\n        \n\n\n            \n                Extends\n            \n            \n                        Learner\n            \n\n\n\n\n    \n\n\n    \n        import { Author, Learner, User } from 'user/interfaces/user.interface';\n\nexport interface CreateUserDto extends User {\n  firstname: string;\n  lastname: string;\n  email: string;\n  password: string;\n}\n\nexport interface CreateStudentDto extends Learner {}\n\nexport interface CreateTutorDto extends Author {}\n\nexport type UserDetails = Learner & Author;\n\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/CreateTutorDto.html":{"url":"interfaces/CreateTutorDto.html","title":"interface - CreateTutorDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  CreateTutorDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/user/dto/create-user.dto.ts\n        \n\n\n            \n                Extends\n            \n            \n                        Author\n            \n\n\n\n\n    \n\n\n    \n        import { Author, Learner, User } from 'user/interfaces/user.interface';\n\nexport interface CreateUserDto extends User {\n  firstname: string;\n  lastname: string;\n  email: string;\n  password: string;\n}\n\nexport interface CreateStudentDto extends Learner {}\n\nexport interface CreateTutorDto extends Author {}\n\nexport type UserDetails = Learner & Author;\n\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/CreateUserDto.html":{"url":"interfaces/CreateUserDto.html","title":"interface - CreateUserDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  CreateUserDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/user/dto/create-user.dto.ts\n        \n\n\n            \n                Extends\n            \n            \n                        User\n            \n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        email\n                                \n                                \n                                        firstname\n                                \n                                \n                                        lastname\n                                \n                                \n                                        password\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        email\n                                    \n                                \n                                \n                                    \n                                        email:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        firstname\n                                    \n                                \n                                \n                                    \n                                        firstname:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        lastname\n                                    \n                                \n                                \n                                    \n                                        lastname:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        password\n                                    \n                                \n                                \n                                    \n                                        password:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { Author, Learner, User } from 'user/interfaces/user.interface';\n\nexport interface CreateUserDto extends User {\n  firstname: string;\n  lastname: string;\n  email: string;\n  password: string;\n}\n\nexport interface CreateStudentDto extends Learner {}\n\nexport interface CreateTutorDto extends Author {}\n\nexport type UserDetails = Learner & Author;\n\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/Feed.html":{"url":"classes/Feed.html","title":"class - Feed","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  Feed\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/feed/schemas/feed.schema.ts\n        \n\n\n\n            \n                Implements\n            \n            \n                            Course\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                content\n                            \n                            \n                                course\n                            \n                            \n                                courseCode\n                            \n                            \n                                createdAt\n                            \n                            \n                                createdBy\n                            \n                            \n                                learningStyle\n                            \n                            \n                                level\n                            \n                            \n                                material\n                            \n                            \n                                thumbnail\n                            \n                            \n                                title\n                            \n                            \n                                unit\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            content\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Prop()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/feed/schemas/feed.schema.ts:25\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            course\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Prop()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/feed/schemas/feed.schema.ts:16\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            courseCode\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Prop()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/feed/schemas/feed.schema.ts:13\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            createdAt\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Date\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Prop({type: Date, default: undefined})\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/feed/schemas/feed.schema.ts:40\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            createdBy\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Prop()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/feed/schemas/feed.schema.ts:37\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            learningStyle\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Prop()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/feed/schemas/feed.schema.ts:28\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            level\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Prop()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/feed/schemas/feed.schema.ts:19\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            material\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Prop()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/feed/schemas/feed.schema.ts:34\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            thumbnail\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Prop()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/feed/schemas/feed.schema.ts:31\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            title\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Prop()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/feed/schemas/feed.schema.ts:10\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            unit\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Prop()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/feed/schemas/feed.schema.ts:22\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { Prop, Schema, SchemaFactory } from '@nestjs/mongoose';\nimport { Course } from 'feed/interfaces/feed.interface';\nimport { Document } from 'mongoose';\n\nexport type FeedDocument = Feed & Document;\n\n@Schema()\nexport class Feed implements Course {\n  @Prop()\n  title: string;\n\n  @Prop()\n  courseCode: string;\n\n  @Prop()\n  course: string;\n\n  @Prop()\n  level: string;\n\n  @Prop()\n  unit: string;\n\n  @Prop()\n  content: string;\n\n  @Prop()\n  learningStyle: string;\n\n  @Prop()\n  thumbnail: string;\n\n  @Prop()\n  material: string;\n\n  @Prop()\n  createdBy: string;\n\n  @Prop({ type: Date, default: Date.now() })\n  createdAt: Date;\n}\n\nexport const FeedSchema = SchemaFactory.createForClass(Feed);\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"controllers/FeedController.html":{"url":"controllers/FeedController.html","title":"controller - FeedController","body":"\n                   \n\n\n\n\n\n\n  Controllers\n  FeedController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/feed/feed.controller.ts\n        \n\n            \n                Prefix\n            \n            \n                /feeds\n            \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                getFeed\n                            \n                            \n                                    Async\n                                getFeeds\n                            \n                            \n                                    Async\n                                newFeed\n                            \n                            \n                                    Async\n                                removeFeed\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            getFeed\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    getFeed(params: literal type)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get(':title')\n                \n            \n\n            \n                \n                    Defined in src/feed/feed.controller.ts:57\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    params\n                                    \n                                            literal type\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     {}\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            getFeeds\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    getFeeds(queries: literal type)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get()\n                \n            \n\n            \n                \n                    Defined in src/feed/feed.controller.ts:31\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    queries\n                                    \n                                            literal type\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            newFeed\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    newFeed(body: CreateFeedDTO, files: Array)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Post()@UsePipes(new JoiValidationPipe())@UseInterceptors(undefined)\n                \n            \n\n            \n                \n                    Defined in src/feed/feed.controller.ts:77\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    body\n                                    \n                                                CreateFeedDTO\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    files\n                                    \n                                            Array\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     {}\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            removeFeed\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    removeFeed(params)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Delete(':id')\n                \n            \n\n            \n                \n                    Defined in src/feed/feed.controller.ts:110\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    params\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     {}\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n\n\n    \n        import {\n  BadRequestException,\n  Body,\n  Controller,\n  Delete,\n  Get,\n  Param,\n  Post,\n  Query,\n  UploadedFiles,\n  UseInterceptors,\n  UsePipes,\n} from '@nestjs/common';\nimport { ConfigService } from '@nestjs/config';\nimport { FileFieldsInterceptor } from '@nestjs/platform-express';\nimport handleFileStorage from 'shared/handleFileStorage';\nimport { JoiValidationPipe } from 'shared/joiValidation.pipe';\nimport { CreateFeedDTO } from './dto/create-feed.dto';\nimport { FeedService } from './feed.service';\nimport { IFeedController } from './interfaces/feed-controller.interface';\nimport { createFeedSchema } from './schemas/validation/create-feed.schema';\n\n@Controller('/feeds')\nexport class FeedController implements IFeedController {\n  constructor(\n    private readonly feedService: FeedService,\n    private configService: ConfigService,\n  ) {}\n\n  @Get()\n  async getFeeds(\n    @Query() queries: { q: string; learningStyle: string; page: string },\n  ): Promise {\n    const query = queries?.q?.replace(/-/g, ' ');\n    const ls = queries?.learningStyle?.replace(/-/g, ' ');\n    if (queries && queries.q) {\n      const feeds = await this.feedService.fetchFeedsByQuery({\n        query,\n        page: parseInt(queries.page),\n      });\n      return feeds;\n    }\n    if (queries && queries.learningStyle) {\n      const feeds = await this.feedService.fetchFeedsByLearningStyle({\n        learningStyle: ls,\n        page: parseInt(queries.page),\n      });\n      return feeds;\n    }\n    const feeds = await this.feedService.fetchFeeds({\n      page: parseInt(queries.page),\n    });\n    return feeds;\n  }\n\n  @Get(':title')\n  async getFeed(@Param() params: { title: string }) {\n    const { title } = params;\n    const q = title.replace(/-/g, ' ');\n    const feed = await this.feedService.fetchFeedsByTitle(q);\n    return { feed };\n  }\n\n  @Post()\n  @UsePipes(new JoiValidationPipe(createFeedSchema))\n  @UseInterceptors(\n    FileFieldsInterceptor(\n      [\n        { name: 'thumbnail', maxCount: 1 },\n        { name: 'material', maxCount: 1 },\n      ],\n      {\n        storage: handleFileStorage.storage(),\n      },\n    ),\n  )\n  async newFeed(\n    @Body() body: CreateFeedDTO,\n    @UploadedFiles() files: Array,\n  ) {\n    try {\n      const getFileName = (fieldName: string) => {\n        if (!files || !files[fieldName]) {\n          throw new BadRequestException(\n            `Please upload a file for ${fieldName}`,\n          );\n        }\n        const file = files[fieldName][0];\n        return file.filename;\n      };\n      const fileNames = {\n        thumbnail: getFileName('thumbnail'),\n        material: getFileName('material'),\n      };\n\n      const data = {\n        ...body,\n        ...fileNames,\n      };\n\n      const result = await this.feedService.createFeed(data);\n\n      return { result };\n    } catch (error) {\n      throw new BadRequestException(error.message);\n    }\n  }\n\n  @Delete(':id')\n  async removeFeed(@Param() params) {\n    try {\n      const result = await this.feedService.deleteFeed(params.id);\n      return { success: true, result };\n    } catch (error) {\n      throw new BadRequestException(error.message);\n    }\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/FeedModule.html":{"url":"modules/FeedModule.html","title":"module - FeedModule","body":"\n                   \n\n\n\n\n    Modules\n    FeedModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_FeedModule\n\n\n\ncluster_FeedModule_providers\n\n\n\n\nFeedService\n\nFeedService\n\n\n\nFeedModule\n\nFeedModule\n\nFeedModule -->\n\nFeedService->FeedModule\n\n\n\n\n\nPaginateModel\n\nPaginateModel\n\nFeedModule -->\n\nPaginateModel->FeedModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/feed/feed.module.ts\n        \n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            FeedService\n                        \n                        \n                            PaginateModel\n                        \n                    \n                \n                \n                    Controllers\n                    \n                        \n                            FeedController\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Module } from '@nestjs/common';\nimport { ModelDefinition, MongooseModule } from '@nestjs/mongoose';\nimport { PaginateModel } from 'providers/PaginateModel.provider';\nimport { FeedController } from './feed.controller';\nimport { FeedService } from './feed.service';\nimport { Feed, FeedSchema } from './schemas/feed.schema';\n\nconst models: ModelDefinition[] = [\n  {\n    name: Feed.name,\n    schema: FeedSchema,\n  },\n];\n\n@Module({\n  imports: [MongooseModule.forFeature(models)],\n  controllers: [FeedController],\n  providers: [FeedService, PaginateModel],\n  exports: [],\n})\nexport class FeedModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/FeedService.html":{"url":"injectables/FeedService.html","title":"injectable - FeedService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  FeedService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/feed/feed.service.ts\n        \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                paginate\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                createFeed\n                            \n                            \n                                    Async\n                                deleteFeed\n                            \n                            \n                                    Async\n                                fetchFeeds\n                            \n                            \n                                    Async\n                                fetchFeedsByLearningStyle\n                            \n                            \n                                    Async\n                                fetchFeedsByQuery\n                            \n                            \n                                    Async\n                                fetchFeedsByTitle\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(feedModel: Model, paginateModel: PaginateModel)\n                    \n                \n                        \n                            \n                                Defined in src/feed/feed.service.ts:16\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        feedModel\n                                                  \n                                                        \n                                                                        Model\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        paginateModel\n                                                  \n                                                        \n                                                                        PaginateModel\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            createFeed\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    createFeed(body: CreateFeedDTO)\n                \n            \n\n\n            \n                \n                    Defined in src/feed/feed.service.ts:78\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    body\n                                    \n                                                CreateFeedDTO\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     {}\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            deleteFeed\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    deleteFeed(id: string)\n                \n            \n\n\n            \n                \n                    Defined in src/feed/feed.service.ts:95\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     {}\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            fetchFeeds\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    fetchFeeds(arg: FetchArg)\n                \n            \n\n\n            \n                \n                    Defined in src/feed/feed.service.ts:24\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    arg\n                                    \n                                                FetchArg\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     {}\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            fetchFeedsByLearningStyle\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    fetchFeedsByLearningStyle(arg: FetchArg)\n                \n            \n\n\n            \n                \n                    Defined in src/feed/feed.service.ts:57\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    arg\n                                    \n                                                FetchArg\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     {}\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            fetchFeedsByQuery\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    fetchFeedsByQuery(arg: FetchArg)\n                \n            \n\n\n            \n                \n                    Defined in src/feed/feed.service.ts:35\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    arg\n                                    \n                                                FetchArg\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     {}\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            fetchFeedsByTitle\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    fetchFeedsByTitle(title: string)\n                \n            \n\n\n            \n                \n                    Defined in src/feed/feed.service.ts:69\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    title\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     {}\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            paginate\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         PaginateModel\n\n                        \n                    \n                        \n                            \n                                    Defined in src/feed/feed.service.ts:16\n                            \n                        \n\n\n            \n        \n\n\n    \n\n\n    \n        import { Injectable } from '@nestjs/common';\nimport { InjectModel } from '@nestjs/mongoose';\nimport { Model } from 'mongoose';\nimport { PaginateModel } from 'providers/PaginateModel.provider';\nimport { CreateFeedDTO } from './dto/create-feed.dto';\nimport { Feed, FeedDocument } from './schemas/feed.schema';\n\ninterface FetchArg {\n  query?: string;\n  learningStyle?: string;\n  page?: number;\n}\n\n@Injectable()\nexport class FeedService {\n  paginate: PaginateModel;\n  constructor(\n    @InjectModel(Feed.name) private feedModel: Model,\n    private paginateModel: PaginateModel,\n  ) {\n    this.paginate = this.paginateModel;\n  }\n\n  async fetchFeeds(arg: FetchArg) {\n    try {\n      return await this.paginateModel.paginate({\n        model: this.feedModel,\n        options: { page: arg.page },\n      });\n    } catch (error) {\n      console.log(error);\n    }\n  }\n\n  async fetchFeedsByQuery(arg: FetchArg) {\n    try {\n      const re = new RegExp(arg.query, 'i');\n      return await this.paginateModel.paginate({\n        model: this.feedModel,\n        query: {\n          $or: [\n            { learningStyle: { $regex: re } },\n            { title: { $regex: re } },\n            { course: { $regex: re } },\n            { level: { $regex: re } },\n            { unit: { $regex: re } },\n            { content: { $regex: re } },\n          ],\n        },\n        options: { page: arg.page },\n      });\n    } catch (error) {\n      console.log(error);\n    }\n  }\n\n  async fetchFeedsByLearningStyle(arg: FetchArg) {\n    try {\n      return await this.paginateModel.paginate({\n        model: this.feedModel,\n        query: { learningStyle: arg.learningStyle },\n        options: { page: arg.page },\n      });\n    } catch (error) {\n      console.log(error);\n    }\n  }\n\n  async fetchFeedsByTitle(title: string) {\n    try {\n      return await this.feedModel.findOne({ title });\n    } catch (error) {\n      console.log(error);\n      throw new Error(error.message);\n    }\n  }\n\n  async createFeed(body: CreateFeedDTO) {\n    try {\n      let response: any = null;\n      const title = body.title.toLowerCase();\n      const feedExist = await this.feedModel.findOne({ title });\n      if (feedExist) {\n        throw new Error('A feed with this title exists');\n      }\n      const newFeed = new this.feedModel({ ...body, title });\n      const savedFeed = await newFeed.save();\n      response = savedFeed;\n      return response;\n    } catch (error) {\n      throw new Error(error.message);\n    }\n  }\n\n  async deleteFeed(id: string) {\n    try {\n      const deletedFeed = await this.feedModel.findByIdAndRemove(id);\n      if (!deletedFeed) {\n        throw new Error(`Unable to delete. Document not found`);\n      }\n      return deletedFeed;\n    } catch (error) {\n      throw new Error(error.message);\n    }\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/FetchArg.html":{"url":"interfaces/FetchArg.html","title":"interface - FetchArg","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  FetchArg\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/feed/feed.service.ts\n        \n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                            Optional\n                                        learningStyle\n                                \n                                \n                                            Optional\n                                        page\n                                \n                                \n                                            Optional\n                                        query\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        learningStyle\n                                    \n                                \n                                \n                                    \n                                        learningStyle:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        page\n                                    \n                                \n                                \n                                    \n                                        page:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        query\n                                    \n                                \n                                \n                                    \n                                        query:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { Injectable } from '@nestjs/common';\nimport { InjectModel } from '@nestjs/mongoose';\nimport { Model } from 'mongoose';\nimport { PaginateModel } from 'providers/PaginateModel.provider';\nimport { CreateFeedDTO } from './dto/create-feed.dto';\nimport { Feed, FeedDocument } from './schemas/feed.schema';\n\ninterface FetchArg {\n  query?: string;\n  learningStyle?: string;\n  page?: number;\n}\n\n@Injectable()\nexport class FeedService {\n  paginate: PaginateModel;\n  constructor(\n    @InjectModel(Feed.name) private feedModel: Model,\n    private paginateModel: PaginateModel,\n  ) {\n    this.paginate = this.paginateModel;\n  }\n\n  async fetchFeeds(arg: FetchArg) {\n    try {\n      return await this.paginateModel.paginate({\n        model: this.feedModel,\n        options: { page: arg.page },\n      });\n    } catch (error) {\n      console.log(error);\n    }\n  }\n\n  async fetchFeedsByQuery(arg: FetchArg) {\n    try {\n      const re = new RegExp(arg.query, 'i');\n      return await this.paginateModel.paginate({\n        model: this.feedModel,\n        query: {\n          $or: [\n            { learningStyle: { $regex: re } },\n            { title: { $regex: re } },\n            { course: { $regex: re } },\n            { level: { $regex: re } },\n            { unit: { $regex: re } },\n            { content: { $regex: re } },\n          ],\n        },\n        options: { page: arg.page },\n      });\n    } catch (error) {\n      console.log(error);\n    }\n  }\n\n  async fetchFeedsByLearningStyle(arg: FetchArg) {\n    try {\n      return await this.paginateModel.paginate({\n        model: this.feedModel,\n        query: { learningStyle: arg.learningStyle },\n        options: { page: arg.page },\n      });\n    } catch (error) {\n      console.log(error);\n    }\n  }\n\n  async fetchFeedsByTitle(title: string) {\n    try {\n      return await this.feedModel.findOne({ title });\n    } catch (error) {\n      console.log(error);\n      throw new Error(error.message);\n    }\n  }\n\n  async createFeed(body: CreateFeedDTO) {\n    try {\n      let response: any = null;\n      const title = body.title.toLowerCase();\n      const feedExist = await this.feedModel.findOne({ title });\n      if (feedExist) {\n        throw new Error('A feed with this title exists');\n      }\n      const newFeed = new this.feedModel({ ...body, title });\n      const savedFeed = await newFeed.save();\n      response = savedFeed;\n      return response;\n    } catch (error) {\n      throw new Error(error.message);\n    }\n  }\n\n  async deleteFeed(id: string) {\n    try {\n      const deletedFeed = await this.feedModel.findByIdAndRemove(id);\n      if (!deletedFeed) {\n        throw new Error(`Unable to delete. Document not found`);\n      }\n      return deletedFeed;\n    } catch (error) {\n      throw new Error(error.message);\n    }\n  }\n}\n\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/IFeedController.html":{"url":"interfaces/IFeedController.html","title":"interface - IFeedController","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  IFeedController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/feed/interfaces/feed-controller.interface.ts\n        \n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        getFeed\n                                \n                                \n                                        getFeeds\n                                \n                                \n                                        removeFeed\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        getFeed\n                                    \n                                \n                                \n                                    \n                                        getFeed:         function\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         function\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        getFeeds\n                                    \n                                \n                                \n                                    \n                                        getFeeds:         function\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         function\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        removeFeed\n                                    \n                                \n                                \n                                    \n                                        removeFeed:         function\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         function\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        export interface IFeedController {\n  getFeeds: (queries: { q: string; learningStyle: string }) => Promise;\n  getFeed: (params: { title: string }) => Promise;\n  removeFeed: (id: string) => Promise;\n}\n\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/IFeedService.html":{"url":"interfaces/IFeedService.html","title":"interface - IFeedService","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  IFeedService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/feed/interfaces/feed-service.interface.ts\n        \n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        deleteFeed\n                                \n                                \n                                        fetchFeed\n                                \n                                \n                                        fetchFeeds\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        deleteFeed\n                                    \n                                \n                                \n                                    \n                                        deleteFeed:         function\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         function\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        fetchFeed\n                                    \n                                \n                                \n                                    \n                                        fetchFeed:         function\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         function\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        fetchFeeds\n                                    \n                                \n                                \n                                    \n                                        fetchFeeds:         function\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         function\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        export interface IFeedService {\n  fetchFeeds: () => Promise;\n  fetchFeed: () => Promise;\n  deleteFeed: () => Promise;\n}\n\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/JoiValidationPipe.html":{"url":"classes/JoiValidationPipe.html","title":"class - JoiValidationPipe","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  JoiValidationPipe\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/shared/joiValidation.pipe.ts\n        \n\n\n\n            \n                Implements\n            \n            \n                            PipeTransform\n            \n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                transform\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(schema: ObjectSchema)\n                    \n                \n                        \n                            \n                                Defined in src/shared/joiValidation.pipe.ts:8\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        schema\n                                                  \n                                                        \n                                                                    ObjectSchema\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            transform\n                        \n                        \n                    \n                \n            \n            \n                \ntransform(value: any, metadata: ArgumentMetadata)\n                \n            \n\n\n            \n                \n                    Defined in src/shared/joiValidation.pipe.ts:12\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    value\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    metadata\n                                    \n                                            ArgumentMetadata\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import {\n  ArgumentMetadata,\n  BadRequestException,\n  PipeTransform,\n} from '@nestjs/common';\nimport { ObjectSchema } from 'joi';\n\nexport class JoiValidationPipe implements PipeTransform {\n  constructor(private schema: ObjectSchema) {}\n\n  // eslint-disable-next-line @typescript-eslint/no-unused-vars\n  transform(value: any, metadata: ArgumentMetadata) {\n    const { error } = this.schema.validate(value);\n    if (error) {\n      throw new BadRequestException(error.message);\n    }\n    return value;\n  }\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/JwtAuthGuard.html":{"url":"injectables/JwtAuthGuard.html","title":"injectable - JwtAuthGuard","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  JwtAuthGuard\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/auth/jwt-auth.guard.ts\n        \n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                canActivate\n                            \n                            \n                                handleRequest\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            canActivate\n                        \n                        \n                    \n                \n            \n            \n                \ncanActivate(context: ExecutionContext)\n                \n            \n\n\n            \n                \n                    Defined in src/auth/jwt-auth.guard.ts:11\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    context\n                                    \n                                            ExecutionContext\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            handleRequest\n                        \n                        \n                    \n                \n            \n            \n                \nhandleRequest(err, user, info)\n                \n            \n\n\n            \n                \n                    Defined in src/auth/jwt-auth.guard.ts:16\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    err\n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    user\n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    info\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import {\n  ExecutionContext,\n  HttpStatus,\n  Injectable,\n  UnauthorizedException,\n} from '@nestjs/common';\nimport { AuthGuard } from '@nestjs/passport';\n\n@Injectable()\nexport class JwtAuthGuard extends AuthGuard('jwt') {\n  canActivate(context: ExecutionContext) {\n    // console.log(context);\n    return super.canActivate(context);\n  }\n\n  handleRequest(err, user, info) {\n    if (err || !user) {\n      throw (\n        err ||\n        new UnauthorizedException(\n          {\n            statusCode: HttpStatus.UNAUTHORIZED,\n            message: 'Unauthorized',\n            info: info.message,\n          },\n          'An Error occured',\n        )\n      );\n    }\n    return user;\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/JwtConfigService.html":{"url":"injectables/JwtConfigService.html","title":"injectable - JwtConfigService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  JwtConfigService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/config/configuration.ts\n        \n\n\n\n            \n                Example\n            \n            \n            \n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                createJwtOptions\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(configService: ConfigService)\n                    \n                \n                        \n                            \n                                Defined in src/config/configuration.ts:77\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        configService\n                                                  \n                                                        \n                                                                    ConfigService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            createJwtOptions\n                        \n                        \n                    \n                \n            \n            \n                \ncreateJwtOptions()\n                \n            \n\n\n            \n                \n                    Defined in src/config/configuration.ts:79\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :     JwtModuleOptions\n\n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@nestjs/common';\nimport { ConfigService } from '@nestjs/config';\nimport {\n  MongooseModuleOptions,\n  MongooseOptionsFactory,\n} from '@nestjs/mongoose';\nimport {\n  MulterModuleOptions,\n  MulterOptionsFactory,\n} from '@nestjs/platform-express';\nimport { diskStorage } from 'multer';\nimport { extname } from 'path';\nimport * as _ from 'lodash';\nimport { JwtModuleOptions, JwtOptionsFactory } from '@nestjs/jwt';\n\n// config contants\nexport default () => ({\n  port: parseInt(process.env.PORT, 10) || 5000,\n  database:\n    process.env.ENVIRONMENT === 'development'\n      ? process.env.MONGODB_URI_DEV\n      : process.env.MONGODB_URI,\n  upload_path: './public/upload',\n  jwtSecret: process.env.JWTSECRET,\n  environment: process.env.ENVIRONMENT,\n});\n\n// get filename of file\nexport const getFilename = (str: string) => _.split(str, '.')[0];\n\n/**\n * @class MongooseConfigService\n * @description Mongoose configuration service - Mongodb setup\n */\n@Injectable()\nexport class MongooseConfigService implements MongooseOptionsFactory {\n  constructor(private configService: ConfigService) {}\n  createMongooseOptions(): MongooseModuleOptions {\n    return {\n      uri: this.configService.get('database'),\n      useFindAndModify: false,\n      useUnifiedTopology: true,\n      useNewUrlParser: true,\n    };\n  }\n}\n\n/**\n * @class MulterConfigService\n * @description Multer configuration service -\n * Configuration for handling upload file\n *\n */\n@Injectable()\nexport class MulterConfigService implements MulterOptionsFactory {\n  constructor(private configService: ConfigService) {}\n  createMulterOptions(): MulterModuleOptions {\n    return {\n      storage: diskStorage({\n        destination: this.configService.get('upload_path'),\n        filename: (req, file, cb) => {\n          const name = getFilename(file.originalname);\n          return cb(null, `${name}${extname(file.originalname)}`);\n        },\n      }),\n    };\n  }\n}\n\n/**\n * @class JwtConfigService\n * @description Jwt configuration service -\n * Configuration for setting jwt options\n *\n */\n@Injectable()\nexport class JwtConfigService implements JwtOptionsFactory {\n  constructor(private configService: ConfigService) {}\n  createJwtOptions(): JwtModuleOptions {\n    return {\n      secret: this.configService.get('jwtSecret'),\n      signOptions: {\n        expiresIn: '1hr',\n      },\n    };\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/JwtStrategy.html":{"url":"injectables/JwtStrategy.html","title":"injectable - JwtStrategy","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  JwtStrategy\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/auth/jwt.strategy.ts\n        \n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                validate\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(configService: ConfigService)\n                    \n                \n                        \n                            \n                                Defined in src/auth/jwt.strategy.ts:7\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        configService\n                                                  \n                                                        \n                                                                    ConfigService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            validate\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    validate(payload: any)\n                \n            \n\n\n            \n                \n                    Defined in src/auth/jwt.strategy.ts:16\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    payload\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     {}\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@nestjs/common';\nimport { ConfigService } from '@nestjs/config';\nimport { PassportStrategy } from '@nestjs/passport';\nimport { ExtractJwt, Strategy } from 'passport-jwt';\n\n@Injectable()\nexport class JwtStrategy extends PassportStrategy(Strategy) {\n  constructor(private configService: ConfigService) {\n    super({\n      jwtFromRequest: ExtractJwt.fromAuthHeaderAsBearerToken(),\n      ignoreExpiration: false,\n      secretOrKey: process.env.JWTSECRET,\n    });\n  }\n\n  async validate(payload: any) {\n    return { id: payload.id, isStudent: payload.isStudent };\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/Learner.html":{"url":"interfaces/Learner.html","title":"interface - Learner","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  Learner\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/user/interfaces/user.interface.ts\n        \n\n\n            \n                Extends\n            \n            \n                        User\n            \n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                            Optional\n                                        learningStyle\n                                \n                                \n                                        level\n                                \n                                \n                                        studentNumber\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        learningStyle\n                                    \n                                \n                                \n                                    \n                                        learningStyle:     Array\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     Array\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        level\n                                    \n                                \n                                \n                                    \n                                        level:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        studentNumber\n                                    \n                                \n                                \n                                    \n                                        studentNumber:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { Course } from 'feed/interfaces/feed.interface';\n\nexport interface User {\n  _id?: string;\n  firstname: string;\n  lastname: string;\n  email: string;\n  password: string;\n  isStudent: boolean;\n}\n\nexport interface Author extends User {\n  title: string;\n  coursesCreated?: Array;\n}\n\nexport interface Learner extends User {\n  level: string;\n  studentNumber: string;\n  learningStyle?: Array;\n}\n\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/LocalAuthGuard.html":{"url":"injectables/LocalAuthGuard.html","title":"injectable - LocalAuthGuard","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  LocalAuthGuard\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/auth/local-auth.guard.ts\n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { Injectable } from '@nestjs/common';\nimport { AuthGuard } from '@nestjs/passport';\n\n@Injectable()\nexport class LocalAuthGuard extends AuthGuard('local') {}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/LocalStrategy.html":{"url":"injectables/LocalStrategy.html","title":"injectable - LocalStrategy","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  LocalStrategy\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/auth/local.strategy.ts\n        \n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                validate\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(authService: AuthService)\n                    \n                \n                        \n                            \n                                Defined in src/auth/local.strategy.ts:7\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        authService\n                                                  \n                                                        \n                                                                        AuthService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            validate\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    validate(username: string, password: string)\n                \n            \n\n\n            \n                \n                    Defined in src/auth/local.strategy.ts:12\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    username\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    password\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     {}\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable, UnauthorizedException } from '@nestjs/common';\nimport { PassportStrategy } from '@nestjs/passport';\nimport { Strategy } from 'passport-local';\nimport { AuthService } from './auth.service';\n\n@Injectable()\nexport class LocalStrategy extends PassportStrategy(Strategy) {\n  constructor(private authService: AuthService) {\n    super();\n  }\n\n  async validate(username: string, password: string) {\n    const user = await this.authService.validateUser(username, password);\n    if (!user) {\n      throw new UnauthorizedException('Incorrect username or password');\n    }\n    return user;\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/Material.html":{"url":"classes/Material.html","title":"class - Material","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  Material\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/user/schemas/files.schema.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                contentType\n                            \n                            \n                                data\n                            \n                            \n                                filename\n                            \n                            \n                                othernames\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            contentType\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Prop()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/user/schemas/files.schema.ts:17\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            data\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     Buffer\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Prop({type: 'Buffer'})\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/user/schemas/files.schema.ts:11\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            filename\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Prop()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/user/schemas/files.schema.ts:14\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            othernames\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Date\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Prop({type: Date, default: undefined})\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/user/schemas/files.schema.ts:20\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { Prop, Schema, SchemaFactory } from '@nestjs/mongoose';\nimport { Document } from 'mongoose';\n\nexport type MaterialDocument = Material & Document;\n\n// export interface CreateMaterialDto extends Material {}\n\n@Schema()\nexport class Material {\n  @Prop({ type: 'Buffer' })\n  data: Buffer;\n\n  @Prop()\n  filename: string;\n\n  @Prop()\n  contentType: string;\n\n  @Prop({ type: Date, default: Date.now() })\n  othernames: Date;\n}\n\nexport const MaterialSchema = SchemaFactory.createForClass(Material);\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/MongooseConfigService.html":{"url":"injectables/MongooseConfigService.html","title":"injectable - MongooseConfigService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  MongooseConfigService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/config/configuration.ts\n        \n\n\n\n            \n                Example\n            \n            \n            \n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                createMongooseOptions\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(configService: ConfigService)\n                    \n                \n                        \n                            \n                                Defined in src/config/configuration.ts:36\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        configService\n                                                  \n                                                        \n                                                                    ConfigService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            createMongooseOptions\n                        \n                        \n                    \n                \n            \n            \n                \ncreateMongooseOptions()\n                \n            \n\n\n            \n                \n                    Defined in src/config/configuration.ts:38\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :     MongooseModuleOptions\n\n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@nestjs/common';\nimport { ConfigService } from '@nestjs/config';\nimport {\n  MongooseModuleOptions,\n  MongooseOptionsFactory,\n} from '@nestjs/mongoose';\nimport {\n  MulterModuleOptions,\n  MulterOptionsFactory,\n} from '@nestjs/platform-express';\nimport { diskStorage } from 'multer';\nimport { extname } from 'path';\nimport * as _ from 'lodash';\nimport { JwtModuleOptions, JwtOptionsFactory } from '@nestjs/jwt';\n\n// config contants\nexport default () => ({\n  port: parseInt(process.env.PORT, 10) || 5000,\n  database:\n    process.env.ENVIRONMENT === 'development'\n      ? process.env.MONGODB_URI_DEV\n      : process.env.MONGODB_URI,\n  upload_path: './public/upload',\n  jwtSecret: process.env.JWTSECRET,\n  environment: process.env.ENVIRONMENT,\n});\n\n// get filename of file\nexport const getFilename = (str: string) => _.split(str, '.')[0];\n\n/**\n * @class MongooseConfigService\n * @description Mongoose configuration service - Mongodb setup\n */\n@Injectable()\nexport class MongooseConfigService implements MongooseOptionsFactory {\n  constructor(private configService: ConfigService) {}\n  createMongooseOptions(): MongooseModuleOptions {\n    return {\n      uri: this.configService.get('database'),\n      useFindAndModify: false,\n      useUnifiedTopology: true,\n      useNewUrlParser: true,\n    };\n  }\n}\n\n/**\n * @class MulterConfigService\n * @description Multer configuration service -\n * Configuration for handling upload file\n *\n */\n@Injectable()\nexport class MulterConfigService implements MulterOptionsFactory {\n  constructor(private configService: ConfigService) {}\n  createMulterOptions(): MulterModuleOptions {\n    return {\n      storage: diskStorage({\n        destination: this.configService.get('upload_path'),\n        filename: (req, file, cb) => {\n          const name = getFilename(file.originalname);\n          return cb(null, `${name}${extname(file.originalname)}`);\n        },\n      }),\n    };\n  }\n}\n\n/**\n * @class JwtConfigService\n * @description Jwt configuration service -\n * Configuration for setting jwt options\n *\n */\n@Injectable()\nexport class JwtConfigService implements JwtOptionsFactory {\n  constructor(private configService: ConfigService) {}\n  createJwtOptions(): JwtModuleOptions {\n    return {\n      secret: this.configService.get('jwtSecret'),\n      signOptions: {\n        expiresIn: '1hr',\n      },\n    };\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/MulterConfigService.html":{"url":"injectables/MulterConfigService.html","title":"injectable - MulterConfigService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  MulterConfigService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/config/configuration.ts\n        \n\n\n\n            \n                Example\n            \n            \n            \n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                createMulterOptions\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(configService: ConfigService)\n                    \n                \n                        \n                            \n                                Defined in src/config/configuration.ts:55\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        configService\n                                                  \n                                                        \n                                                                    ConfigService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            createMulterOptions\n                        \n                        \n                    \n                \n            \n            \n                \ncreateMulterOptions()\n                \n            \n\n\n            \n                \n                    Defined in src/config/configuration.ts:57\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :     MulterModuleOptions\n\n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@nestjs/common';\nimport { ConfigService } from '@nestjs/config';\nimport {\n  MongooseModuleOptions,\n  MongooseOptionsFactory,\n} from '@nestjs/mongoose';\nimport {\n  MulterModuleOptions,\n  MulterOptionsFactory,\n} from '@nestjs/platform-express';\nimport { diskStorage } from 'multer';\nimport { extname } from 'path';\nimport * as _ from 'lodash';\nimport { JwtModuleOptions, JwtOptionsFactory } from '@nestjs/jwt';\n\n// config contants\nexport default () => ({\n  port: parseInt(process.env.PORT, 10) || 5000,\n  database:\n    process.env.ENVIRONMENT === 'development'\n      ? process.env.MONGODB_URI_DEV\n      : process.env.MONGODB_URI,\n  upload_path: './public/upload',\n  jwtSecret: process.env.JWTSECRET,\n  environment: process.env.ENVIRONMENT,\n});\n\n// get filename of file\nexport const getFilename = (str: string) => _.split(str, '.')[0];\n\n/**\n * @class MongooseConfigService\n * @description Mongoose configuration service - Mongodb setup\n */\n@Injectable()\nexport class MongooseConfigService implements MongooseOptionsFactory {\n  constructor(private configService: ConfigService) {}\n  createMongooseOptions(): MongooseModuleOptions {\n    return {\n      uri: this.configService.get('database'),\n      useFindAndModify: false,\n      useUnifiedTopology: true,\n      useNewUrlParser: true,\n    };\n  }\n}\n\n/**\n * @class MulterConfigService\n * @description Multer configuration service -\n * Configuration for handling upload file\n *\n */\n@Injectable()\nexport class MulterConfigService implements MulterOptionsFactory {\n  constructor(private configService: ConfigService) {}\n  createMulterOptions(): MulterModuleOptions {\n    return {\n      storage: diskStorage({\n        destination: this.configService.get('upload_path'),\n        filename: (req, file, cb) => {\n          const name = getFilename(file.originalname);\n          return cb(null, `${name}${extname(file.originalname)}`);\n        },\n      }),\n    };\n  }\n}\n\n/**\n * @class JwtConfigService\n * @description Jwt configuration service -\n * Configuration for setting jwt options\n *\n */\n@Injectable()\nexport class JwtConfigService implements JwtOptionsFactory {\n  constructor(private configService: ConfigService) {}\n  createJwtOptions(): JwtModuleOptions {\n    return {\n      secret: this.configService.get('jwtSecret'),\n      signOptions: {\n        expiresIn: '1hr',\n      },\n    };\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/PaginateModel.html":{"url":"injectables/PaginateModel.html","title":"injectable - PaginateModel","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  PaginateModel\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/providers/PaginateModel.provider.ts\n        \n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                    Async\n                                paginate\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            Async\n                            paginate\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    paginate(args: PaginateModelArgs)\n                \n            \n\n\n            \n                \n                    Defined in src/providers/PaginateModel.provider.ts:57\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    args\n                                    \n                                                PaginateModelArgs\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@nestjs/common';\nimport { FilterQuery, Document, Model } from 'mongoose';\n\nexport interface CollationDocument {\n  locale: string;\n  caseLevel: boolean;\n  caseFirst: string;\n  strength: number;\n  numericOrdering: boolean;\n  alternate: string;\n  maxVariable: string;\n  backwards: boolean;\n}\n\nexport interface PopulateOptions {\n  path: any;\n  select: any;\n  model: string | Model;\n  match: any;\n}\n\nexport interface PaginateOptions {\n  select?: Object | string;\n  sort?: Object | string;\n  page?: number;\n  limit?: number;\n  pagination?: boolean;\n  collation?: CollationDocument;\n  populate?: PopulateOptions;\n}\n\nexport interface PaginationResult {\n  docs: Array;\n  totalDocs: number;\n  limit: number;\n  hasPrevPage: boolean;\n  hasNextPage: boolean;\n  page: number;\n  totalPages: number;\n  prevPage: number | null;\n  nextPage: number | null;\n}\n\nexport interface PaginateModelArgs {\n  model: Model;\n  query?: (FilterQuery & Document) | {};\n  options?: PaginateOptions;\n}\n\n// model: Model,\n// query?: (FilterQuery & Document) | {},\n// options: PaginateOptions = {},\n\n@Injectable()\nexport class PaginateModel {\n  public async paginate(args: PaginateModelArgs): Promise {\n    const { model, query, options = {} } = args;\n\n    const {\n      select = {},\n      sort = {},\n      page = 1,\n      limit = 10,\n      pagination = true,\n      collation,\n      populate,\n    } = options;\n    const startIndex = (page - 1) * limit;\n    const endIndex = page * limit;\n    const dataLength = await model.countDocuments().exec();\n    const results: PaginationResult = {\n      docs: [],\n      totalDocs: null,\n      limit,\n      hasPrevPage: startIndex > 0,\n      hasNextPage: endIndex  0 ? page - 1 : null,\n      nextPage: endIndex \n    \n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/PaginateModelArgs.html":{"url":"interfaces/PaginateModelArgs.html","title":"interface - PaginateModelArgs","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  PaginateModelArgs\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/providers/PaginateModel.provider.ts\n        \n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        model\n                                \n                                \n                                            Optional\n                                        options\n                                \n                                \n                                            Optional\n                                        query\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        model\n                                    \n                                \n                                \n                                    \n                                        model:     Model\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     Model\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        options\n                                    \n                                \n                                \n                                    \n                                        options:         PaginateOptions\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         PaginateOptions\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        query\n                                    \n                                \n                                \n                                    \n                                        query:      | literal type\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :      | literal type\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { Injectable } from '@nestjs/common';\nimport { FilterQuery, Document, Model } from 'mongoose';\n\nexport interface CollationDocument {\n  locale: string;\n  caseLevel: boolean;\n  caseFirst: string;\n  strength: number;\n  numericOrdering: boolean;\n  alternate: string;\n  maxVariable: string;\n  backwards: boolean;\n}\n\nexport interface PopulateOptions {\n  path: any;\n  select: any;\n  model: string | Model;\n  match: any;\n}\n\nexport interface PaginateOptions {\n  select?: Object | string;\n  sort?: Object | string;\n  page?: number;\n  limit?: number;\n  pagination?: boolean;\n  collation?: CollationDocument;\n  populate?: PopulateOptions;\n}\n\nexport interface PaginationResult {\n  docs: Array;\n  totalDocs: number;\n  limit: number;\n  hasPrevPage: boolean;\n  hasNextPage: boolean;\n  page: number;\n  totalPages: number;\n  prevPage: number | null;\n  nextPage: number | null;\n}\n\nexport interface PaginateModelArgs {\n  model: Model;\n  query?: (FilterQuery & Document) | {};\n  options?: PaginateOptions;\n}\n\n// model: Model,\n// query?: (FilterQuery & Document) | {},\n// options: PaginateOptions = {},\n\n@Injectable()\nexport class PaginateModel {\n  public async paginate(args: PaginateModelArgs): Promise {\n    const { model, query, options = {} } = args;\n\n    const {\n      select = {},\n      sort = {},\n      page = 1,\n      limit = 10,\n      pagination = true,\n      collation,\n      populate,\n    } = options;\n    const startIndex = (page - 1) * limit;\n    const endIndex = page * limit;\n    const dataLength = await model.countDocuments().exec();\n    const results: PaginationResult = {\n      docs: [],\n      totalDocs: null,\n      limit,\n      hasPrevPage: startIndex > 0,\n      hasNextPage: endIndex  0 ? page - 1 : null,\n      nextPage: endIndex \n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/PaginateOptions.html":{"url":"interfaces/PaginateOptions.html","title":"interface - PaginateOptions","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  PaginateOptions\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/providers/PaginateModel.provider.ts\n        \n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                            Optional\n                                        collation\n                                \n                                \n                                            Optional\n                                        limit\n                                \n                                \n                                            Optional\n                                        page\n                                \n                                \n                                            Optional\n                                        pagination\n                                \n                                \n                                            Optional\n                                        populate\n                                \n                                \n                                            Optional\n                                        select\n                                \n                                \n                                            Optional\n                                        sort\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        collation\n                                    \n                                \n                                \n                                    \n                                        collation:         CollationDocument\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         CollationDocument\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        limit\n                                    \n                                \n                                \n                                    \n                                        limit:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        page\n                                    \n                                \n                                \n                                    \n                                        page:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        pagination\n                                    \n                                \n                                \n                                    \n                                        pagination:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        populate\n                                    \n                                \n                                \n                                    \n                                        populate:         PopulateOptions\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         PopulateOptions\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        select\n                                    \n                                \n                                \n                                    \n                                        select:     Object | string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     Object | string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        sort\n                                    \n                                \n                                \n                                    \n                                        sort:     Object | string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     Object | string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { Injectable } from '@nestjs/common';\nimport { FilterQuery, Document, Model } from 'mongoose';\n\nexport interface CollationDocument {\n  locale: string;\n  caseLevel: boolean;\n  caseFirst: string;\n  strength: number;\n  numericOrdering: boolean;\n  alternate: string;\n  maxVariable: string;\n  backwards: boolean;\n}\n\nexport interface PopulateOptions {\n  path: any;\n  select: any;\n  model: string | Model;\n  match: any;\n}\n\nexport interface PaginateOptions {\n  select?: Object | string;\n  sort?: Object | string;\n  page?: number;\n  limit?: number;\n  pagination?: boolean;\n  collation?: CollationDocument;\n  populate?: PopulateOptions;\n}\n\nexport interface PaginationResult {\n  docs: Array;\n  totalDocs: number;\n  limit: number;\n  hasPrevPage: boolean;\n  hasNextPage: boolean;\n  page: number;\n  totalPages: number;\n  prevPage: number | null;\n  nextPage: number | null;\n}\n\nexport interface PaginateModelArgs {\n  model: Model;\n  query?: (FilterQuery & Document) | {};\n  options?: PaginateOptions;\n}\n\n// model: Model,\n// query?: (FilterQuery & Document) | {},\n// options: PaginateOptions = {},\n\n@Injectable()\nexport class PaginateModel {\n  public async paginate(args: PaginateModelArgs): Promise {\n    const { model, query, options = {} } = args;\n\n    const {\n      select = {},\n      sort = {},\n      page = 1,\n      limit = 10,\n      pagination = true,\n      collation,\n      populate,\n    } = options;\n    const startIndex = (page - 1) * limit;\n    const endIndex = page * limit;\n    const dataLength = await model.countDocuments().exec();\n    const results: PaginationResult = {\n      docs: [],\n      totalDocs: null,\n      limit,\n      hasPrevPage: startIndex > 0,\n      hasNextPage: endIndex  0 ? page - 1 : null,\n      nextPage: endIndex \n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/PaginationResult.html":{"url":"interfaces/PaginationResult.html","title":"interface - PaginationResult","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  PaginationResult\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/providers/PaginateModel.provider.ts\n        \n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        docs\n                                \n                                \n                                        hasNextPage\n                                \n                                \n                                        hasPrevPage\n                                \n                                \n                                        limit\n                                \n                                \n                                        nextPage\n                                \n                                \n                                        page\n                                \n                                \n                                        prevPage\n                                \n                                \n                                        totalDocs\n                                \n                                \n                                        totalPages\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        docs\n                                    \n                                \n                                \n                                    \n                                        docs:     Array\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     Array\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        hasNextPage\n                                    \n                                \n                                \n                                    \n                                        hasNextPage:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        hasPrevPage\n                                    \n                                \n                                \n                                    \n                                        hasPrevPage:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        limit\n                                    \n                                \n                                \n                                    \n                                        limit:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        nextPage\n                                    \n                                \n                                \n                                    \n                                        nextPage:     number | null\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     number | null\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        page\n                                    \n                                \n                                \n                                    \n                                        page:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        prevPage\n                                    \n                                \n                                \n                                    \n                                        prevPage:     number | null\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     number | null\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        totalDocs\n                                    \n                                \n                                \n                                    \n                                        totalDocs:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        totalPages\n                                    \n                                \n                                \n                                    \n                                        totalPages:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { Injectable } from '@nestjs/common';\nimport { FilterQuery, Document, Model } from 'mongoose';\n\nexport interface CollationDocument {\n  locale: string;\n  caseLevel: boolean;\n  caseFirst: string;\n  strength: number;\n  numericOrdering: boolean;\n  alternate: string;\n  maxVariable: string;\n  backwards: boolean;\n}\n\nexport interface PopulateOptions {\n  path: any;\n  select: any;\n  model: string | Model;\n  match: any;\n}\n\nexport interface PaginateOptions {\n  select?: Object | string;\n  sort?: Object | string;\n  page?: number;\n  limit?: number;\n  pagination?: boolean;\n  collation?: CollationDocument;\n  populate?: PopulateOptions;\n}\n\nexport interface PaginationResult {\n  docs: Array;\n  totalDocs: number;\n  limit: number;\n  hasPrevPage: boolean;\n  hasNextPage: boolean;\n  page: number;\n  totalPages: number;\n  prevPage: number | null;\n  nextPage: number | null;\n}\n\nexport interface PaginateModelArgs {\n  model: Model;\n  query?: (FilterQuery & Document) | {};\n  options?: PaginateOptions;\n}\n\n// model: Model,\n// query?: (FilterQuery & Document) | {},\n// options: PaginateOptions = {},\n\n@Injectable()\nexport class PaginateModel {\n  public async paginate(args: PaginateModelArgs): Promise {\n    const { model, query, options = {} } = args;\n\n    const {\n      select = {},\n      sort = {},\n      page = 1,\n      limit = 10,\n      pagination = true,\n      collation,\n      populate,\n    } = options;\n    const startIndex = (page - 1) * limit;\n    const endIndex = page * limit;\n    const dataLength = await model.countDocuments().exec();\n    const results: PaginationResult = {\n      docs: [],\n      totalDocs: null,\n      limit,\n      hasPrevPage: startIndex > 0,\n      hasNextPage: endIndex  0 ? page - 1 : null,\n      nextPage: endIndex \n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/PopulateOptions.html":{"url":"interfaces/PopulateOptions.html","title":"interface - PopulateOptions","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  PopulateOptions\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/providers/PaginateModel.provider.ts\n        \n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        match\n                                \n                                \n                                        model\n                                \n                                \n                                        path\n                                \n                                \n                                        select\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        match\n                                    \n                                \n                                \n                                    \n                                        match:         any\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         any\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        model\n                                    \n                                \n                                \n                                    \n                                        model:     string | Model\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string | Model\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        path\n                                    \n                                \n                                \n                                    \n                                        path:         any\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         any\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        select\n                                    \n                                \n                                \n                                    \n                                        select:         any\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         any\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { Injectable } from '@nestjs/common';\nimport { FilterQuery, Document, Model } from 'mongoose';\n\nexport interface CollationDocument {\n  locale: string;\n  caseLevel: boolean;\n  caseFirst: string;\n  strength: number;\n  numericOrdering: boolean;\n  alternate: string;\n  maxVariable: string;\n  backwards: boolean;\n}\n\nexport interface PopulateOptions {\n  path: any;\n  select: any;\n  model: string | Model;\n  match: any;\n}\n\nexport interface PaginateOptions {\n  select?: Object | string;\n  sort?: Object | string;\n  page?: number;\n  limit?: number;\n  pagination?: boolean;\n  collation?: CollationDocument;\n  populate?: PopulateOptions;\n}\n\nexport interface PaginationResult {\n  docs: Array;\n  totalDocs: number;\n  limit: number;\n  hasPrevPage: boolean;\n  hasNextPage: boolean;\n  page: number;\n  totalPages: number;\n  prevPage: number | null;\n  nextPage: number | null;\n}\n\nexport interface PaginateModelArgs {\n  model: Model;\n  query?: (FilterQuery & Document) | {};\n  options?: PaginateOptions;\n}\n\n// model: Model,\n// query?: (FilterQuery & Document) | {},\n// options: PaginateOptions = {},\n\n@Injectable()\nexport class PaginateModel {\n  public async paginate(args: PaginateModelArgs): Promise {\n    const { model, query, options = {} } = args;\n\n    const {\n      select = {},\n      sort = {},\n      page = 1,\n      limit = 10,\n      pagination = true,\n      collation,\n      populate,\n    } = options;\n    const startIndex = (page - 1) * limit;\n    const endIndex = page * limit;\n    const dataLength = await model.countDocuments().exec();\n    const results: PaginationResult = {\n      docs: [],\n      totalDocs: null,\n      limit,\n      hasPrevPage: startIndex > 0,\n      hasNextPage: endIndex  0 ? page - 1 : null,\n      nextPage: endIndex \n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/QuestionnaireBody.html":{"url":"interfaces/QuestionnaireBody.html","title":"interface - QuestionnaireBody","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  QuestionnaireBody\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/user/user.service.ts\n        \n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        answers\n                                \n                                \n                                        user\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        answers\n                                    \n                                \n                                \n                                    \n                                        answers:     Array\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     Array\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        user\n                                    \n                                \n                                \n                                    \n                                        user:     literal type\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     literal type\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { Injectable } from '@nestjs/common';\nimport { InjectModel } from '@nestjs/mongoose';\nimport { Model } from 'mongoose';\nimport { hashPassword } from 'shared/hashing';\nimport { UserDetails } from './dto/create-user.dto';\nimport { Material, MaterialDocument } from './schemas/files.schema';\nimport { Student, StudentDocument } from './schemas/student.schema';\nimport { Tutor, TutorDocument } from './schemas/tutor.schema';\n\nexport type User = {\n  userId: number;\n  username: string;\n  password: string;\n};\n\nexport interface QuestionnaireBody {\n  answers: Array;\n  user: {\n    id: string;\n    studentNumber: string;\n  };\n}\n\n@Injectable()\nexport class UserService {\n  constructor(\n    @InjectModel(Material.name) private materialModel: Model,\n    @InjectModel(Student.name) private studentModel: Model,\n    @InjectModel(Tutor.name) private tutorModel: Model,\n  ) {}\n\n  async findOne(username: string): Promise {\n    const emailPattern = /^[a-zA-Z0-9._-]+@[a-zA-Z0-9.-]+\\.[a-zA-Z]{2,4}$/;\n    const isEmail = emailPattern.test(username);\n    let user = null;\n    if (isEmail) {\n      user = await this.tutorModel.findOne({ email: username }).exec();\n    } else {\n      user = await this.studentModel\n        .findOne({ studentNumber: username })\n        .exec();\n    }\n    return user;\n  }\n\n  async profile({ id, isStudent }: { id: string; isStudent: boolean }) {\n    try {\n      let user = null;\n      if (!isStudent) {\n        user = await this.tutorModel.findById(id);\n      } else {\n        user = await this.studentModel.findById(id);\n      }\n      return user;\n    } catch (error) {\n      console.log(error);\n    }\n  }\n\n  async createStudent(body: UserDetails): Promise {\n    const user = body;\n    try {\n      user.password = await hashPassword(user.password);\n      const existingUserByEmail = await this.studentModel\n        .findOne({ email: user.email })\n        .exec();\n      if (existingUserByEmail) {\n        throw new Error(`A user with this email (${user.email}) exist`);\n      }\n      const existingUserByStudentNumber = await this.studentModel\n        .findOne({ studentNumber: user.studentNumber })\n        .exec();\n      if (existingUserByStudentNumber) {\n        throw new Error(\n          `A user with this number (${user.studentNumber}) exist`,\n        );\n      }\n\n      const newUser = new this.studentModel(user);\n      const savedUser = await newUser.save();\n      // const { password, ...u } = newUser;\n      return savedUser;\n    } catch (error) {\n      throw new Error(error);\n    }\n  }\n\n  async createTutor(body: UserDetails): Promise {\n    const user = body;\n    try {\n      user.password = await hashPassword(user.password);\n      const existingUserByEmail = await this.tutorModel\n        .findOne({ email: user.email })\n        .exec();\n      if (existingUserByEmail) {\n        throw new Error(`A user with this email (${user.email}) exist`);\n      }\n      const newUser = new this.tutorModel(user);\n      const savedUser = await newUser.save();\n      // const { password, ...u } = newUser;\n      return savedUser;\n    } catch (error) {\n      throw new Error(error);\n    }\n  }\n\n  async uploadFile(body) {\n    const newFile = new this.materialModel(body);\n    return newFile;\n  }\n\n  async determine(body: QuestionnaireBody) {\n    const { answers, user } = body;\n\n    const learningStyle = [];\n\n    const formattedAnswers = answers.map((i) => Number(i));\n    const activistAnswers = formattedAnswers.slice(0, 8);\n    const pragmatistAnswers = formattedAnswers.slice(9, 17);\n    const reflectorAnswers = formattedAnswers.slice(18, 26);\n    const theoristAnswers = formattedAnswers.slice(27, 35);\n\n    const getSum = (ans: number[]) =>\n      ans.reduce((prev, current) => prev + current);\n\n    const activistSum = getSum(activistAnswers);\n\n    const pragmatistSum = getSum(pragmatistAnswers);\n\n    const reflectorSum = getSum(reflectorAnswers);\n\n    const theoristSum = getSum(theoristAnswers);\n\n    const _r = [activistSum, pragmatistSum, reflectorSum, theoristSum];\n    const learningStyles = ['activist', 'pragmatist', 'reflector', 'theorist'];\n\n    if (_r[0] > _r[1] && _r[0] > _r[2] && _r[0] > _r[3]) {\n      learningStyle.push('activist');\n    } else if (_r[1] > _r[0] && _r[1] > _r[2] && _r[1] > _r[3]) {\n      learningStyle.push('pragmatist');\n    } else if (_r[2] > _r[0] && _r[2] > _r[1] && _r[2] > _r[3]) {\n      learningStyle.push('reflector');\n    } else if (_r[3] > _r[0] && _r[3] > _r[1] && _r[3] > _r[2]) {\n      learningStyle.push('theorist');\n    } else {\n      _r.forEach((i, index) => {\n        if (_r[index] == _r[index + 1]) {\n          learningStyle.push(learningStyles[index], learningStyles[index + 1]);\n        }\n        return;\n      });\n    }\n\n    await this.studentModel.updateOne({ _id: user.id }, { learningStyle });\n    return await this.studentModel.findOne({ _id: user.id }).exec();\n  }\n}\n\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"guards/RolesGaurd.html":{"url":"guards/RolesGaurd.html","title":"guard - RolesGaurd","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n    Guards\n    RolesGaurd\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n        \n            \n            File\n            \n            \n                src/guards/roles.guard.ts\n            \n\n\n\n\n\n                \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                canActivate\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n                \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            canActivate\n                        \n                        \n                    \n                \n            \n            \n                \ncanActivate(context: ExecutionContext)\n                \n            \n\n\n            \n                \n                    Defined in src/guards/roles.guard.ts:6\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    context\n                                    \n                                            ExecutionContext\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     boolean | Promise | Observable\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n        \n\n\n        \n            import { CanActivate, ExecutionContext, Injectable } from '@nestjs/common';\nimport { Observable } from 'rxjs';\n\n@Injectable()\nexport class RolesGaurd implements CanActivate {\n  canActivate(\n    context: ExecutionContext,\n  ): boolean | Promise | Observable {\n    const request = context.switchToHttp().getRequest();\n    console.log(request.body);\n    return true;\n  }\n}\n\n        \n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/Student.html":{"url":"classes/Student.html","title":"class - Student","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  Student\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/user/schemas/student.schema.ts\n        \n\n\n\n            \n                Implements\n            \n            \n                            Learner\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                email\n                            \n                            \n                                firstname\n                            \n                            \n                                isStudent\n                            \n                            \n                                lastname\n                            \n                            \n                                learningStyle\n                            \n                            \n                                level\n                            \n                            \n                                password\n                            \n                            \n                                studentNumber\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            email\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Prop({unique: true})\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/user/schemas/student.schema.ts:19\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            firstname\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Prop()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/user/schemas/student.schema.ts:10\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            isStudent\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         boolean\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Prop()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/user/schemas/student.schema.ts:28\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            lastname\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Prop()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/user/schemas/student.schema.ts:13\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            learningStyle\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     Array\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Prop(undefined)\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/user/schemas/student.schema.ts:25\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            level\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Prop()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/user/schemas/student.schema.ts:16\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            password\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Prop()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/user/schemas/student.schema.ts:31\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            studentNumber\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Prop({unique: true})\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/user/schemas/student.schema.ts:22\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { Prop, Schema, SchemaFactory } from '@nestjs/mongoose';\nimport { Document } from 'mongoose';\nimport { Learner } from 'user/interfaces/user.interface';\n\nexport type StudentDocument = Student & Document;\n\n@Schema()\nexport class Student implements Learner {\n  @Prop()\n  firstname: string;\n\n  @Prop()\n  lastname: string;\n\n  @Prop()\n  level: string;\n\n  @Prop({ unique: true })\n  email: string;\n\n  @Prop({ unique: true })\n  studentNumber: string;\n\n  @Prop([String])\n  learningStyle: Array;\n\n  @Prop()\n  isStudent: boolean;\n\n  @Prop()\n  password: string;\n}\n\nconst StudentSchema = SchemaFactory.createForClass(Student);\n\nStudentSchema.virtual('fullName').get(function () {\n  return `${this.firstname} ${this.surname} ${this.othernames}`;\n});\n\nexport { StudentSchema };\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/Todo.html":{"url":"interfaces/Todo.html","title":"interface - Todo","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  Todo\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app.service.ts\n        \n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        Completed\n                                \n                                \n                                        Id\n                                \n                                \n                                        Title\n                                \n                                \n                                        UserId\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        Completed\n                                    \n                                \n                                \n                                    \n                                        Completed:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        Id\n                                    \n                                \n                                \n                                    \n                                        Id:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        Title\n                                    \n                                \n                                \n                                    \n                                        Title:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        UserId\n                                    \n                                \n                                \n                                    \n                                        UserId:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { HttpService, Injectable } from '@nestjs/common';\nimport { Observable } from 'rxjs';\nimport { AxiosResponse } from 'axios';\n\nexport interface Todo {\n  UserId: number;\n  Id: number;\n  Title: string;\n  Completed: boolean;\n}\n\n@Injectable()\nexport class AppService {\n  constructor(private httpService: HttpService) {}\n  getHello(): string {\n    return 'Hello World!';\n  }\n\n  getTodos(): Observable> {\n    return this.httpService.get('https://jsonplaceholder.typicode.com/todos');\n  }\n}\n\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/Tutor.html":{"url":"classes/Tutor.html","title":"class - Tutor","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  Tutor\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/user/schemas/tutor.schema.ts\n        \n\n\n\n            \n                Implements\n            \n            \n                            Author\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                coursesCreated\n                            \n                            \n                                email\n                            \n                            \n                                firstname\n                            \n                            \n                                isStudent\n                            \n                            \n                                lastname\n                            \n                            \n                                password\n                            \n                            \n                                title\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            coursesCreated\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Array\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Prop({type: undefined})\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/user/schemas/tutor.schema.ts:30\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            email\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Prop({unique: true})\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/user/schemas/tutor.schema.ts:21\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            firstname\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Prop()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/user/schemas/tutor.schema.ts:12\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            isStudent\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         boolean\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Prop()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/user/schemas/tutor.schema.ts:27\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            lastname\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Prop()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/user/schemas/tutor.schema.ts:15\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            password\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Prop()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/user/schemas/tutor.schema.ts:18\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            title\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Prop()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/user/schemas/tutor.schema.ts:24\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { Prop, Schema, SchemaFactory } from '@nestjs/mongoose';\nimport { Course } from 'feed/interfaces/feed.interface';\nimport * as mongoose from 'mongoose';\nimport { Document } from 'mongoose';\nimport { Author } from 'user/interfaces/user.interface';\n\nexport type TutorDocument = Tutor & Document;\n\n@Schema()\nexport class Tutor implements Author {\n  @Prop()\n  firstname: string;\n\n  @Prop()\n  lastname: string;\n\n  @Prop()\n  password: string;\n\n  @Prop({ unique: true })\n  email: string;\n\n  @Prop()\n  title: string;\n\n  @Prop()\n  isStudent: boolean;\n\n  @Prop({ type: [{ type: mongoose.Schema.Types.ObjectId, ref: 'Course' }] })\n  coursesCreated: Array;\n}\n\nexport const TutorSchema = SchemaFactory.createForClass(Tutor);\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/User.html":{"url":"interfaces/User.html","title":"interface - User","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  User\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/user/interfaces/user.interface.ts\n        \n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                            Optional\n                                        _id\n                                \n                                \n                                        email\n                                \n                                \n                                        firstname\n                                \n                                \n                                        isStudent\n                                \n                                \n                                        lastname\n                                \n                                \n                                        password\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        _id\n                                    \n                                \n                                \n                                    \n                                        _id:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        email\n                                    \n                                \n                                \n                                    \n                                        email:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        firstname\n                                    \n                                \n                                \n                                    \n                                        firstname:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        isStudent\n                                    \n                                \n                                \n                                    \n                                        isStudent:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        lastname\n                                    \n                                \n                                \n                                    \n                                        lastname:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        password\n                                    \n                                \n                                \n                                    \n                                        password:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { Course } from 'feed/interfaces/feed.interface';\n\nexport interface User {\n  _id?: string;\n  firstname: string;\n  lastname: string;\n  email: string;\n  password: string;\n  isStudent: boolean;\n}\n\nexport interface Author extends User {\n  title: string;\n  coursesCreated?: Array;\n}\n\nexport interface Learner extends User {\n  level: string;\n  studentNumber: string;\n  learningStyle?: Array;\n}\n\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"controllers/UserController.html":{"url":"controllers/UserController.html","title":"controller - UserController","body":"\n                   \n\n\n\n\n\n\n  Controllers\n  UserController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/user/user.controller.ts\n        \n\n            \n                Prefix\n            \n            \n                users\n            \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                determineLearningStyle\n                            \n                            \n                                    Async\n                                getProfile\n                            \n                            \n                                    Async\n                                registerStudent\n                            \n                            \n                                    Async\n                                registerTutor\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            determineLearningStyle\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    determineLearningStyle(body, user)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @UseGuards(JwtAuthGuard)@Post('learning-style')\n                \n            \n\n            \n                \n                    Defined in src/user/user.controller.ts:86\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    body\n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    user\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     {}\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            getProfile\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    getProfile(user)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @UseGuards(JwtAuthGuard)@Get('profile')\n                \n            \n\n            \n                \n                    Defined in src/user/user.controller.ts:46\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    user\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     {}\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            registerStudent\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    registerStudent(body: UserDetails)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Post('register/student')@UsePipes(new JoiValidationPipe())\n                \n            \n\n            \n                \n                    Defined in src/user/user.controller.ts:57\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    body\n                                    \n                                                UserDetails\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     {}\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            registerTutor\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    registerTutor(body: UserDetails)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Post('register/tutor')@UsePipes(new JoiValidationPipe())\n                \n            \n\n            \n                \n                    Defined in src/user/user.controller.ts:72\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    body\n                                    \n                                                UserDetails\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     {}\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n\n\n    \n        import {\n  BadRequestException,\n  Body,\n  Controller,\n  Get,\n  NotFoundException,\n  Post,\n  UnauthorizedException,\n  UseGuards,\n  UsePipes,\n} from '@nestjs/common';\nimport { JoiValidationPipe } from 'shared/joiValidation.pipe';\nimport { UserDetails } from './dto/create-user.dto';\nimport {\n  createTutorSchema,\n  createStudentSchema,\n} from './schemas/validation/create-user.schema';\nimport { UserService } from './user.service';\nimport { JwtAuthGuard } from 'auth/jwt-auth.guard';\nimport { User } from 'decotators/user.decorator';\n// import { RolesGaurd } from 'guards/roles.guard';\n\nfunction formatUserResponseData(data: any): Omit {\n  const user: Omit = {\n    firstname: data.firstname,\n    _id: data._id,\n    lastname: data.lastname,\n    email: data.email,\n    isStudent: data.isStudent,\n    title: data.title,\n    coursesCreated: data.coursesCreated,\n    level: data.level,\n    studentNumber: data.studentNumber,\n    learningStyle: data.learningStyle,\n  };\n\n  return user;\n}\n\n@Controller('users')\nexport class UserController {\n  constructor(private userService: UserService) {}\n\n  @UseGuards(JwtAuthGuard)\n  @Get('profile')\n  async getProfile(@User() user) {\n    try {\n      const u = await this.userService.profile(user);\n      return { success: true, data: { ...formatUserResponseData(u) } };\n    } catch (err) {\n      throw new NotFoundException(err.message);\n    }\n  }\n\n  @Post('register/student')\n  @UsePipes(new JoiValidationPipe(createStudentSchema))\n  async registerStudent(@Body() body: UserDetails) {\n    try {\n      const createdUser = await this.userService.createStudent(body);\n      return {\n        success: true,\n        data: { ...formatUserResponseData(createdUser) },\n      };\n    } catch (error) {\n      console.log(error.keyValue);\n      throw new BadRequestException(error.message);\n    }\n  }\n\n  @Post('register/tutor')\n  @UsePipes(new JoiValidationPipe(createTutorSchema))\n  async registerTutor(@Body() body: UserDetails) {\n    try {\n      const createdUser = await this.userService.createTutor(body);\n      return {\n        success: true,\n        data: { ...formatUserResponseData(createdUser) },\n      };\n    } catch (error) {\n      throw new BadRequestException(error.message);\n    }\n  }\n\n  @UseGuards(JwtAuthGuard)\n  @Post('learning-style')\n  async determineLearningStyle(@Body() body, @User() user) {\n    try {\n      if (!user.isStudent) {\n        throw new UnauthorizedException('Only student are allowed');\n      }\n      const updatedUser = await this.userService.determine({\n        answers: body.answers,\n        user,\n      });\n      return {\n        success: true,\n        data: { ...formatUserResponseData(updatedUser) },\n      };\n    } catch (error) {\n      throw new BadRequestException(error.message);\n    }\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/UserModule.html":{"url":"modules/UserModule.html","title":"module - UserModule","body":"\n                   \n\n\n\n\n    Modules\n    UserModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_UserModule\n\n\n\ncluster_UserModule_exports\n\n\n\ncluster_UserModule_providers\n\n\n\n\nUserService \n\nUserService \n\n\n\nUserModule\n\nUserModule\n\nUserService  -->\n\nUserModule->UserService \n\n\n\n\n\nUserService\n\nUserService\n\nUserModule -->\n\nUserService->UserModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/user/user.module.ts\n        \n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            UserService\n                        \n                    \n                \n                \n                    Controllers\n                    \n                        \n                            UserController\n                        \n                    \n                \n                \n                    Exports\n                    \n                        \n                            UserService\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Module } from '@nestjs/common';\nimport { ModelDefinition, MongooseModule } from '@nestjs/mongoose';\nimport { Material, MaterialSchema } from './schemas/files.schema';\nimport { Student, StudentSchema } from './schemas/student.schema';\nimport { Tutor, TutorSchema } from './schemas/tutor.schema';\nimport { UserController } from './user.controller';\nimport { UserService } from './user.service';\n\nconst models: ModelDefinition[] = [\n  {\n    name: Material.name,\n    schema: MaterialSchema,\n  },\n  {\n    name: Student.name,\n    schema: StudentSchema,\n  },\n  {\n    name: Tutor.name,\n    schema: TutorSchema,\n  },\n];\n\n@Module({\n  imports: [MongooseModule.forFeature(models)],\n  providers: [UserService],\n  controllers: [UserController],\n  exports: [UserService],\n})\nexport class UserModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/UserService.html":{"url":"injectables/UserService.html","title":"injectable - UserService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  UserService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/user/user.service.ts\n        \n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                createStudent\n                            \n                            \n                                    Async\n                                createTutor\n                            \n                            \n                                    Async\n                                determine\n                            \n                            \n                                    Async\n                                findOne\n                            \n                            \n                                    Async\n                                profile\n                            \n                            \n                                    Async\n                                uploadFile\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(materialModel: Model, studentModel: Model, tutorModel: Model)\n                    \n                \n                        \n                            \n                                Defined in src/user/user.service.ts:25\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        materialModel\n                                                  \n                                                        \n                                                                        Model\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        studentModel\n                                                  \n                                                        \n                                                                        Model\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        tutorModel\n                                                  \n                                                        \n                                                                        Model\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            createStudent\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    createStudent(body: UserDetails)\n                \n            \n\n\n            \n                \n                    Defined in src/user/user.service.ts:60\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    body\n                                    \n                                                UserDetails\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            createTutor\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    createTutor(body: UserDetails)\n                \n            \n\n\n            \n                \n                    Defined in src/user/user.service.ts:88\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    body\n                                    \n                                                UserDetails\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            determine\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    determine(body: QuestionnaireBody)\n                \n            \n\n\n            \n                \n                    Defined in src/user/user.service.ts:112\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    body\n                                    \n                                                QuestionnaireBody\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     {}\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            findOne\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    findOne(username: string)\n                \n            \n\n\n            \n                \n                    Defined in src/user/user.service.ts:32\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    username\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            profile\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    profile(undefined: literal type)\n                \n            \n\n\n            \n                \n                    Defined in src/user/user.service.ts:46\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    \n                                            literal type\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     {}\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            uploadFile\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    uploadFile(body)\n                \n            \n\n\n            \n                \n                    Defined in src/user/user.service.ts:107\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    body\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     {}\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@nestjs/common';\nimport { InjectModel } from '@nestjs/mongoose';\nimport { Model } from 'mongoose';\nimport { hashPassword } from 'shared/hashing';\nimport { UserDetails } from './dto/create-user.dto';\nimport { Material, MaterialDocument } from './schemas/files.schema';\nimport { Student, StudentDocument } from './schemas/student.schema';\nimport { Tutor, TutorDocument } from './schemas/tutor.schema';\n\nexport type User = {\n  userId: number;\n  username: string;\n  password: string;\n};\n\nexport interface QuestionnaireBody {\n  answers: Array;\n  user: {\n    id: string;\n    studentNumber: string;\n  };\n}\n\n@Injectable()\nexport class UserService {\n  constructor(\n    @InjectModel(Material.name) private materialModel: Model,\n    @InjectModel(Student.name) private studentModel: Model,\n    @InjectModel(Tutor.name) private tutorModel: Model,\n  ) {}\n\n  async findOne(username: string): Promise {\n    const emailPattern = /^[a-zA-Z0-9._-]+@[a-zA-Z0-9.-]+\\.[a-zA-Z]{2,4}$/;\n    const isEmail = emailPattern.test(username);\n    let user = null;\n    if (isEmail) {\n      user = await this.tutorModel.findOne({ email: username }).exec();\n    } else {\n      user = await this.studentModel\n        .findOne({ studentNumber: username })\n        .exec();\n    }\n    return user;\n  }\n\n  async profile({ id, isStudent }: { id: string; isStudent: boolean }) {\n    try {\n      let user = null;\n      if (!isStudent) {\n        user = await this.tutorModel.findById(id);\n      } else {\n        user = await this.studentModel.findById(id);\n      }\n      return user;\n    } catch (error) {\n      console.log(error);\n    }\n  }\n\n  async createStudent(body: UserDetails): Promise {\n    const user = body;\n    try {\n      user.password = await hashPassword(user.password);\n      const existingUserByEmail = await this.studentModel\n        .findOne({ email: user.email })\n        .exec();\n      if (existingUserByEmail) {\n        throw new Error(`A user with this email (${user.email}) exist`);\n      }\n      const existingUserByStudentNumber = await this.studentModel\n        .findOne({ studentNumber: user.studentNumber })\n        .exec();\n      if (existingUserByStudentNumber) {\n        throw new Error(\n          `A user with this number (${user.studentNumber}) exist`,\n        );\n      }\n\n      const newUser = new this.studentModel(user);\n      const savedUser = await newUser.save();\n      // const { password, ...u } = newUser;\n      return savedUser;\n    } catch (error) {\n      throw new Error(error);\n    }\n  }\n\n  async createTutor(body: UserDetails): Promise {\n    const user = body;\n    try {\n      user.password = await hashPassword(user.password);\n      const existingUserByEmail = await this.tutorModel\n        .findOne({ email: user.email })\n        .exec();\n      if (existingUserByEmail) {\n        throw new Error(`A user with this email (${user.email}) exist`);\n      }\n      const newUser = new this.tutorModel(user);\n      const savedUser = await newUser.save();\n      // const { password, ...u } = newUser;\n      return savedUser;\n    } catch (error) {\n      throw new Error(error);\n    }\n  }\n\n  async uploadFile(body) {\n    const newFile = new this.materialModel(body);\n    return newFile;\n  }\n\n  async determine(body: QuestionnaireBody) {\n    const { answers, user } = body;\n\n    const learningStyle = [];\n\n    const formattedAnswers = answers.map((i) => Number(i));\n    const activistAnswers = formattedAnswers.slice(0, 8);\n    const pragmatistAnswers = formattedAnswers.slice(9, 17);\n    const reflectorAnswers = formattedAnswers.slice(18, 26);\n    const theoristAnswers = formattedAnswers.slice(27, 35);\n\n    const getSum = (ans: number[]) =>\n      ans.reduce((prev, current) => prev + current);\n\n    const activistSum = getSum(activistAnswers);\n\n    const pragmatistSum = getSum(pragmatistAnswers);\n\n    const reflectorSum = getSum(reflectorAnswers);\n\n    const theoristSum = getSum(theoristAnswers);\n\n    const _r = [activistSum, pragmatistSum, reflectorSum, theoristSum];\n    const learningStyles = ['activist', 'pragmatist', 'reflector', 'theorist'];\n\n    if (_r[0] > _r[1] && _r[0] > _r[2] && _r[0] > _r[3]) {\n      learningStyle.push('activist');\n    } else if (_r[1] > _r[0] && _r[1] > _r[2] && _r[1] > _r[3]) {\n      learningStyle.push('pragmatist');\n    } else if (_r[2] > _r[0] && _r[2] > _r[1] && _r[2] > _r[3]) {\n      learningStyle.push('reflector');\n    } else if (_r[3] > _r[0] && _r[3] > _r[1] && _r[3] > _r[2]) {\n      learningStyle.push('theorist');\n    } else {\n      _r.forEach((i, index) => {\n        if (_r[index] == _r[index + 1]) {\n          learningStyle.push(learningStyles[index], learningStyles[index + 1]);\n        }\n        return;\n      });\n    }\n\n    await this.studentModel.updateOne({ _id: user.id }, { learningStyle });\n    return await this.studentModel.findOne({ _id: user.id }).exec();\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"coverage.html":{"url":"coverage.html","title":"coverage - coverage","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n    Documentation coverage\n\n\n\n    \n\n\n\n    \n        \n            File\n            Type\n            Identifier\n            Statements\n        \n    \n    \n        \n            \n                \n                src/app.controller.ts\n            \n            controller\n            AppController\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                src/app.service.ts\n            \n            injectable\n            AppService\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                src/app.service.ts\n            \n            interface\n            Todo\n            \n                0 %\n                (0/5)\n            \n        \n        \n            \n                \n                src/auth/auth.service.ts\n            \n            injectable\n            AuthService\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                src/auth/jwt-auth.guard.ts\n            \n            injectable\n            JwtAuthGuard\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/auth/jwt.strategy.ts\n            \n            injectable\n            JwtStrategy\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/auth/local-auth.guard.ts\n            \n            injectable\n            LocalAuthGuard\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/auth/local.strategy.ts\n            \n            injectable\n            LocalStrategy\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/config/configuration.ts\n            \n            injectable\n            JwtConfigService\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/config/configuration.ts\n            \n            injectable\n            MongooseConfigService\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/config/configuration.ts\n            \n            injectable\n            MulterConfigService\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/config/configuration.ts\n            \n            variable\n            getFilename\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/config/constants.ts\n            \n            variable\n            CONFIG_MODULE_OPTIONS\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/config/modules.ts\n            \n            variable\n            modules\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/config/mongooseModelFactories.ts\n            \n            variable\n            mongooseModelFactories\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/decotators/user.decorator.ts\n            \n            variable\n            User\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/feed/dto/create-feed.dto.ts\n            \n            interface\n            CreateFeedDTO\n            \n                0 %\n                (0/12)\n            \n        \n        \n            \n                \n                src/feed/feed.controller.ts\n            \n            controller\n            FeedController\n            \n                0 %\n                (0/5)\n            \n        \n        \n            \n                \n                src/feed/feed.module.ts\n            \n            variable\n            models\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/feed/feed.service.ts\n            \n            injectable\n            FeedService\n            \n                0 %\n                (0/9)\n            \n        \n        \n            \n                \n                src/feed/feed.service.ts\n            \n            interface\n            FetchArg\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                src/feed/interfaces/feed-controller.interface.ts\n            \n            interface\n            IFeedController\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                src/feed/interfaces/feed-service.interface.ts\n            \n            interface\n            IFeedService\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                src/feed/interfaces/feed.interface.ts\n            \n            interface\n            Course\n            \n                0 %\n                (0/12)\n            \n        \n        \n            \n                \n                src/feed/interfaces/feed.interface.ts\n            \n            interface\n            Feed\n            \n                0 %\n                (0/5)\n            \n        \n        \n            \n                \n                src/feed/schemas/feed.schema.ts\n            \n            class\n            Feed\n            \n                0 %\n                (0/12)\n            \n        \n        \n            \n                \n                src/feed/schemas/feed.schema.ts\n            \n            variable\n            FeedSchema\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/feed/schemas/validation/create-feed.schema.ts\n            \n            variable\n            createFeedSchema\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/guards/roles.guard.ts\n            \n            guard\n            RolesGaurd\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/main.ts\n            \n            function\n            bootstrap\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/providers/PaginateModel.provider.ts\n            \n            injectable\n            PaginateModel\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/providers/PaginateModel.provider.ts\n            \n            interface\n            CollationDocument\n            \n                0 %\n                (0/9)\n            \n        \n        \n            \n                \n                src/providers/PaginateModel.provider.ts\n            \n            interface\n            PaginateModelArgs\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                src/providers/PaginateModel.provider.ts\n            \n            interface\n            PaginateOptions\n            \n                0 %\n                (0/8)\n            \n        \n        \n            \n                \n                src/providers/PaginateModel.provider.ts\n            \n            interface\n            PaginationResult\n            \n                0 %\n                (0/10)\n            \n        \n        \n            \n                \n                src/providers/PaginateModel.provider.ts\n            \n            interface\n            PopulateOptions\n            \n                0 %\n                (0/5)\n            \n        \n        \n            \n                \n                src/shared/handleFileStorage.ts\n            \n            variable\n            getFilename\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/shared/handleFileStorage.ts\n            \n            variable\n            handleFileStorage\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/shared/hashing.ts\n            \n            variable\n            hashPassword\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/shared/hashing.ts\n            \n            variable\n            validatePassword\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/shared/joiValidation.pipe.ts\n            \n            class\n            JoiValidationPipe\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/user/dto/create-user.dto.ts\n            \n            interface\n            CreateStudentDto\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/user/dto/create-user.dto.ts\n            \n            interface\n            CreateTutorDto\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/user/dto/create-user.dto.ts\n            \n            interface\n            CreateUserDto\n            \n                0 %\n                (0/5)\n            \n        \n        \n            \n                \n                src/user/interfaces/user.interface.ts\n            \n            interface\n            Author\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/user/interfaces/user.interface.ts\n            \n            interface\n            Learner\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                src/user/interfaces/user.interface.ts\n            \n            interface\n            User\n            \n                0 %\n                (0/7)\n            \n        \n        \n            \n                \n                src/user/schemas/files.schema.ts\n            \n            class\n            Material\n            \n                0 %\n                (0/5)\n            \n        \n        \n            \n                \n                src/user/schemas/files.schema.ts\n            \n            variable\n            MaterialSchema\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/user/schemas/student.schema.ts\n            \n            class\n            Student\n            \n                0 %\n                (0/9)\n            \n        \n        \n            \n                \n                src/user/schemas/student.schema.ts\n            \n            variable\n            StudentSchema\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/user/schemas/tutor.schema.ts\n            \n            class\n            Tutor\n            \n                0 %\n                (0/8)\n            \n        \n        \n            \n                \n                src/user/schemas/tutor.schema.ts\n            \n            variable\n            TutorSchema\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/user/schemas/validation/create-user.schema.ts\n            \n            variable\n            createStudentSchema\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/user/schemas/validation/create-user.schema.ts\n            \n            variable\n            createTutorSchema\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/user/user.controller.ts\n            \n            controller\n            UserController\n            \n                0 %\n                (0/5)\n            \n        \n        \n            \n                \n                src/user/user.controller.ts\n            \n            function\n            formatUserResponseData\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/user/user.module.ts\n            \n            variable\n            models\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/user/user.service.ts\n            \n            injectable\n            UserService\n            \n                0 %\n                (0/8)\n            \n        \n        \n            \n                \n                src/user/user.service.ts\n            \n            interface\n            QuestionnaireBody\n            \n                0 %\n                (0/3)\n            \n        \n    \n\n\n\n\n\n    new Tablesort(document.getElementById('coverage-table'));\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"dependencies.html":{"url":"dependencies.html","title":"package-dependencies - dependencies","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n        Dependencies\n    \n    \n        \n            @nestjs/common : ^7.6.15\n        \n            @nestjs/config : ^0.6.3\n        \n            @nestjs/core : ^7.6.15\n        \n            @nestjs/jwt : ^7.2.0\n        \n            @nestjs/mongoose : ^7.2.4\n        \n            @nestjs/passport : ^7.1.5\n        \n            @nestjs/platform-express : ^7.6.15\n        \n            @nestjs/serve-static : ^2.1.4\n        \n            @nestjs/swagger : ^4.8.0\n        \n            bcrypt : ^5.0.1\n        \n            hbs : ^4.1.2\n        \n            joi : ^17.4.0\n        \n            lodash : ^4.17.21\n        \n            mongoose : ^5.12.7\n        \n            mongoose-autopopulate : ^0.14.0\n        \n            mongoose-beautiful-unique-validation : ^7.1.1\n        \n            passport : ^0.4.1\n        \n            passport-jwt : ^4.0.0\n        \n            passport-local : ^1.0.0\n        \n            reflect-metadata : ^0.1.13\n        \n            rimraf : ^3.0.2\n        \n            rxjs : ^6.6.6\n        \n            swagger-ui-express : ^4.1.6\n    \n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/functions.html":{"url":"miscellaneous/functions.html","title":"miscellaneous-functions - functions","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n  Miscellaneous\n  Functions\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            bootstrap   (src/.../main.ts)\n                        \n                        \n                            formatUserResponseData   (src/.../user.controller.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    src/main.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        \n                            bootstrap\n                        \n                        \n                    \n                \n            \n            \n                \nbootstrap()\n                \n            \n\n\n\n\n        \n    \n    src/user/user.controller.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        \n                            formatUserResponseData\n                        \n                        \n                    \n                \n            \n            \n                \nformatUserResponseData(data: any)\n                \n            \n\n\n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    data\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Omit\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"index.html":{"url":"index.html","title":"getting-started - index","body":"\n                   \n\n\n  \n\n\n  A progressive Node.js framework for building efficient and scalable server-side applications.\n    \n\n\n\n\n\n\n\n\n  \n    \n  \n\n  \n\nDescription\nNest framework TypeScript starter repository.\nInstallation\n$ npm installRunning the app\n# development\n$ npm run start\n\n# watch mode\n$ npm run start:dev\n\n# production mode\n$ npm run start:prodTest\n# unit tests\n$ npm run test\n\n# e2e tests\n$ npm run test:e2e\n\n# test coverage\n$ npm run test:covSupport\nNest is an MIT-licensed open source project. It can grow thanks to the sponsors and support by the amazing backers. If you'd like to join them, please read more here.\nStay in touch\n\nAuthor - Kamil Myśliwiec\nWebsite - https://nestjs.com\nTwitter - @nestframework\n\nLicense\nNest is MIT licensed.\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules.html":{"url":"modules.html","title":"modules - modules","body":"\n                   \n\n\n\n\n    Modules\n\n\n    \n            \n                \n                    \n                        AppModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        AuthModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        FeedModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        UserModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n    \n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"overview.html":{"url":"overview.html","title":"overview - overview","body":"\n                   \n\n\n\n    Overview\n\n  \n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_AppModule\n\n\n\ncluster_AppModule_imports\n\n\n\ncluster_AppModule_providers\n\n\n\ncluster_AuthModule\n\n\n\ncluster_AuthModule_exports\n\n\n\ncluster_AuthModule_providers\n\n\n\ncluster_FeedModule\n\n\n\ncluster_FeedModule_providers\n\n\n\ncluster_UserModule\n\n\n\ncluster_UserModule_exports\n\n\n\ncluster_UserModule_providers\n\n\n\n\nAuthModule\n\nAuthModule\n\n\n\nAppModule\n\nAppModule\n\nAppModule -->\n\nAuthModule->AppModule\n\n\n\n\n\nAuthService \n\nAuthService \n\nAuthService  -->\n\nAuthModule->AuthService \n\n\n\n\n\nFeedModule\n\nFeedModule\n\nAppModule -->\n\nFeedModule->AppModule\n\n\n\n\n\nUserModule\n\nUserModule\n\nAuthModule -->\n\nUserModule->AuthModule\n\n\n\nAppModule -->\n\nUserModule->AppModule\n\n\n\n\n\nUserService \n\nUserService \n\nUserService  -->\n\nUserModule->UserService \n\n\n\n\n\nAppService\n\nAppService\n\nAppModule -->\n\nAppService->AppModule\n\n\n\n\n\nAuthService\n\nAuthService\n\nAuthModule -->\n\nAuthService->AuthModule\n\n\n\n\n\nJwtStrategy\n\nJwtStrategy\n\nAuthModule -->\n\nJwtStrategy->AuthModule\n\n\n\n\n\nLocalStrategy\n\nLocalStrategy\n\nAuthModule -->\n\nLocalStrategy->AuthModule\n\n\n\n\n\nFeedService\n\nFeedService\n\nFeedModule -->\n\nFeedService->FeedModule\n\n\n\n\n\nPaginateModel\n\nPaginateModel\n\nFeedModule -->\n\nPaginateModel->FeedModule\n\n\n\n\n\nUserService\n\nUserService\n\nUserModule -->\n\nUserService->UserModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n  \n\n    \n        \n            \n                \n                    \n                    \n                        4 Modules\n                    \n                \n            \n        \n        \n            \n                \n                    \n                    3 Controllers\n                \n            \n        \n        \n            \n                \n                    \n                    12 Injectables\n                \n            \n        \n        \n            \n                \n                    \n                    5 Classes\n                \n            \n        \n        \n            \n                \n                    \n                    1 Guard\n                \n            \n        \n        \n            \n                \n                    \n                    19 Interfaces\n                \n            \n        \n    \n\n\n \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/typealiases.html":{"url":"miscellaneous/typealiases.html","title":"miscellaneous-typealiases - typealiases","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n  Miscellaneous\n  Type aliases\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            FeedDocument   (src/.../feed.schema.ts)\n                        \n                        \n                            MaterialDocument   (src/.../files.schema.ts)\n                        \n                        \n                            StudentDocument   (src/.../student.schema.ts)\n                        \n                        \n                            TutorDocument   (src/.../tutor.schema.ts)\n                        \n                        \n                            User   (src/.../user.service.ts)\n                        \n                        \n                            UserDetails   (src/.../create-user.dto.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    src/feed/schemas/feed.schema.ts\n    \n    \n        \n            \n                \n                    \n                    FeedDocument\n                \n            \n            \n                \n                        \n\n                \n            \n        \n    \n    src/user/schemas/files.schema.ts\n    \n    \n        \n            \n                \n                    \n                    MaterialDocument\n                \n            \n            \n                \n                        \n\n                \n            \n        \n    \n    src/user/schemas/student.schema.ts\n    \n    \n        \n            \n                \n                    \n                    StudentDocument\n                \n            \n            \n                \n                        \n\n                \n            \n        \n    \n    src/user/schemas/tutor.schema.ts\n    \n    \n        \n            \n                \n                    \n                    TutorDocument\n                \n            \n            \n                \n                        \n\n                \n            \n        \n    \n    src/user/user.service.ts\n    \n    \n        \n            \n                \n                    \n                    User\n                \n            \n            \n                \n                        literal type\n\n                \n            \n        \n    \n    src/user/dto/create-user.dto.ts\n    \n    \n        \n            \n                \n                    \n                    UserDetails\n                \n            \n            \n                \n                        \n\n                \n            \n        \n    \n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/variables.html":{"url":"miscellaneous/variables.html","title":"miscellaneous-variables - variables","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n  Miscellaneous\n  Variables\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            CONFIG_MODULE_OPTIONS   (src/.../constants.ts)\n                        \n                        \n                            createFeedSchema   (src/.../create-feed.schema.ts)\n                        \n                        \n                            createStudentSchema   (src/.../create-user.schema.ts)\n                        \n                        \n                            createTutorSchema   (src/.../create-user.schema.ts)\n                        \n                        \n                            FeedSchema   (src/.../feed.schema.ts)\n                        \n                        \n                            getFilename   (src/.../configuration.ts)\n                        \n                        \n                            getFilename   (src/.../handleFileStorage.ts)\n                        \n                        \n                            handleFileStorage   (src/.../handleFileStorage.ts)\n                        \n                        \n                            hashPassword   (src/.../hashing.ts)\n                        \n                        \n                            MaterialSchema   (src/.../files.schema.ts)\n                        \n                        \n                            models   (src/.../feed.module.ts)\n                        \n                        \n                            models   (src/.../user.module.ts)\n                        \n                        \n                            modules   (src/.../modules.ts)\n                        \n                        \n                            mongooseModelFactories   (src/.../mongooseModelFactories.ts)\n                        \n                        \n                            StudentSchema   (src/.../student.schema.ts)\n                        \n                        \n                            TutorSchema   (src/.../tutor.schema.ts)\n                        \n                        \n                            User   (src/.../user.decorator.ts)\n                        \n                        \n                            validatePassword   (src/.../hashing.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    src/config/constants.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            CONFIG_MODULE_OPTIONS\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     ConfigModuleOptions\n\n                        \n                    \n                    \n                        \n                            Default value : {\n  isGlobal: true,\n  load: [configuration],\n}\n                        \n                    \n\n\n            \n        \n\n    src/feed/schemas/validation/create-feed.schema.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            createFeedSchema\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : Joi.object().keys({\n  title: Joi.string().required(),\n  course: Joi.string().required(),\n  courseCode: Joi.string().required(),\n  level: Joi.string().required(),\n  unit: Joi.string().required(),\n  content: Joi.string().required(),\n  learningStyle: Joi.string().required(),\n  createdBy: Joi.string().required(),\n})\n                        \n                    \n\n\n            \n        \n\n    src/user/schemas/validation/create-user.schema.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            createStudentSchema\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : Joi.object().keys({\n  email: Joi.string().email().required(),\n  firstname: Joi.string().required(),\n  lastname: Joi.string().required(),\n  level: Joi.string().required(),\n  password: Joi.string().min(6).required(),\n  learningStyle: Joi.string().allow(''),\n  isStudent: Joi.boolean().required(),\n  studentNumber: Joi.string().required(),\n})\n                        \n                    \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            createTutorSchema\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : Joi.object().keys({\n  email: Joi.string().email().required(),\n  firstname: Joi.string().required(),\n  lastname: Joi.string().required(),\n  password: Joi.string().min(6).required(),\n  isStudent: Joi.boolean().required().only().allow(false),\n  coursesCreated: Joi.array().allow(null),\n  title: Joi.string().required(),\n})\n                        \n                    \n\n\n            \n        \n\n    src/feed/schemas/feed.schema.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            FeedSchema\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : SchemaFactory.createForClass(Feed)\n                        \n                    \n\n\n            \n        \n\n    src/config/configuration.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            getFilename\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : (str: string) => _.split(str, '.')[0]\n                        \n                    \n\n\n            \n        \n\n    src/shared/handleFileStorage.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            getFilename\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : (str: string) => _.split(str, '.')[0]\n                        \n                    \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            handleFileStorage\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         object\n\n                        \n                    \n                    \n                        \n                            Default value : {\n  storage: (destination = './public/upload') => {\n    return diskStorage({\n      destination,\n      filename: (req, file, cb) => {\n        const name = getFilename(file.originalname);\n        return cb(null, `${name}${extname(file.originalname)}`);\n      },\n    });\n  },\n}\n                        \n                    \n\n\n            \n        \n\n    src/shared/hashing.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            hashPassword\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : async (password: string): Promise => {\n  const saltRounds = 10;\n  const salt = await bcrypt.genSalt(saltRounds);\n  const hash = await bcrypt.hash(password, salt);\n  return hash;\n}\n                        \n                    \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            validatePassword\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : async (\n  password: string,\n  hashed: string,\n): Promise => {\n  const match = await bcrypt.compare(password, hashed);\n  return match;\n}\n                        \n                    \n\n\n            \n        \n\n    src/user/schemas/files.schema.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            MaterialSchema\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : SchemaFactory.createForClass(Material)\n                        \n                    \n\n\n            \n        \n\n    src/feed/feed.module.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            models\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     ModelDefinition[]\n\n                        \n                    \n                    \n                        \n                            Default value : [\n  {\n    name: Feed.name,\n    schema: FeedSchema,\n  },\n]\n                        \n                    \n\n\n            \n        \n\n    src/user/user.module.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            models\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     ModelDefinition[]\n\n                        \n                    \n                    \n                        \n                            Default value : [\n  {\n    name: Material.name,\n    schema: MaterialSchema,\n  },\n  {\n    name: Student.name,\n    schema: StudentSchema,\n  },\n  {\n    name: Tutor.name,\n    schema: TutorSchema,\n  },\n]\n                        \n                    \n\n\n            \n        \n\n    src/config/modules.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            modules\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     any[]\n\n                        \n                    \n                    \n                        \n                            Default value : [\n  ConfigModule.forRoot(CONFIG_MODULE_OPTIONS),\n  MongooseModule.forRootAsync({\n    imports: [ConfigModule],\n    useClass: MongooseConfigService,\n  }),\n  MongooseModule.forFeatureAsync(mongooseModelFactories),\n  MulterModule.registerAsync({\n    imports: [ConfigModule],\n    useClass: MulterConfigService,\n  }),\n  FeedModule,\n  AuthModule,\n  UserModule,\n  HttpModule,\n]\n                        \n                    \n\n\n            \n        \n\n    src/config/mongooseModelFactories.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            mongooseModelFactories\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     AsyncModelFactory[]\n\n                        \n                    \n                    \n                        \n                            Default value : [\n  {\n    name: Student.name,\n    useFactory: () => {\n      const schema = StudentSchema;\n      schema.plugin(require('mongoose-beautiful-unique-validation'));\n      return schema;\n    },\n  },\n]\n                        \n                    \n\n\n            \n        \n\n    src/user/schemas/student.schema.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            StudentSchema\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : SchemaFactory.createForClass(Student)\n                        \n                    \n\n\n            \n        \n\n    src/user/schemas/tutor.schema.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            TutorSchema\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : SchemaFactory.createForClass(Tutor)\n                        \n                    \n\n\n            \n        \n\n    src/decotators/user.decorator.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            User\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : createParamDecorator(\n  (data: unknown, ctx: ExecutionContext) => {\n    const request = ctx.switchToHttp().getRequest();\n    return request.user;\n  },\n)\n                        \n                    \n\n\n            \n        \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"}}
}
